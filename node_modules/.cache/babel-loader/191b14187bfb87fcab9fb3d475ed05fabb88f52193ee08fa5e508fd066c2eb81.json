{"ast":null,"code":"import { r as registerInstance, h, a as Host, g as getElement } from './index-80864cdc.js';\nimport { g as getSvgContent, c as cleanSVG } from './icon-utils-6e2e898f.js';\nimport { g as getCss, m as mergeDeep, i as injectCSS } from './observeOptions-74693e66.js';\nimport { b as buildResponsiveStyles } from './breakpointCustom-9d1b1283.js';\nimport './color-4d62bb24.js';\nimport './mediaQuery-8afb3804.js';\nimport './text-styles-cd2dc550.js';\nconst PROGRESS_ICON_SIZE = {\n  tiny: 24,\n  small: 32,\n  medium: 48,\n  large: 54\n};\nconst createStyles = size => {\n  const styles = getCss({\n    '@global': {\n      ':host': {\n        display: 'inline-flex',\n        color: 'inherit'\n      },\n      '.content-wrapper': {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '8px'\n      },\n      i: Object.assign({\n        display: 'flex',\n        color: 'inherit'\n      }, mergeDeep(buildResponsiveStyles(size, sizeResponsive => ({\n        width: \"\".concat(PROGRESS_ICON_SIZE[sizeResponsive], \"px\"),\n        height: \"\".concat(PROGRESS_ICON_SIZE[sizeResponsive], \"px\")\n      })))),\n      svg: {\n        width: '100%',\n        height: '100%'\n      }\n    }\n  });\n  return styles;\n};\nconst DcUiProgressIcon = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ICONS_BASE_URL = 'https://dc-webtoolkit.azureedge.net/icons/';\n    this.name = 'dc_progress-icon';\n    this.key = 0;\n    this.svgContent = '';\n    this.size = 'medium';\n    this.message = undefined;\n  }\n  loadIcon() {\n    const url = \"\".concat(this.ICONS_BASE_URL).concat(this.name, \".svg\");\n    getSvgContent(url).then(svgContent => {\n      this.setIconContent(svgContent);\n    });\n  }\n  setIconContent(content) {\n    this.svgContent = cleanSVG(content);\n    const cleanContent = cleanSVG(content);\n    const el = this.host.shadowRoot.querySelector('i');\n    if (el) {\n      el.innerHTML = cleanContent;\n    }\n  }\n  componentWillUpdate() {\n    // reset old icon if there is any\n    if (this.svgContent) {\n      this.setIconContent('');\n    }\n  }\n  async componentWillLoad() {\n    this.loadIcon();\n  }\n  render() {\n    injectCSS(this.host, createStyles, this.size);\n    return h(Host, {\n      key: 'dcae5d63152592487235c0f5b46bf6bfb87b85e6'\n    }, h(\"div\", {\n      key: '7f14508739a721eac3105d996dc18a7afae69ea6',\n      class: \"content-wrapper\"\n    }, h(\"i\", {\n      key: this.key++\n    }), this.message && h(\"dc-ui-text\", {\n      key: 'f7ceda966290a4b85061a6968927bb881f59e93b',\n      variant: \"strong-mid-size-text\"\n    }, this.message)));\n  }\n  get host() {\n    return getElement(this);\n  }\n};\nexport { DcUiProgressIcon as dc_ui_progress_icon };","map":{"version":3,"names":["PROGRESS_ICON_SIZE","tiny","small","medium","large","createStyles","size","styles","getCss","display","color","flexDirection","alignItems","justifyContent","gap","i","Object","assign","mergeDeep","buildResponsiveStyles","sizeResponsive","width","concat","height","svg","DcUiProgressIcon","ICONS_BASE_URL","name","key","svgContent","loadIcon","url","getSvgContent","then","setIconContent","content","cleanSVG","cleanContent","el","host","shadowRoot","querySelector","innerHTML","componentWillUpdate","componentWillLoad","render","injectCSS","h","Host","class","message","variant"],"sources":["C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-progress-icon\\progress-icon-utils.ts","C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-progress-icon\\progress-icon-styles.ts","C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-progress-icon\\dc-ui-progress-icon.tsx"],"sourcesContent":["import { BreakpointCustomizable } from '../../utils';\r\n\r\nexport const PROGRESS_ICON_SIZE = {\r\n  tiny: 24,\r\n  small: 32,\r\n  medium: 48,\r\n  large: 54,\r\n};\r\nexport type ProgressIconSize = keyof typeof PROGRESS_ICON_SIZE;\r\nexport type TProgressIconSize = BreakpointCustomizable<ProgressIconSize>;\r\n","import { getCss, mergeDeep, buildResponsiveStyles } from '../../utils';\r\nimport { ProgressIconSize, TProgressIconSize, PROGRESS_ICON_SIZE } from './progress-icon-utils';\r\n\r\nexport const createStyles = (size: TProgressIconSize): string => {\r\n  const styles = getCss({\r\n    '@global': {\r\n      ':host': {\r\n        display: 'inline-flex',\r\n        color: 'inherit',\r\n      },\r\n      '.content-wrapper': {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        gap: '8px',\r\n      },\r\n      i: {\r\n        display: 'flex',\r\n        color: 'inherit',\r\n        ...mergeDeep(\r\n          buildResponsiveStyles(size, (sizeResponsive: ProgressIconSize) => ({\r\n            width: `${PROGRESS_ICON_SIZE[sizeResponsive]}px`,\r\n            height: `${PROGRESS_ICON_SIZE[sizeResponsive]}px`,\r\n          }))\r\n        ),\r\n      },\r\n      svg: {\r\n        width: '100%',\r\n        height: '100%',\r\n      },\r\n    },\r\n  });\r\n\r\n  return styles;\r\n};\r\n","import { Component, h, Host, Prop, Element } from '@stencil/core';\r\nimport { TIconSize, cleanSVG, getSvgContent } from '../dc-ui-icon/icon-utils';\r\nimport { injectCSS } from '../../utils';\r\nimport { createStyles } from './progress-icon-styles';\r\n\r\n@Component({\r\n  tag: 'dc-ui-progress-icon',\r\n  shadow: true,\r\n})\r\nexport class DcUiProgressIcon {\r\n  @Element() public host!: HTMLElement;\r\n  @Prop() size: TIconSize = 'medium';\r\n  @Prop() message: string;\r\n\r\n  private ICONS_BASE_URL = 'https://dc-webtoolkit.azureedge.net/icons/';\r\n  private name = 'dc_progress-icon';\r\n  key = 0;\r\n  svgContent = '';\r\n\r\n  private loadIcon(): void {\r\n    const url = `${this.ICONS_BASE_URL}${this.name}.svg`;\r\n    getSvgContent(url).then((svgContent) => {\r\n      this.setIconContent(svgContent);\r\n    });\r\n  }\r\n\r\n  private setIconContent(content: string): void {\r\n    this.svgContent = cleanSVG(content);\r\n    const cleanContent = cleanSVG(content);\r\n\r\n    const el = this.host.shadowRoot.querySelector('i');\r\n    if (el) {\r\n      el.innerHTML = cleanContent;\r\n    }\r\n  }\r\n\r\n  public componentWillUpdate(): void {\r\n    // reset old icon if there is any\r\n    if (this.svgContent) {\r\n      this.setIconContent('');\r\n    }\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    this.loadIcon();\r\n  }\r\n\r\n  render() {\r\n    injectCSS(this.host, createStyles, this.size);\r\n\r\n    return (\r\n      <Host>\r\n        <div class=\"content-wrapper\">\r\n          <i key={this.key++} />\r\n          {this.message && <dc-ui-text variant=\"strong-mid-size-text\">{this.message}</dc-ui-text>}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;AAEO,MAAMA,kBAAkB,GAAG;EAChCC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE;CACR;ACJM,MAAMC,YAAY,GAAIC,IAAuB;EAClD,MAAMC,MAAM,GAAGC,MAAM,CAAC;IACpB,SAAS,EAAE;MACT,OAAO,EAAE;QACPC,OAAO,EAAE,aAAa;QACtBC,KAAK,EAAE;OACR;MACD,kBAAkB,EAAE;QAClBD,OAAO,EAAE,MAAM;QACfE,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,GAAG,EAAE;OACN;MACDC,CAAC,EAAAC,MAAA,CAAAC,MAAA;QACCR,OAAO,EAAE,MAAM;QACfC,KAAK,EAAE;MAAS,GACbQ,SAAS,CACVC,qBAAqB,CAACb,IAAI,EAAGc,cAAgC,KAAM;QACjEC,KAAK,KAAAC,MAAA,CAAKtB,kBAAkB,CAACoB,cAAc,CAAC,OAAI;QAChDG,MAAM,KAAAD,MAAA,CAAKtB,kBAAkB,CAACoB,cAAc,CAAC;OAC9C,CAAC,CAAC,CACJ,CACF;MACDI,GAAG,EAAE;QACHH,KAAK,EAAE,MAAM;QACbE,MAAM,EAAE;;;GAGb,CAAC;EAEF,OAAOhB,MAAM;AACf,CAAC;MC1BYkB,gBAAgB;;;IAKnB,KAAAC,cAAc,GAAG,4CAA4C;IAC7D,KAAAC,IAAI,GAAG,kBAAkB;IACjC,KAAAC,GAAG,GAAG,CAAC;IACP,KAAAC,UAAU,GAAG,EAAE;gBANW,QAAQ;;;EAQ1BC,QAAQA,CAAA;IACd,MAAMC,GAAG,MAAAT,MAAA,CAAM,IAAI,CAACI,cAAc,EAAAJ,MAAA,CAAG,IAAI,CAACK,IAAI,SAAM;IACpDK,aAAa,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEJ,UAAU;MACjC,IAAI,CAACK,cAAc,CAACL,UAAU,CAAC;KAChC,CAAC;;EAGIK,cAAcA,CAACC,OAAe;IACpC,IAAI,CAACN,UAAU,GAAGO,QAAQ,CAACD,OAAO,CAAC;IACnC,MAAME,YAAY,GAAGD,QAAQ,CAACD,OAAO,CAAC;IAEtC,MAAMG,EAAE,GAAG,IAAI,CAACC,IAAI,CAACC,UAAU,CAACC,aAAa,CAAC,GAAG,CAAC;IAClD,IAAIH,EAAE,EAAE;MACNA,EAAE,CAACI,SAAS,GAAGL,YAAY;;;EAIxBM,mBAAmBA,CAAA;;IAExB,IAAI,IAAI,CAACd,UAAU,EAAE;MACnB,IAAI,CAACK,cAAc,CAAC,EAAE,CAAC;;;EAI3B,MAAMU,iBAAiBA,CAAA;IACrB,IAAI,CAACd,QAAQ,EAAE;;EAGjBe,MAAMA,CAAA;IACJC,SAAS,CAAC,IAAI,CAACP,IAAI,EAAElC,YAAY,EAAE,IAAI,CAACC,IAAI,CAAC;IAE7C,OACEyC,CAAA,CAACC,IAAI;MAAApB,GAAA;IAAA,GACHmB,CAAA;MAAAnB,GAAA;MAAKqB,KAAK,EAAC;IAAiB,GAC1BF,CAAA;MAAGnB,GAAG,EAAE,IAAI,CAACA,GAAG;IAAE,EAAI,EACrB,IAAI,CAACsB,OAAO,IAAIH,CAAA;MAAAnB,GAAA;MAAYuB,OAAO,EAAC;IAAsB,GAAE,IAAI,CAACD,OAAO,CAAc,CACnF,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { getCytropacValues, getCytropacMiDent, computeCytropacTypecodeInfo, generateCytropacTabledata, generateAllPossibleTypecodesCytropac } from './Products/cytropac';\nimport { getCytroboxValues, getCytroboxMiDent, computeCytroboxTypecodeInfo, generateCytroboxTabledata, generateAllPossibleTypecodesCytrobox } from './Products/cytrobox';\nimport { get4We10hValues, get4We10hMiDent, compute4We10hTypecodeInfo, generateAllPossibleTypecodes4We10h, generate4We10hTabledata } from './Products/4we10';\nimport { get4WehValues, get4WehMiDent, compute4WehTypecodeInfo, generate4WehTabledata, generateAllPossibleTypecodes4Weh } from './Products/4weh';\nimport { getZ3dreValues, getZ3dreMiDent, computeZ3dreTypecodeInfo, generateAllPossibleTypecodesZ3dre, generateZ3dreTabledata } from './Products/z3dre';\nimport React, { useState, useEffect } from 'react';\nconst [, setAllTypecodesCytropac] = useState([]);\nconst [, setAllTypecodesCytrobox] = useState([]);\nconst [, setAllTypecodes4We10h] = useState([]);\nconst [, setAllTypecodes4Weh] = useState([]);\nconst [, setAllTypecodesZ3dre] = useState([]);\nexport const fetchdataproducts = result => {\n  const {\n    NN\n  } = result.index;\n  if (NN === 'CytroBox') {\n    const values = getCytroboxValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(computeCytroboxTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodesCytrobox(result.index.line.values);\n    setAllTypecodesCytrobox(typecodes);\n  } else if (NN === 'CytroPac') {\n    const values = getCytropacValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(computeCytropacTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodesCytropac(result.index.line.values);\n    setAllTypecodesCytropac(typecodes);\n  } else if (NN === 'WE 10.../H') {\n    const values = get4We10hValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(compute4We10hTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodes4We10h(result.index.line.values);\n    setAllTypecodes4We10h(typecodes);\n  } else if (NN === 'WEH/WH-1X') {\n    const values = get4WehValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(compute4WehTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodes4Weh(result.index.line.values);\n    setAllTypecodes4Weh(typecodes);\n  } else if (NN === 'Z3DREE 10') {\n    const values = getZ3dreValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(computeZ3dreTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodesZ3dre(result.index.line.values);\n    setAllTypecodesZ3dre(typecodes);\n  }\n};\nexport default fetchdataproducts;","map":{"version":3,"names":["getCytropacValues","getCytropacMiDent","computeCytropacTypecodeInfo","generateCytropacTabledata","generateAllPossibleTypecodesCytropac","getCytroboxValues","getCytroboxMiDent","computeCytroboxTypecodeInfo","generateCytroboxTabledata","generateAllPossibleTypecodesCytrobox","get4We10hValues","get4We10hMiDent","compute4We10hTypecodeInfo","generateAllPossibleTypecodes4We10h","generate4We10hTabledata","get4WehValues","get4WehMiDent","compute4WehTypecodeInfo","generate4WehTabledata","generateAllPossibleTypecodes4Weh","getZ3dreValues","getZ3dreMiDent","computeZ3dreTypecodeInfo","generateAllPossibleTypecodesZ3dre","generateZ3dreTabledata","React","useState","useEffect","setAllTypecodesCytropac","setAllTypecodesCytrobox","setAllTypecodes4We10h","setAllTypecodes4Weh","setAllTypecodesZ3dre","fetchdataproducts","result","NN","index","values","setSelectedValues","setTypecodeInfo","typecodes","line"],"sources":["C:/Users/LGD1KOR/Desktop/rexroth_products_with_versions/rexroth/src/FileToUpdate/AllProductsData.js"],"sourcesContent":["import { getCytropacValues, getCytropacMiDent, computeCytropacTypecodeInfo, generateCytropacTabledata, generateAllPossibleTypecodesCytropac } from './Products/cytropac';\r\nimport { getCytroboxValues, getCytroboxMiDent, computeCytroboxTypecodeInfo, generateCytroboxTabledata, generateAllPossibleTypecodesCytrobox } from './Products/cytrobox';\r\nimport { get4We10hValues, get4We10hMiDent, compute4We10hTypecodeInfo, generateAllPossibleTypecodes4We10h, generate4We10hTabledata } from './Products/4we10';\r\nimport { get4WehValues, get4WehMiDent, compute4WehTypecodeInfo, generate4WehTabledata, generateAllPossibleTypecodes4Weh } from './Products/4weh';\r\nimport { getZ3dreValues, getZ3dreMiDent, computeZ3dreTypecodeInfo, generateAllPossibleTypecodesZ3dre, generateZ3dreTabledata } from './Products/z3dre';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst [, setAllTypecodesCytropac] = useState([]);\r\nconst [, setAllTypecodesCytrobox] = useState([]);\r\nconst [, setAllTypecodes4We10h] = useState([]);\r\nconst [, setAllTypecodes4Weh] = useState([]);\r\nconst [, setAllTypecodesZ3dre] = useState([]);\r\n\r\n\r\nexport const fetchdataproducts = (result) => {\r\n    const { NN } = result.index;\r\n  \r\n    if (NN === 'CytroBox') {\r\n      const values = getCytroboxValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(computeCytroboxTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodesCytrobox(result.index.line.values);\r\n      setAllTypecodesCytrobox(typecodes);\r\n    } else if (NN === 'CytroPac') {\r\n      const values = getCytropacValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(computeCytropacTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodesCytropac(result.index.line.values);\r\n      setAllTypecodesCytropac(typecodes);\r\n    } else if (NN === 'WE 10.../H') {\r\n      const values = get4We10hValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(compute4We10hTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodes4We10h(result.index.line.values);\r\n      setAllTypecodes4We10h(typecodes);\r\n    } else if (NN === 'WEH/WH-1X') {\r\n      const values = get4WehValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(compute4WehTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodes4Weh(result.index.line.values);\r\n      setAllTypecodes4Weh(typecodes);\r\n    } else if (NN === 'Z3DREE 10') {\r\n      const values = getZ3dreValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(computeZ3dreTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodesZ3dre(result.index.line.values);\r\n      setAllTypecodesZ3dre(typecodes);\r\n    }\r\n  };\r\n\r\n\r\n  export default fetchdataproducts"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
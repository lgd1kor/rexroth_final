{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LGD1KOR\\\\Desktop\\\\react\\\\my-app\\\\src\\\\WebViewer3D.js\",\n  _s = $RefreshSig$();\n/* global psol */\nimport React, { useEffect, useRef } from 'react';\nimport $ from 'jquery';\nimport { defineCustomElements } from '@boschrexroth/nextgen-web-ui-toolkit-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndefineCustomElements();\nconst WebViewer3D = ({\n  apiData\n}) => {\n  _s();\n  const viewerRef = useRef(null);\n  useEffect(() => {\n    const loadScript = src => {\n      return new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = src;\n        script.onload = () => resolve();\n        script.onerror = () => reject(new Error(`Script load error for ${src}`));\n        document.head.appendChild(script);\n      });\n    };\n    const initViewer = async () => {\n      try {\n        await loadScript('webcomponents/8.1.0/api/js/thirdparty.min.js');\n        await loadScript('webcomponents/8.1.0/api/js/psol.components.min.js');\n        const radialMenuActions = [{\n          name: 'menu_shading',\n          subActions: ['actLine', 'actShade', 'actShadeLine']\n        }, {\n          name: 'menu_rotation',\n          subActions: ['actFront', 'actBack', 'actLeft', 'actRight', 'actTop', 'actBottom', 'actIsometric', 'actAnimate']\n        }, {\n          name: 'menu_vr',\n          subActions: ['actAnaglyph', 'actBluebox', 'actDreamocHD3', 'actFullscreen', 'actPseudoFullscreen']\n        }, {\n          name: 'menu_special',\n          subActions: ['actZoomall', 'actCut', 'actCustomDimensions', 'actExplosion', 'actLabels', 'actScreenShot']\n        }];\n        const favoriteActions = [\"actAnimate\", \"actCustomDimensions\", \"actEnableHotSpots\", \"actHotSpots\", \"actLine\", \"actShadeLine\", \"actEnv\", \"actToggleRotationMode\"];\n        const settings = {\n          $container: $('#viewer'),\n          viewerBackendType: psol.components.WebViewer3D.ViewerBackends.WebGL,\n          webglViewerSettings: {\n            devicePixelRatio: window.devicePixelRatio,\n            radialMenuActions: radialMenuActions,\n            favoriteActions: favoriteActions,\n            ColorTL: '#ffffff',\n            ColorTR: '#ffffff',\n            ColorML: '#ffffff',\n            ColorMR: '#ffffff',\n            ColorBL: '#ffffff',\n            ColorBR: '#ffffff',\n            logoTexture: 'boschrexrothlogo.svg',\n            logoScaleFactor: 0,\n            logoMixFactor: 0,\n            logoScaleModeFill: false,\n            material: {\n              preset: 'pcloud'\n            },\n            measureGrid: {\n              colors: {\n                dimensions: '#000000',\n                outline: '#0000ff',\n                grid: '#b3b3b3'\n              }\n            },\n            helperOptions: {\n              gridOn: false,\n              axisOn: false\n            },\n            shadeMode: psol.components.WebViewer3D.ShadeModes.ShadeAndLines,\n            enableEditableDimensions: true,\n            showPartNameTooltip: false\n          }\n        };\n        viewerRef.current = new psol.components.WebViewer3D(settings);\n        viewerRef.current.show().then(() => {\n          if (apiData) {\n            viewerRef.current.loadByUrl(apiData); // Use the API data here\n          }\n        });\n      } catch (error) {\n        console.error('Error loading PSOL scripts', error);\n      }\n    };\n    if (!viewerRef.current) {\n      initViewer();\n    } else if (apiData) {\n      viewerRef.current.loadByUrl(apiData);\n    }\n  }, [apiData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"viewer\",\n      style: {\n        width: '100%',\n        height: '57.5vh',\n        border: '2px solid rgba(0, 0, 0, 0.6)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(WebViewer3D, \"WZlWBGTTx29lA8KL541/EmcE3B8=\");\n_c = WebViewer3D;\nexport default WebViewer3D;\nvar _c;\n$RefreshReg$(_c, \"WebViewer3D\");","map":{"version":3,"names":["React","useEffect","useRef","$","defineCustomElements","jsxDEV","_jsxDEV","WebViewer3D","apiData","_s","viewerRef","loadScript","src","Promise","resolve","reject","script","document","createElement","onload","onerror","Error","head","appendChild","initViewer","radialMenuActions","name","subActions","favoriteActions","settings","$container","viewerBackendType","psol","components","ViewerBackends","WebGL","webglViewerSettings","devicePixelRatio","window","ColorTL","ColorTR","ColorML","ColorMR","ColorBL","ColorBR","logoTexture","logoScaleFactor","logoMixFactor","logoScaleModeFill","material","preset","measureGrid","colors","dimensions","outline","grid","helperOptions","gridOn","axisOn","shadeMode","ShadeModes","ShadeAndLines","enableEditableDimensions","showPartNameTooltip","current","show","then","loadByUrl","error","console","children","id","style","width","height","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LGD1KOR/Desktop/react/my-app/src/WebViewer3D.js"],"sourcesContent":["/* global psol */\r\nimport React, { useEffect, useRef } from 'react';\r\nimport $ from 'jquery';\r\nimport { defineCustomElements } from '@boschrexroth/nextgen-web-ui-toolkit-react';\r\ndefineCustomElements();\r\n\r\nconst WebViewer3D = ({ apiData }) => {\r\n    const viewerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const loadScript = (src) => {\r\n            return new Promise((resolve, reject) => {\r\n                const script = document.createElement('script');\r\n                script.src = src;\r\n                script.onload = () => resolve();\r\n                script.onerror = () => reject(new Error(`Script load error for ${src}`));\r\n                document.head.appendChild(script);\r\n            });\r\n        };\r\n\r\n        const initViewer = async () => {\r\n            try {\r\n                await loadScript('webcomponents/8.1.0/api/js/thirdparty.min.js');\r\n                await loadScript('webcomponents/8.1.0/api/js/psol.components.min.js');\r\n                const radialMenuActions = [{\r\n                    name: 'menu_shading',\r\n                    subActions: ['actLine', 'actShade', 'actShadeLine']\r\n                 }, {\r\n                  name: 'menu_rotation',\r\n                  subActions: [\r\n                        'actFront',\r\n                        'actBack',\r\n                        'actLeft',\r\n                        'actRight',\r\n                        'actTop',\r\n                        'actBottom',\r\n                        'actIsometric',\r\n                        'actAnimate'\r\n                    ]\r\n                 }, {\r\n                    name: 'menu_vr',\r\n                    subActions: [\r\n                        'actAnaglyph',\r\n                        'actBluebox',\r\n                        'actDreamocHD3',\r\n                        'actFullscreen',\r\n                        'actPseudoFullscreen',\r\n                    ]\r\n                 }, {\r\n                    name: 'menu_special',\r\n                    subActions: [\r\n                        'actZoomall',\r\n                        'actCut',\r\n                        'actCustomDimensions',\r\n                        'actExplosion',\r\n                        'actLabels',\r\n                        'actScreenShot'\r\n                    ]\r\n                 }];\r\n                 const favoriteActions = [\r\n                    \"actAnimate\",\r\n                    \"actCustomDimensions\",\r\n                    \"actEnableHotSpots\",\r\n                    \"actHotSpots\",\r\n                    \"actLine\",\r\n                    \"actShadeLine\",\r\n                    \"actEnv\",\r\n                    \"actToggleRotationMode\",\r\n                 ];\r\n                const settings = {\r\n                    $container: $('#viewer'),\r\n                    viewerBackendType: psol.components.WebViewer3D.ViewerBackends.WebGL,\r\n                    webglViewerSettings: {\r\n                        devicePixelRatio: window.devicePixelRatio,\r\n                        radialMenuActions: radialMenuActions,\r\n                        favoriteActions: favoriteActions,\r\n                        ColorTL: '#ffffff',\r\n                        ColorTR: '#ffffff',\r\n                        ColorML: '#ffffff',\r\n                        ColorMR: '#ffffff',\r\n                        ColorBL: '#ffffff',\r\n                        ColorBR: '#ffffff',\r\n                        logoTexture: 'boschrexrothlogo.svg',\r\n                        logoScaleFactor: 0,\r\n                        logoMixFactor: 0,\r\n                        logoScaleModeFill:false,\r\n                        material: {\r\n                            preset: 'pcloud'\r\n                        },\r\n                        measureGrid: {\r\n                            colors: {\r\n                                dimensions: '#000000',\r\n                                outline: '#0000ff',\r\n                                grid: '#b3b3b3'\r\n                            }\r\n                        },\r\n                        helperOptions: {\r\n                            gridOn: false,\r\n                            axisOn: false\r\n                        },\r\n                        shadeMode: psol.components.WebViewer3D.ShadeModes.ShadeAndLines,\r\n                        enableEditableDimensions: true,\r\n                        showPartNameTooltip: false\r\n                    }\r\n                 };\r\n\r\n                viewerRef.current = new psol.components.WebViewer3D(settings);\r\n\r\n                viewerRef.current.show().then(() => {\r\n                    if (apiData) {\r\n                        viewerRef.current.loadByUrl(apiData);  // Use the API data here\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.error('Error loading PSOL scripts', error);\r\n            }\r\n        };\r\n\r\n        if (!viewerRef.current) {\r\n            initViewer();\r\n        } else if (apiData) {\r\n            viewerRef.current.loadByUrl(apiData);\r\n        }\r\n\r\n    }, [apiData]);\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div id=\"viewer\" style={{ width: '100%', height: '57.5vh', border: '2px solid rgba(0, 0, 0, 0.6)'}}></div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default WebViewer3D;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
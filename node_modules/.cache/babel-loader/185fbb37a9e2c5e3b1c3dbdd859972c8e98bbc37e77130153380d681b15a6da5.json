{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LGD1KOR\\\\Desktop\\\\react\\\\my-app\\\\src\\\\Module.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// export default function Modal() {\n//   const [names, setNames] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [modal, setModal] = useState(false); // Modal state\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get('https://webapi.partcommunity.com/cadqualifier.asp?apikey=e66120f9d9624823884cac1bf290ea88');\n//         const xmlData = response.data;\n\n//         // Parse the XML data\n//         const parser = new DOMParser();\n//         const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\n//         const formatTags = xmlDoc.getElementsByTagName('format');\n\n//         const extractedNames = Array.from(formatTags).map(format => {\n//           const nameTag = format.getElementsByTagName('name')[0];\n//           const versionTag = format.getElementsByTagName('version')[0];\n//           const cad = format.getAttribute('cad');\n\n//           const name = nameTag ? nameTag.textContent : '';\n//           const version = versionTag && versionTag.textContent ? versionTag.textContent : '';\n\n//           return `${name} ${version} (${cad})`.trim();\n//         });\n\n//         // Update the state with the extracted names\n//         setNames(extractedNames);\n//       } catch (error) {\n//         setError(error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   useEffect(() => {\n//     if (modal) {\n//       document.body.classList.add('active-modal');\n//       document.body.classList.add('disable-pointer-events');\n//     } else {\n//       document.body.classList.remove('active-modal');\n//       document.body.classList.remove('disable-pointer-events');\n//     }\n//   }, [modal]);\n\n//   const toggleModal = () => {\n//     setModal(prevModal => !prevModal);\n//   };\n\n//   const modalStyles = {\n//     modal: {\n//       width: '100vw',\n//       height: '100vh',\n//       position: 'fixed',\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       bottom: 0,\n//       zIndex: 1000,\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//     },\n//     overlay: {\n//       background: 'rgba(49,49,49,0.8)',\n//     },\n//     modalContent: {\n//       width: '400px',\n//       height: '200px',\n//       background: '#f1f1f1',\n//       padding: '14px 28px',\n//       borderRadius: '3px',\n//       position: 'relative',\n//       display: 'flex',\n//       flexDirection: 'column',\n//     },\n//     closeModal: {\n//       position: 'absolute',\n//       top: '10px',\n//       right: '10px',\n//       cursor: 'pointer',\n//     },\n//     btnModal: {\n//       width: '250px',\n//       height: '60px',\n//     },\n//     checkboxContainer: {\n//       flex: 1,\n//       overflowY: 'auto', // Allow vertical scrolling\n//       marginTop: '40px', // Adjust margin to fit content\n//     },\n//     checkboxItem: {\n//       display: 'block',\n//       marginBottom: '8px',\n//     }\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>Error: {error.message}</div>;\n\n//   return (\n//     <div>\n//       <dc-ui-button variant=\"primary\" size=\"normal\" type=\"button\" align=\"center\" icon=\"dc_download\" onClick={toggleModal} style={modalStyles.btnModal}>\n//           <dc-ui-text tag=\"span\" variant=\"small-text\" color=\"inherit\" text-align=\"center\">Download</dc-ui-text>\n//       </dc-ui-button>\n//       {modal && (\n//         <div style={{ ...modalStyles.modal, ...modalStyles.overlay }}>\n//           <div style={modalStyles.modalContent}>\n//             <dc-ui-button variant=\"link\" size=\"small\" type=\"button\" align=\"center\" icon=\"dc_close\" style={modalStyles.closeModal} onClick={toggleModal}>\n//               Close\n//             </dc-ui-button>\n//             <h2>Extracted Names:</h2>\n//             <div style={modalStyles.checkboxContainer}>\n//               <ul style={{ padding: 0, listStyle: 'none', margin: 0 }}>\n//                 {names.map((name, index) => (\n//                   <dc-ui-checkbox key={index} label={`${name}`} style={modalStyles.checkboxItem}>\n//                     <input type=\"checkbox\" name={`checkbox-${index}`} id={`checkbox-${index}`} />\n//                   </dc-ui-checkbox>\n//                 ))}\n//               </ul>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modal() {\n  _s();\n  const [names, setNames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [modal, setModal] = useState(false); // Modal state\n  const [checkedState, setCheckedState] = useState({}); // To keep track of checked checkboxes\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://webapi.partcommunity.com/cadqualifier.asp?apikey=e66120f9d9624823884cac1bf290ea88');\n        const xmlData = response.data;\n\n        // Parse the XML data\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\n        const formatTags = xmlDoc.getElementsByTagName('format');\n        const extractedNames = Array.from(formatTags).map((format, index) => {\n          const nameTag = format.getElementsByTagName('name')[0];\n          const versionTag = format.getElementsByTagName('version')[0];\n          const cad = format.getAttribute('cad');\n          const name = nameTag ? nameTag.textContent : '';\n          const version = versionTag && versionTag.textContent ? versionTag.textContent : '';\n          return {\n            id: index,\n            text: `${name} ${version} (${cad})`.trim()\n          };\n        });\n\n        // Initialize checked state\n        const initialCheckedState = extractedNames.reduce((acc, curr) => {\n          acc[curr.id] = false; // Set all checkboxes to unchecked initially\n          return acc;\n        }, {});\n        setCheckedState(initialCheckedState);\n\n        // Update the state with the extracted names\n        setNames(extractedNames);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (modal) {\n      document.body.classList.add('active-modal');\n      document.body.classList.add('disable-pointer-events');\n    } else {\n      document.body.classList.remove('active-modal');\n      document.body.classList.remove('disable-pointer-events');\n    }\n  }, [modal]);\n  const toggleModal = () => {\n    setModal(prevModal => !prevModal);\n  };\n  const handleCheckboxChange = id => {\n    setCheckedState(prevState => ({\n      ...prevState,\n      [id]: !prevState[id]\n    }));\n  };\n  const getCheckedCount = () => {\n    return Object.values(checkedState).filter(isChecked => isChecked).length;\n  };\n  const modalStyles = {\n    modal: {\n      width: '100vw',\n      height: '100vh',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 1000,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    overlay: {\n      background: 'rgba(49,49,49,0.8)'\n    },\n    modalContent: {\n      width: '400px',\n      height: '200px',\n      background: '#f1f1f1',\n      padding: '14px 28px',\n      borderRadius: '3px',\n      position: 'relative',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    closeModal: {\n      position: 'absolute',\n      top: '10px',\n      right: '10px',\n      cursor: 'pointer'\n    },\n    btnModal: {\n      width: '250px',\n      height: '60px'\n    },\n    checkboxContainer: {\n      flex: 1,\n      overflowY: 'auto',\n      // Allow vertical scrolling\n      marginTop: '40px' // Adjust margin to fit content\n    },\n    checkboxItem: {\n      display: 'block',\n      marginBottom: '8px'\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"dc-ui-button\", {\n      variant: \"primary\",\n      size: \"normal\",\n      type: \"button\",\n      align: \"center\",\n      icon: \"dc_download\",\n      onClick: toggleModal,\n      style: modalStyles.btnModal,\n      children: /*#__PURE__*/_jsxDEV(\"dc-ui-text\", {\n        tag: \"span\",\n        variant: \"small-text\",\n        color: \"inherit\",\n        \"text-align\": \"center\",\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...modalStyles.modal,\n        ...modalStyles.overlay\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modalContent,\n        children: [/*#__PURE__*/_jsxDEV(\"dc-ui-button\", {\n          variant: \"link\",\n          size: \"small\",\n          type: \"button\",\n          align: \"center\",\n          icon: \"dc_close\",\n          style: modalStyles.closeModal,\n          onClick: toggleModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extracted Names:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyles.checkboxContainer,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              padding: 0,\n              listStyle: 'none',\n              margin: 0\n            },\n            children: names.map(({\n              id,\n              text\n            }) => /*#__PURE__*/_jsxDEV(\"dc-ui-checkbox\", {\n              label: text,\n              style: modalStyles.checkboxItem,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: checkedState[id],\n                onChange: () => handleCheckboxChange(id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Selected:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), \" \", getCheckedCount()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"2oxljdHcp8rTBc9Ky5Bgp/IzRFA=\");\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Modal","_s","names","setNames","loading","setLoading","error","setError","modal","setModal","checkedState","setCheckedState","fetchData","response","get","xmlData","data","parser","DOMParser","xmlDoc","parseFromString","formatTags","getElementsByTagName","extractedNames","Array","from","map","format","index","nameTag","versionTag","cad","getAttribute","name","textContent","version","id","text","trim","initialCheckedState","reduce","acc","curr","document","body","classList","add","remove","toggleModal","prevModal","handleCheckboxChange","prevState","getCheckedCount","Object","values","filter","isChecked","length","modalStyles","width","height","position","top","left","right","bottom","zIndex","display","alignItems","justifyContent","overlay","background","modalContent","padding","borderRadius","flexDirection","closeModal","cursor","btnModal","checkboxContainer","flex","overflowY","marginTop","checkboxItem","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","message","variant","size","type","align","icon","onClick","style","tag","color","listStyle","margin","label","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/LGD1KOR/Desktop/react/my-app/src/Module.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// export default function Modal() {\r\n//   const [names, setNames] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [modal, setModal] = useState(false); // Modal state\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await axios.get('https://webapi.partcommunity.com/cadqualifier.asp?apikey=e66120f9d9624823884cac1bf290ea88');\r\n//         const xmlData = response.data;\r\n\r\n//         // Parse the XML data\r\n//         const parser = new DOMParser();\r\n//         const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\r\n//         const formatTags = xmlDoc.getElementsByTagName('format');\r\n\r\n//         const extractedNames = Array.from(formatTags).map(format => {\r\n//           const nameTag = format.getElementsByTagName('name')[0];\r\n//           const versionTag = format.getElementsByTagName('version')[0];\r\n//           const cad = format.getAttribute('cad');\r\n\r\n//           const name = nameTag ? nameTag.textContent : '';\r\n//           const version = versionTag && versionTag.textContent ? versionTag.textContent : '';\r\n          \r\n//           return `${name} ${version} (${cad})`.trim();\r\n//         });\r\n\r\n//         // Update the state with the extracted names\r\n//         setNames(extractedNames);\r\n//       } catch (error) {\r\n//         setError(error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (modal) {\r\n//       document.body.classList.add('active-modal');\r\n//       document.body.classList.add('disable-pointer-events');\r\n//     } else {\r\n//       document.body.classList.remove('active-modal');\r\n//       document.body.classList.remove('disable-pointer-events');\r\n//     }\r\n//   }, [modal]);\r\n\r\n//   const toggleModal = () => {\r\n//     setModal(prevModal => !prevModal);\r\n//   };\r\n\r\n//   const modalStyles = {\r\n//     modal: {\r\n//       width: '100vw',\r\n//       height: '100vh',\r\n//       position: 'fixed',\r\n//       top: 0,\r\n//       left: 0,\r\n//       right: 0,\r\n//       bottom: 0,\r\n//       zIndex: 1000,\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//     },\r\n//     overlay: {\r\n//       background: 'rgba(49,49,49,0.8)',\r\n//     },\r\n//     modalContent: {\r\n//       width: '400px',\r\n//       height: '200px',\r\n//       background: '#f1f1f1',\r\n//       padding: '14px 28px',\r\n//       borderRadius: '3px',\r\n//       position: 'relative',\r\n//       display: 'flex',\r\n//       flexDirection: 'column',\r\n//     },\r\n//     closeModal: {\r\n//       position: 'absolute',\r\n//       top: '10px',\r\n//       right: '10px',\r\n//       cursor: 'pointer',\r\n//     },\r\n//     btnModal: {\r\n//       width: '250px',\r\n//       height: '60px',\r\n//     },\r\n//     checkboxContainer: {\r\n//       flex: 1,\r\n//       overflowY: 'auto', // Allow vertical scrolling\r\n//       marginTop: '40px', // Adjust margin to fit content\r\n//     },\r\n//     checkboxItem: {\r\n//       display: 'block',\r\n//       marginBottom: '8px',\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div>Error: {error.message}</div>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <dc-ui-button variant=\"primary\" size=\"normal\" type=\"button\" align=\"center\" icon=\"dc_download\" onClick={toggleModal} style={modalStyles.btnModal}>\r\n//           <dc-ui-text tag=\"span\" variant=\"small-text\" color=\"inherit\" text-align=\"center\">Download</dc-ui-text>\r\n//       </dc-ui-button>\r\n//       {modal && (\r\n//         <div style={{ ...modalStyles.modal, ...modalStyles.overlay }}>\r\n//           <div style={modalStyles.modalContent}>\r\n//             <dc-ui-button variant=\"link\" size=\"small\" type=\"button\" align=\"center\" icon=\"dc_close\" style={modalStyles.closeModal} onClick={toggleModal}>\r\n//               Close\r\n//             </dc-ui-button>\r\n//             <h2>Extracted Names:</h2>\r\n//             <div style={modalStyles.checkboxContainer}>\r\n//               <ul style={{ padding: 0, listStyle: 'none', margin: 0 }}>\r\n//                 {names.map((name, index) => (\r\n//                   <dc-ui-checkbox key={index} label={`${name}`} style={modalStyles.checkboxItem}>\r\n//                     <input type=\"checkbox\" name={`checkbox-${index}`} id={`checkbox-${index}`} />\r\n//                   </dc-ui-checkbox>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Modal() {\r\n  const [names, setNames] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [modal, setModal] = useState(false); // Modal state\r\n  const [checkedState, setCheckedState] = useState({}); // To keep track of checked checkboxes\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://webapi.partcommunity.com/cadqualifier.asp?apikey=e66120f9d9624823884cac1bf290ea88');\r\n        const xmlData = response.data;\r\n\r\n        // Parse the XML data\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\r\n        const formatTags = xmlDoc.getElementsByTagName('format');\r\n\r\n        const extractedNames = Array.from(formatTags).map((format, index) => {\r\n          const nameTag = format.getElementsByTagName('name')[0];\r\n          const versionTag = format.getElementsByTagName('version')[0];\r\n          const cad = format.getAttribute('cad');\r\n\r\n          const name = nameTag ? nameTag.textContent : '';\r\n          const version = versionTag && versionTag.textContent ? versionTag.textContent : '';\r\n          \r\n          return { id: index, text: `${name} ${version} (${cad})`.trim() };\r\n        });\r\n\r\n        // Initialize checked state\r\n        const initialCheckedState = extractedNames.reduce((acc, curr) => {\r\n          acc[curr.id] = false; // Set all checkboxes to unchecked initially\r\n          return acc;\r\n        }, {});\r\n        setCheckedState(initialCheckedState);\r\n\r\n        // Update the state with the extracted names\r\n        setNames(extractedNames);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (modal) {\r\n      document.body.classList.add('active-modal');\r\n      document.body.classList.add('disable-pointer-events');\r\n    } else {\r\n      document.body.classList.remove('active-modal');\r\n      document.body.classList.remove('disable-pointer-events');\r\n    }\r\n  }, [modal]);\r\n\r\n  const toggleModal = () => {\r\n    setModal(prevModal => !prevModal);\r\n  };\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setCheckedState(prevState => ({\r\n      ...prevState,\r\n      [id]: !prevState[id],\r\n    }));\r\n  };\r\n\r\n  const getCheckedCount = () => {\r\n    return Object.values(checkedState).filter(isChecked => isChecked).length;\r\n  };\r\n\r\n  const modalStyles = {\r\n    modal: {\r\n      width: '100vw',\r\n      height: '100vh',\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    overlay: {\r\n      background: 'rgba(49,49,49,0.8)',\r\n    },\r\n    modalContent: {\r\n      width: '400px',\r\n      height: '200px',\r\n      background: '#f1f1f1',\r\n      padding: '14px 28px',\r\n      borderRadius: '3px',\r\n      position: 'relative',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    closeModal: {\r\n      position: 'absolute',\r\n      top: '10px',\r\n      right: '10px',\r\n      cursor: 'pointer',\r\n    },\r\n    btnModal: {\r\n      width: '250px',\r\n      height: '60px',\r\n    },\r\n    checkboxContainer: {\r\n      flex: 1,\r\n      overflowY: 'auto', // Allow vertical scrolling\r\n      marginTop: '40px', // Adjust margin to fit content\r\n    },\r\n    checkboxItem: {\r\n      display: 'block',\r\n      marginBottom: '8px',\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <dc-ui-button variant=\"primary\" size=\"normal\" type=\"button\" align=\"center\" icon=\"dc_download\" onClick={toggleModal} style={modalStyles.btnModal}>\r\n          <dc-ui-text tag=\"span\" variant=\"small-text\" color=\"inherit\" text-align=\"center\">Download</dc-ui-text>\r\n      </dc-ui-button>\r\n      {modal && (\r\n        <div style={{ ...modalStyles.modal, ...modalStyles.overlay }}>\r\n          <div style={modalStyles.modalContent}>\r\n            <dc-ui-button variant=\"link\" size=\"small\" type=\"button\" align=\"center\" icon=\"dc_close\" style={modalStyles.closeModal} onClick={toggleModal}>\r\n            </dc-ui-button>\r\n            <h2>Extracted Names:</h2>\r\n            <div style={modalStyles.checkboxContainer}>\r\n              <ul style={{ padding: 0, listStyle: 'none', margin: 0 }}>\r\n                {names.map(({ id, text }) => (\r\n                  <dc-ui-checkbox key={id} label={text} style={modalStyles.checkboxItem}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={checkedState[id]}\r\n                      onChange={() => handleCheckboxChange(id)}\r\n                    />\r\n                  </dc-ui-checkbox>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <strong>Selected:</strong> {getCheckedCount()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
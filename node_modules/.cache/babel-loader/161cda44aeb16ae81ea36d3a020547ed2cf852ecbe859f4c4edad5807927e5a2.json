{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LGD1KOR\\\\Desktop\\\\rexroth_products_with_versions\\\\rexroth\\\\src\\\\Preview3D\\\\Preview3DApi.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview3DApi = ({\n  miDent,\n  onDataFetch\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const previousMiDent = useRef(null);\n  const controller = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (previousMiDent.current === miDent) return;\n      if (controller.current) {\n        controller.current.abort();\n      }\n      controller.current = new AbortController();\n      const {\n        signal\n      } = controller.current;\n      try {\n        const params = {\n          mident: miDent,\n          apikey: 'e66120f9d9624823884cac1bf290ea88',\n          language: 'english',\n          format: 'PARTJAVA3D',\n          preferformat: 'PARTJAVA3D'\n        };\n        const queryString = new URLSearchParams(params).toString();\n        const url = `https://webapi.partcommunity.com/service/preview3d?${queryString}`;\n        const response = await fetch(url, {\n          signal\n        });\n        console.log('Response status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch data: ${response.statusText}`);\n        }\n        const responseBody = await response.text();\n        // console.log('Response body:', responseBody);\n\n        onDataFetch(responseBody); // Pass the fetched data to the parent\n        previousMiDent.current = miDent;\n      } catch (error) {\n        if (error.name === 'AbortError') {\n          console.log('Fetch aborted');\n        } else {\n          console.error('Error fetching the data', error);\n          setError('Error fetching the data. Please try again later.');\n        }\n      }\n    };\n    if (miDent) {\n      fetchData();\n    }\n    return () => {\n      if (controller.current) {\n        controller.current.abort();\n      }\n    };\n  }, [miDent, onDataFetch]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n  return '';\n};\n_s(Preview3DApi, \"davBYFW+61x/wrA7OPRRqUS7urU=\");\n_c = Preview3DApi;\nexport default Preview3DApi;\nvar _c;\n$RefreshReg$(_c, \"Preview3DApi\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Preview3DApi","miDent","onDataFetch","_s","error","setError","previousMiDent","controller","fetchData","current","abort","AbortController","signal","params","mident","apikey","language","format","preferformat","queryString","URLSearchParams","toString","url","response","fetch","console","log","status","ok","Error","statusText","responseBody","text","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LGD1KOR/Desktop/rexroth_products_with_versions/rexroth/src/Preview3D/Preview3DApi.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Preview3DApi = ({ miDent, onDataFetch }) => {\r\n    const [error, setError] = useState(null);\r\n    const previousMiDent = useRef(null);\r\n    const controller = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (previousMiDent.current === miDent) return;\r\n\r\n            if (controller.current) {\r\n                controller.current.abort();\r\n            }\r\n\r\n            controller.current = new AbortController();\r\n            const { signal } = controller.current;\r\n\r\n            try {\r\n                const params = {\r\n                    mident: miDent,\r\n                    apikey: 'e66120f9d9624823884cac1bf290ea88',\r\n                    language: 'english',\r\n                    format: 'PARTJAVA3D',\r\n                    preferformat: 'PARTJAVA3D',\r\n                };\r\n                const queryString = new URLSearchParams(params).toString();\r\n                const url = `https://webapi.partcommunity.com/service/preview3d?${queryString}`;\r\n                const response = await fetch(url, { signal });\r\n\r\n                console.log('Response status:', response.status);\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to fetch data: ${response.statusText}`);\r\n                }\r\n\r\n                const responseBody = await response.text();\r\n                // console.log('Response body:', responseBody);\r\n\r\n                onDataFetch(responseBody);  // Pass the fetched data to the parent\r\n                previousMiDent.current = miDent;\r\n            } catch (error) {\r\n                if (error.name === 'AbortError') {\r\n                    console.log('Fetch aborted');\r\n                } else {\r\n                    console.error('Error fetching the data', error);\r\n                    setError('Error fetching the data. Please try again later.');\r\n                }\r\n            }\r\n        };\r\n\r\n        if (miDent) {\r\n            fetchData();\r\n        }\r\n\r\n        return () => {\r\n            if (controller.current) {\r\n                controller.current.abort();\r\n            }\r\n        };\r\n    }, [miDent, onDataFetch]);\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return '';\r\n};\r\n\r\nexport default Preview3DApi;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMW,cAAc,GAAGT,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMU,UAAU,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAIF,cAAc,CAACG,OAAO,KAAKR,MAAM,EAAE;MAEvC,IAAIM,UAAU,CAACE,OAAO,EAAE;QACpBF,UAAU,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;MAC9B;MAEAH,UAAU,CAACE,OAAO,GAAG,IAAIE,eAAe,CAAC,CAAC;MAC1C,MAAM;QAAEC;MAAO,CAAC,GAAGL,UAAU,CAACE,OAAO;MAErC,IAAI;QACA,MAAMI,MAAM,GAAG;UACXC,MAAM,EAAEb,MAAM;UACdc,MAAM,EAAE,kCAAkC;UAC1CC,QAAQ,EAAE,SAAS;UACnBC,MAAM,EAAE,YAAY;UACpBC,YAAY,EAAE;QAClB,CAAC;QACD,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACP,MAAM,CAAC,CAACQ,QAAQ,CAAC,CAAC;QAC1D,MAAMC,GAAG,GAAG,sDAAsDH,WAAW,EAAE;QAC/E,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;UAAEV;QAAO,CAAC,CAAC;QAE7Ca,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,MAAM,CAAC;QAEhD,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,yBAAyBN,QAAQ,CAACO,UAAU,EAAE,CAAC;QACnE;QAEA,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAC1C;;QAEA9B,WAAW,CAAC6B,YAAY,CAAC,CAAC,CAAE;QAC5BzB,cAAc,CAACG,OAAO,GAAGR,MAAM;MACnC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZ,IAAIA,KAAK,CAAC6B,IAAI,KAAK,YAAY,EAAE;UAC7BR,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAChC,CAAC,MAAM;UACHD,OAAO,CAACrB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/CC,QAAQ,CAAC,kDAAkD,CAAC;QAChE;MACJ;IACJ,CAAC;IAED,IAAIJ,MAAM,EAAE;MACRO,SAAS,CAAC,CAAC;IACf;IAEA,OAAO,MAAM;MACT,IAAID,UAAU,CAACE,OAAO,EAAE;QACpBF,UAAU,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;MAC9B;IACJ,CAAC;EACL,CAAC,EAAE,CAACT,MAAM,EAAEC,WAAW,CAAC,CAAC;EAEzB,IAAIE,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAAmC,QAAA,EAAM9B;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,OAAO,EAAE;AACb,CAAC;AAACnC,EAAA,CAjEIH,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAmElB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
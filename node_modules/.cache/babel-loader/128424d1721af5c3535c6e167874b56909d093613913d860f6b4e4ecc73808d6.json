{"ast":null,"code":"const slottedStyleTagId = 'dc-ui-slotted-styles';\nconst getNodeToPrependTo = rootNode => {\n  return rootNode === document ? rootNode.head : rootNode;\n};\n/**\n * Adds an inheritable style for slotted content.\n * @param host\n * @param slottedStyles\n * @returns void\n */\nconst attachSlottedCss = (host, slottedStyles) => {\n  const css = slottedStyles;\n  const rootNode = host.getRootNode();\n  // isConnected check is needed because component may be removed from DOM in \"parallel\" and therefore\n  // the style doesn't matter and could produce validation errors because it is appended as a child\n  if (!rootNode.isConnected) {\n    return;\n  }\n  let style = document.getElementById(slottedStyleTagId);\n  if (!style) {\n    style = document.createElement('style');\n    style.id = slottedStyleTagId;\n    const prependTo = getNodeToPrependTo(rootNode);\n    const charsetTag = prependTo.querySelector('meta[charset]');\n    if (charsetTag !== null) {\n      prependTo.insertBefore(style, charsetTag.nextSibling);\n    } else if (prependTo.childNodes.length > 0) {\n      prependTo.insertBefore(style, prependTo.firstChild);\n    } else {\n      prependTo.appendChild(style);\n    }\n  }\n  style.appendChild(document.createTextNode(css));\n  style.normalize(); // merge text nodes\n};\nexport { attachSlottedCss as a };","map":{"version":3,"names":["slottedStyleTagId","getNodeToPrependTo","rootNode","document","head","attachSlottedCss","host","slottedStyles","css","getRootNode","isConnected","style","getElementById","createElement","id","prependTo","charsetTag","querySelector","insertBefore","nextSibling","childNodes","length","firstChild","appendChild","createTextNode","normalize"],"sources":["C:\\Users\\LGD1KOR\\Desktop\\react\\my-app\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\utils\\functions\\slottedStyles.ts"],"sourcesContent":["type HTMLElementOrDocument = HTMLElement | Document;\r\n\r\nconst slottedStyleTagId = 'dc-ui-slotted-styles';\r\n\r\nexport const getNodeToPrependTo = (rootNode: HTMLElementOrDocument): HTMLElement => {\r\n  return rootNode === document ? rootNode.head : (rootNode as HTMLElement);\r\n};\r\n\r\n/**\r\n * Adds an inheritable style for slotted content.\r\n * @param host\r\n * @param slottedStyles\r\n * @returns void\r\n */\r\nexport const attachSlottedCss = (host: HTMLElement, slottedStyles: string): void => {\r\n  const css = slottedStyles;\r\n  const rootNode = host.getRootNode() as HTMLElementOrDocument;\r\n\r\n  // isConnected check is needed because component may be removed from DOM in \"parallel\" and therefore\r\n  // the style doesn't matter and could produce validation errors because it is appended as a child\r\n  if (!rootNode.isConnected) {\r\n    return;\r\n  }\r\n\r\n  let style = document.getElementById(slottedStyleTagId);\r\n  if (!style) {\r\n    style = document.createElement('style');\r\n    style.id = slottedStyleTagId;\r\n\r\n    const prependTo = getNodeToPrependTo(rootNode);\r\n    const charsetTag = prependTo.querySelector('meta[charset]');\r\n\r\n    if (charsetTag !== null) {\r\n      prependTo.insertBefore(style, charsetTag.nextSibling);\r\n    } else if (prependTo.childNodes.length > 0) {\r\n      prependTo.insertBefore(style, prependTo.firstChild);\r\n    } else {\r\n      prependTo.appendChild(style);\r\n    }\r\n  }\r\n\r\n  style.appendChild(document.createTextNode(css));\r\n  style.normalize(); // merge text nodes\r\n};\r\n"],"mappings":"AAEA,MAAMA,iBAAiB,GAAG,sBAAsB;AAEzC,MAAMC,kBAAkB,GAAIC,QAA+B;EAChE,OAAOA,QAAQ,KAAKC,QAAQ,GAAGD,QAAQ,CAACE,IAAI,GAAIF,QAAwB;AAC1E,CAAC;AAED;;;;;;MAMaG,gBAAgB,GAAGA,CAACC,IAAiB,EAAEC,aAAqB;EACvE,MAAMC,GAAG,GAAGD,aAAa;EACzB,MAAML,QAAQ,GAAGI,IAAI,CAACG,WAAW,EAA2B;;;EAI5D,IAAI,CAACP,QAAQ,CAACQ,WAAW,EAAE;IACzB;;EAGF,IAAIC,KAAK,GAAGR,QAAQ,CAACS,cAAc,CAACZ,iBAAiB,CAAC;EACtD,IAAI,CAACW,KAAK,EAAE;IACVA,KAAK,GAAGR,QAAQ,CAACU,aAAa,CAAC,OAAO,CAAC;IACvCF,KAAK,CAACG,EAAE,GAAGd,iBAAiB;IAE5B,MAAMe,SAAS,GAAGd,kBAAkB,CAACC,QAAQ,CAAC;IAC9C,MAAMc,UAAU,GAAGD,SAAS,CAACE,aAAa,CAAC,eAAe,CAAC;IAE3D,IAAID,UAAU,KAAK,IAAI,EAAE;MACvBD,SAAS,CAACG,YAAY,CAACP,KAAK,EAAEK,UAAU,CAACG,WAAW,CAAC;KACtD,MAAM,IAAIJ,SAAS,CAACK,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;MAC1CN,SAAS,CAACG,YAAY,CAACP,KAAK,EAAEI,SAAS,CAACO,UAAU,CAAC;KACpD,MAAM;MACLP,SAAS,CAACQ,WAAW,CAACZ,KAAK,CAAC;;;EAIhCA,KAAK,CAACY,WAAW,CAACpB,QAAQ,CAACqB,cAAc,CAAChB,GAAG,CAAC,CAAC;EAC/CG,KAAK,CAACc,SAAS,EAAE,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
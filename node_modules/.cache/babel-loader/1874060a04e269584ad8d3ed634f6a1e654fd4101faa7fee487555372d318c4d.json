{"ast":null,"code":"const NAMESPACE = 'nextgen-web-ui-toolkit';\n\n/*\n Stencil Client Platform v4.18.0 | MIT Licensed | https://stenciljs.com\n */\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\n// src/utils/constants.ts\nvar EMPTY_OBJ = {};\n\n// src/utils/helpers.ts\nvar isDef = v => v != null;\nvar isComplexType = o => {\n  o = typeof o;\n  return o === \"object\" || o === \"function\";\n};\n\n// src/utils/query-nonce-meta-tag-content.ts\nfunction queryNonceMetaTagContent(doc2) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) == null ? void 0 : _b.getAttribute(\"content\")) != null ? _c : void 0;\n}\n\n// src/utils/result.ts\nvar result_exports = {};\n__export(result_exports, {\n  err: () => err,\n  map: () => map,\n  ok: () => ok,\n  unwrap: () => unwrap,\n  unwrapErr: () => unwrapErr\n});\nvar ok = value => ({\n  isOk: true,\n  isErr: false,\n  value\n});\nvar err = value => ({\n  isOk: false,\n  isErr: true,\n  value\n});\nfunction map(result, fn) {\n  if (result.isOk) {\n    const val = fn(result.value);\n    if (val instanceof Promise) {\n      return val.then(newVal => ok(newVal));\n    } else {\n      return ok(val);\n    }\n  }\n  if (result.isErr) {\n    const value = result.value;\n    return err(value);\n  }\n  throw \"should never get here\";\n}\nvar unwrap = result => {\n  if (result.isOk) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar unwrapErr = result => {\n  if (result.isErr) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar createTime = function (fnName) {\n  let tagName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  {\n    return () => {\n      return;\n    };\n  }\n};\nvar uniqueTime = (key, measureText) => {\n  {\n    return () => {\n      return;\n    };\n  }\n};\nvar HYDRATED_CSS = \"{visibility:hidden}.hydrated{visibility:inherit}\";\nvar SLOT_FB_CSS = \"slot-fb{display:contents}slot-fb[hidden]{display:none}\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\nvar h = function (nodeName, vnodeData) {\n  let child = null;\n  let key = null;\n  let simple = false;\n  let lastSimple = false;\n  const vNodeChildren = [];\n  const walk = c => {\n    for (let i2 = 0; i2 < c.length; i2++) {\n      child = c[i2];\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== \"boolean\") {\n        if (simple = typeof nodeName !== \"function\" && !isComplexType(child)) {\n          child = String(child);\n        }\n        if (simple && lastSimple) {\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n        lastSimple = simple;\n      }\n    }\n  };\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n  walk(children);\n  if (vnodeData) {\n    if (vnodeData.key) {\n      key = vnodeData.key;\n    }\n    {\n      const classData = vnodeData.className || vnodeData.class;\n      if (classData) {\n        vnodeData.class = typeof classData !== \"object\" ? classData : Object.keys(classData).filter(k => classData[k]).join(\" \");\n      }\n    }\n  }\n  if (typeof nodeName === \"function\") {\n    return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n  }\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n  {\n    vnode.$key$ = key;\n  }\n  return vnode;\n};\nvar newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  {\n    vnode.$attrs$ = null;\n  }\n  {\n    vnode.$key$ = null;\n  }\n  return vnode;\n};\nvar Host = {};\nvar isHost = node => node && node.$tag$ === Host;\nvar vdomFnUtils = {\n  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)\n};\nvar convertToPublic = node => ({\n  vattrs: node.$attrs$,\n  vchildren: node.$children$,\n  vkey: node.$key$,\n  vname: node.$name$,\n  vtag: node.$tag$,\n  vtext: node.$text$\n});\nvar convertToPrivate = node => {\n  if (typeof node.vtag === \"function\") {\n    const vnodeData = {\n      ...node.vattrs\n    };\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n    return h(node.vtag, vnodeData, ...(node.vchildren || []));\n  }\n  const vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\nvar parsePropertyValue = (propValue, propType) => {\n  if (propValue != null && !isComplexType(propValue)) {\n    if (propType & 4 /* Boolean */) {\n      return propValue === \"false\" ? false : propValue === \"\" || !!propValue;\n    }\n    if (propType & 2 /* Number */) {\n      return parseFloat(propValue);\n    }\n    if (propType & 1 /* String */) {\n      return String(propValue);\n    }\n    return propValue;\n  }\n  return propValue;\n};\nvar getElement = ref => getHostRef(ref).$hostElement$;\n\n// src/runtime/event-emitter.ts\nvar createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: detail => {\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4 /* Bubbles */),\n        composed: !!(flags & 2 /* Composed */),\n        cancelable: !!(flags & 1 /* Cancellable */),\n        detail\n      });\n    }\n  };\n};\nvar emitEvent = (elm, name, opts) => {\n  const ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\nvar rootAppliedStyles = /* @__PURE__ */new WeakMap();\nvar registerStyle = (scopeId2, cssText, allowCS) => {\n  let style = styles.get(scopeId2);\n  if (supportsConstructableStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    if (typeof style === \"string\") {\n      style = cssText;\n    } else {\n      style.replaceSync(cssText);\n    }\n  } else {\n    style = cssText;\n  }\n  styles.set(scopeId2, style);\n};\nvar addStyle = (styleContainerNode, cmpMeta, mode) => {\n  var _a;\n  const scopeId2 = getScopeId(cmpMeta);\n  const style = styles.get(scopeId2);\n  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n  if (style) {\n    if (typeof style === \"string\") {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */new Set());\n      }\n      if (!appliedStyles.has(scopeId2)) {\n        {\n          styleElm = doc.createElement(\"style\");\n          styleElm.innerHTML = style;\n          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n          if (nonce != null) {\n            styleElm.setAttribute(\"nonce\", nonce);\n          }\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector(\"link\"));\n        }\n        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n          styleElm.innerHTML += SLOT_FB_CSS;\n        }\n        if (appliedStyles) {\n          appliedStyles.add(scopeId2);\n        }\n      }\n    } else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n    }\n  }\n  return scopeId2;\n};\nvar attachStyles = hostRef => {\n  const cmpMeta = hostRef.$cmpMeta$;\n  const elm = hostRef.$hostElement$;\n  const flags = cmpMeta.$flags$;\n  const endAttachStyles = createTime(\"attachStyles\", cmpMeta.$tagName$);\n  const scopeId2 = addStyle(elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta);\n  if (flags & 10 /* needsScopedEncapsulation */) {\n    elm[\"s-sc\"] = scopeId2;\n    elm.classList.add(scopeId2 + \"-h\");\n  }\n  endAttachStyles();\n};\nvar getScopeId = (cmp, mode) => \"sc-\" + cmp.$tagName$;\nvar setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n    if (memberName === \"class\") {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      const newClasses = parseClassList(newValue);\n      classList.remove(...oldClasses.filter(c => c && !newClasses.includes(c)));\n      classList.add(...newClasses.filter(c => c && !oldClasses.includes(c)));\n    } else if (memberName === \"style\") {\n      {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (prop.includes(\"-\")) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = \"\";\n            }\n          }\n        }\n      }\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (prop.includes(\"-\")) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (memberName === \"key\") ;else if (memberName === \"ref\") {\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (!isProp && memberName[0] === \"o\" && memberName[1] === \"n\") {\n      if (memberName[2] === \"-\") {\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        memberName = ln.slice(2);\n      } else {\n        memberName = ln[2] + memberName.slice(3);\n      }\n      if (oldValue || newValue) {\n        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n        memberName = memberName.replace(CAPTURE_EVENT_REGEX, \"\");\n        if (oldValue) {\n          plt.rel(elm, memberName, oldValue, capture);\n        }\n        if (newValue) {\n          plt.ael(elm, memberName, newValue, capture);\n        }\n      }\n    } else {\n      const isComplex = isComplexType(newValue);\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes(\"-\")) {\n            const n = newValue == null ? \"\" : newValue;\n            if (memberName === \"list\") {\n              isProp = false;\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {}\n      }\n      let xlink = false;\n      {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, \"\"))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === \"\") {\n          if (xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n        newValue = newValue === true ? \"\" : newValue;\n        if (xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = value => !value ? [] : value.split(parseClassListRegex);\nvar CAPTURE_EVENT_SUFFIX = \"Capture\";\nvar CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + \"$\");\n\n// src/runtime/vdom/update-element.ts\nvar updateElement = (oldVnode, newVnode, isSvgMode2) => {\n  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  {\n    for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], void 0, isSvgMode2, newVnode.$flags$);\n      }\n    }\n  }\n  for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode2, newVnode.$flags$);\n  }\n};\nfunction sortedAttrNames(attrNames) {\n  return attrNames.includes(\"ref\") ?\n  // we need to sort these to ensure that `'ref'` is the last attr\n  [...attrNames.filter(attr => attr !== \"ref\"), \"ref\"] :\n  // no need to sort, return the original array\n  attrNames;\n}\n\n// src/runtime/vdom/vdom-render.ts\nvar scopeId;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar isSvgMode = false;\nvar createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n  const newVNode2 = newParentVNode.$children$[childIndex];\n  let i2 = 0;\n  let elm;\n  let childNode;\n  if (newVNode2.$text$ !== null) {\n    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);\n  } else {\n    elm = newVNode2.$elm$ = doc.createElement(newVNode2.$tag$);\n    {\n      updateElement(null, newVNode2, isSvgMode);\n    }\n    if (isDef(scopeId) && elm[\"s-si\"] !== scopeId) {\n      elm.classList.add(elm[\"s-si\"] = scopeId);\n    }\n    if (newVNode2.$children$) {\n      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {\n        childNode = createElm(oldParentVNode, newVNode2, i2);\n        if (childNode) {\n          elm.appendChild(childNode);\n        }\n      }\n    }\n  }\n  elm[\"s-hn\"] = hostTagName;\n  return elm;\n};\nvar relocateToHostRoot = parentElm => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const host = parentElm.closest(hostTagName.toLowerCase());\n  if (host != null) {\n    const contentRefNode = Array.from(host.childNodes).find(ref => ref[\"s-cr\"]);\n    const childNodeArray = Array.from(parentElm.childNodes);\n    for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n      if (childNode[\"s-sh\"] != null) {\n        host.insertBefore(childNode, contentRefNode != null ? contentRefNode : null);\n        childNode[\"s-sh\"] = void 0;\n      }\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = parentElm;\n  let childNode;\n  if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx);\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        containerElm.insertBefore(childNode, before);\n      }\n    }\n  }\n};\nvar removeVnodes = (vnodes, startIdx, endIdx) => {\n  for (let index = startIdx; index <= endIdx; ++index) {\n    const vnode = vnodes[index];\n    if (vnode) {\n      const elm = vnode.$elm$;\n      nullifyVNodeRefs(vnode);\n      if (elm) {\n        elm.remove();\n      }\n    }\n  }\n};\nvar updateChildren = function (parentElm, oldCh, newVNode2, newCh) {\n  let isInitialRender = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let idxInOld = 0;\n  let i2 = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n  let elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n      patch(oldStartVnode, newStartVnode, isInitialRender);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n      patch(oldEndVnode, newEndVnode, isInitialRender);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n      patch(oldStartVnode, newEndVnode, isInitialRender);\n      parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n      patch(oldEndVnode, newStartVnode, isInitialRender);\n      parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      idxInOld = -1;\n      {\n        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {\n          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {\n            idxInOld = i2;\n            break;\n          }\n        }\n      }\n      if (idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld);\n        } else {\n          patch(elmToMove, newStartVnode, isInitialRender);\n          oldCh[idxInOld] = void 0;\n          node = elmToMove.$elm$;\n        }\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx);\n        newStartVnode = newCh[++newStartIdx];\n      }\n      if (node) {\n        {\n          oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode2, newCh, newStartIdx, newEndIdx);\n  } else if (newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\nvar isSameVnode = function (leftVNode, rightVNode) {\n  let isInitialRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (leftVNode.$tag$ === rightVNode.$tag$) {\n    if (!isInitialRender) {\n      return leftVNode.$key$ === rightVNode.$key$;\n    }\n    return true;\n  }\n  return false;\n};\nvar patch = function (oldVNode, newVNode2) {\n  let isInitialRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const elm = newVNode2.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode2.$children$;\n  const tag = newVNode2.$tag$;\n  const text = newVNode2.$text$;\n  if (text === null) {\n    {\n      if (tag === \"slot\" && !useNativeShadowDom) {\n        if (oldVNode.$name$ !== newVNode2.$name$) {\n          newVNode2.$elm$[\"s-sn\"] = newVNode2.$name$ || \"\";\n          relocateToHostRoot(newVNode2.$elm$.parentElement);\n        }\n      } else {\n        updateElement(oldVNode, newVNode2, isSvgMode);\n      }\n    }\n    if (oldChildren !== null && newChildren !== null) {\n      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);\n    } else if (newChildren !== null) {\n      if (oldVNode.$text$ !== null) {\n        elm.textContent = \"\";\n      }\n      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);\n    } else if (oldChildren !== null) {\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n  } else if (oldVNode.$text$ !== text) {\n    elm.data = text;\n  }\n};\nvar nullifyVNodeRefs = vNode => {\n  {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n  }\n};\nvar renderVdom = function (hostRef, renderFnResults) {\n  let isInitialLoad = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var _e;\n  const hostElm = hostRef.$hostElement$;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  if (cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(_ref => {\n      let [propName, attribute] = _ref;\n      return rootVnode.$attrs$[attribute] = hostElm[propName];\n    });\n  }\n  if (isInitialLoad && rootVnode.$attrs$) {\n    for (const key of Object.keys(rootVnode.$attrs$)) {\n      if (hostElm.hasAttribute(key) && ![\"key\", \"ref\", \"style\", \"class\"].includes(key)) {\n        rootVnode.$attrs$[key] = hostElm[key];\n      }\n    }\n  }\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4 /* isHost */;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = hostElm.shadowRoot || hostElm;\n  {\n    scopeId = hostElm[\"s-sc\"];\n  }\n  useNativeShadowDom = (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n  patch(oldVNode, rootVnode, isInitialLoad);\n  if (cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n    for (const childNode of rootVnode.$elm$.childNodes) {\n      if (childNode[\"s-hn\"] !== hostTagName && !childNode[\"s-sh\"]) {\n        if (isInitialLoad && childNode[\"s-ih\"] == null) {\n          childNode[\"s-ih\"] = (_e = childNode.hidden) != null ? _e : false;\n        }\n        childNode.hidden = true;\n      }\n    }\n  }\n};\n\n// src/runtime/update-component.ts\nvar attachToAncestor = (hostRef, ancestorComponent) => {\n  if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent[\"s-p\"]) {\n    ancestorComponent[\"s-p\"].push(new Promise(r => hostRef.$onRenderResolve$ = r));\n  }\n};\nvar scheduleUpdate = (hostRef, isInitialLoad) => {\n  {\n    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n  }\n  if (hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n    hostRef.$flags$ |= 512 /* needsRerender */;\n    return;\n  }\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n  return writeTask(dispatch);\n};\nvar dispatchHooks = (hostRef, isInitialLoad) => {\n  const endSchedule = createTime(\"scheduleUpdate\", hostRef.$cmpMeta$.$tagName$);\n  const instance = hostRef.$lazyInstance$;\n  let maybePromise;\n  if (isInitialLoad) {\n    {\n      hostRef.$flags$ |= 256 /* isListenReady */;\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(_ref2 => {\n          let [methodName, event] = _ref2;\n          return safeCall(instance, methodName, event);\n        });\n        hostRef.$queuedListeners$ = void 0;\n      }\n    }\n    {\n      maybePromise = safeCall(instance, \"componentWillLoad\");\n    }\n  } else {\n    {\n      maybePromise = safeCall(instance, \"componentWillUpdate\");\n    }\n  }\n  {\n    maybePromise = enqueue(maybePromise, () => safeCall(instance, \"componentWillRender\"));\n  }\n  endSchedule();\n  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nvar enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn) : fn();\nvar isPromisey = maybePromise => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === \"function\";\nvar updateComponent = async (hostRef, instance, isInitialLoad) => {\n  var _a;\n  const elm = hostRef.$hostElement$;\n  const endUpdate = createTime(\"update\", hostRef.$cmpMeta$.$tagName$);\n  const rc = elm[\"s-rc\"];\n  if (isInitialLoad) {\n    attachStyles(hostRef);\n  }\n  const endRender = createTime(\"render\", hostRef.$cmpMeta$.$tagName$);\n  {\n    callRender(hostRef, instance, elm, isInitialLoad);\n  }\n  if (rc) {\n    rc.map(cb => cb());\n    elm[\"s-rc\"] = void 0;\n  }\n  endRender();\n  endUpdate();\n  {\n    const childrenPromises = (_a = elm[\"s-p\"]) != null ? _a : [];\n    const postUpdate = () => postUpdateComponent(hostRef);\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n      childrenPromises.length = 0;\n    }\n  }\n};\nvar callRender = (hostRef, instance, elm, isInitialLoad) => {\n  try {\n    instance = instance.render();\n    {\n      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    {\n      hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    {\n      {\n        {\n          renderVdom(hostRef, instance, isInitialLoad);\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n  return null;\n};\nvar postUpdateComponent = hostRef => {\n  const tagName = hostRef.$cmpMeta$.$tagName$;\n  const elm = hostRef.$hostElement$;\n  const endPostUpdate = createTime(\"postUpdate\", tagName);\n  const instance = hostRef.$lazyInstance$;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  {\n    safeCall(instance, \"componentDidRender\");\n  }\n  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n    hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n    {\n      addHydratedFlag(elm);\n    }\n    {\n      safeCall(instance, \"componentDidLoad\");\n    }\n    endPostUpdate();\n    {\n      hostRef.$onReadyResolve$(elm);\n      if (!ancestorComponent) {\n        appDidLoad();\n      }\n    }\n  } else {\n    endPostUpdate();\n  }\n  {\n    hostRef.$onInstanceResolve$(elm);\n  }\n  {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = void 0;\n    }\n    if (hostRef.$flags$ & 512 /* needsRerender */) {\n      nextTick(() => scheduleUpdate(hostRef, false));\n    }\n    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n  }\n};\nvar forceUpdate = ref => {\n  {\n    const hostRef = getHostRef(ref);\n    const isConnected = hostRef.$hostElement$.isConnected;\n    if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n      scheduleUpdate(hostRef, false);\n    }\n    return isConnected;\n  }\n};\nvar appDidLoad = who => {\n  {\n    addHydratedFlag(doc.documentElement);\n  }\n  nextTick(() => emitEvent(win, \"appload\", {\n    detail: {\n      namespace: NAMESPACE\n    }\n  }));\n};\nvar safeCall = (instance, method, arg) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  return void 0;\n};\nvar addHydratedFlag = elm => elm.classList.add(\"hydrated\");\n\n// src/runtime/set-value.ts\nvar getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nvar setValue = (ref, propName, newVal, cmpMeta) => {\n  const hostRef = getHostRef(ref);\n  const elm = hostRef.$hostElement$;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = hostRef.$lazyInstance$;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n  const didValueChange = newVal !== oldVal && !areBothNaN;\n  if ((!(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {\n    hostRef.$instanceValues$.set(propName, newVal);\n    if (instance) {\n      if (cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n        const watchMethods = cmpMeta.$watchers$[propName];\n        if (watchMethods) {\n          watchMethods.map(watchMethodName => {\n            try {\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n      if ((flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\n// src/runtime/proxy-component.ts\nvar proxyComponent = (Cstr, cmpMeta, flags) => {\n  var _a;\n  const prototype = Cstr.prototype;\n  if (cmpMeta.$members$) {\n    if (Cstr.watchers) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    }\n    const members = Object.entries(cmpMeta.$members$);\n    members.map(_ref3 => {\n      let [memberName, [memberFlags]] = _ref3;\n      if (memberFlags & 31 /* Prop */ || flags & 2 /* proxyState */ && memberFlags & 32 /* State */) {\n        Object.defineProperty(prototype, memberName, {\n          get() {\n            return getValue(this, memberName);\n          },\n          set(newValue) {\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      } else if (flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n        Object.defineProperty(prototype, memberName, {\n          value() {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n            var _a2;\n            const ref = getHostRef(this);\n            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {\n              var _a3;\n              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);\n            });\n          }\n        });\n      }\n    });\n    if (flags & 1 /* isElementConstructor */) {\n      const attrNameToPropName = /* @__PURE__ */new Map();\n      prototype.attributeChangedCallback = function (attrName, oldValue, newValue) {\n        plt.jmp(() => {\n          var _a2;\n          const propName = attrNameToPropName.get(attrName);\n          if (this.hasOwnProperty(propName)) {\n            newValue = this[propName];\n            delete this[propName];\n          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === \"number\" && this[propName] == newValue) {\n            return;\n          } else if (propName == null) {\n            const hostRef = getHostRef(this);\n            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;\n            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {\n              const instance = hostRef.$lazyInstance$;\n              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];\n              entry == null ? void 0 : entry.forEach(callbackName => {\n                if (instance[callbackName] != null) {\n                  instance[callbackName].call(instance, newValue, oldValue, attrName);\n                }\n              });\n            }\n            return;\n          }\n          this[propName] = newValue === null && typeof this[propName] === \"boolean\" ? false : newValue;\n        });\n      };\n      Cstr.observedAttributes = Array.from( /* @__PURE__ */new Set([...Object.keys((_a = cmpMeta.$watchers$) != null ? _a : {}), ...members.filter(_ref4 => {\n        let [_, m] = _ref4;\n        return m[0] & 15;\n      } /* HasAttribute */).map(_ref5 => {\n        let [propName, m] = _ref5;\n        var _a2;\n        const attrName = m[1] || propName;\n        attrNameToPropName.set(attrName, propName);\n        if (m[0] & 512 /* ReflectAttr */) {\n          (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);\n        }\n        return attrName;\n      })]));\n    }\n  }\n  return Cstr;\n};\n\n// src/runtime/initialize-component.ts\nvar initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n  let Cstr;\n  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n    hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if (bundleId) {\n      Cstr = loadModule(cmpMeta);\n      if (Cstr.then) {\n        const endLoad = uniqueTime();\n        Cstr = await Cstr;\n        endLoad();\n      }\n      if (!Cstr.isProxied) {\n        {\n          cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n        Cstr.isProxied = true;\n      }\n      const endNewInstance = createTime(\"createInstance\", cmpMeta.$tagName$);\n      {\n        hostRef.$flags$ |= 8 /* isConstructingInstance */;\n      }\n      try {\n        new Cstr(hostRef);\n      } catch (e) {\n        consoleError(e);\n      }\n      {\n        hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n      }\n      {\n        hostRef.$flags$ |= 128 /* isWatchReady */;\n      }\n      endNewInstance();\n      fireConnectedCallback(hostRef.$lazyInstance$);\n    } else {\n      Cstr = elm.constructor;\n      customElements.whenDefined(cmpMeta.$tagName$).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);\n    }\n    if (Cstr.style) {\n      let style = Cstr.style;\n      const scopeId2 = getScopeId(cmpMeta);\n      if (!styles.has(scopeId2)) {\n        const endRegisterStyles = createTime(\"registerStyles\", cmpMeta.$tagName$);\n        registerStyle(scopeId2, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n        endRegisterStyles();\n      }\n    }\n  }\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const schedule = () => scheduleUpdate(hostRef, true);\n  if (ancestorComponent && ancestorComponent[\"s-rc\"]) {\n    ancestorComponent[\"s-rc\"].push(schedule);\n  } else {\n    schedule();\n  }\n};\nvar fireConnectedCallback = instance => {\n  {\n    safeCall(instance, \"connectedCallback\");\n  }\n};\n\n// src/runtime/connected-callback.ts\nvar connectedCallback = elm => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    const cmpMeta = hostRef.$cmpMeta$;\n    const endConnected = createTime(\"connectedCallback\", cmpMeta.$tagName$);\n    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n      hostRef.$flags$ |= 1 /* hasConnected */;\n      {\n        let ancestorComponent = elm;\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          if (ancestorComponent[\"s-p\"]) {\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      }\n      if (cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(_ref6 => {\n          let [memberName, [memberFlags]] = _ref6;\n          if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n      {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n        fireConnectedCallback(hostRef.$lazyInstance$);\n      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));\n      }\n    }\n    endConnected();\n  }\n};\nvar disconnectInstance = instance => {\n  {\n    safeCall(instance, \"disconnectedCallback\");\n  }\n};\nvar disconnectedCallback = async elm => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map(rmListener => rmListener());\n        hostRef.$rmListeners$ = void 0;\n      }\n    }\n    if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n      disconnectInstance(hostRef.$lazyInstance$);\n    } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n      hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));\n    }\n  }\n};\n\n// src/runtime/bootstrap-lazy.ts\nvar bootstrapLazy = function (lazyBundles) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _a;\n  const endBootstrap = createTime();\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements2 = win.customElements;\n  const head = doc.head;\n  const metaCharset = /* @__PURE__ */head.querySelector(\"meta[charset]\");\n  const dataStyles = /* @__PURE__ */doc.createElement(\"style\");\n  const deferredConnectedCallbacks = [];\n  let appLoadFallback;\n  let isBootstrapping = true;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || \"./\", doc.baseURI).href;\n  let hasSlotRelocation = false;\n  lazyBundles.map(lazyBundle => {\n    lazyBundle[1].map(compactMeta => {\n      var _a2;\n      const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n        hasSlotRelocation = true;\n      }\n      {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      {\n        cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};\n      }\n      const tagName = cmpMeta.$tagName$;\n      const HostElement = class extends HTMLElement {\n        // StencilLazyHost\n        constructor(self) {\n          super(self);\n          self = this;\n          registerHost(self, cmpMeta);\n          if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            {\n              {\n                self.attachShadow({\n                  mode: \"open\",\n                  delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n                });\n              }\n            }\n          }\n        }\n        connectedCallback() {\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n          if (isBootstrapping) {\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(() => connectedCallback(this));\n          }\n        }\n        disconnectedCallback() {\n          plt.jmp(() => disconnectedCallback(this));\n        }\n        componentOnReady() {\n          return getHostRef(this).$onReadyPromise$;\n        }\n      };\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n      if (!exclude.includes(tagName) && !customElements2.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements2.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n      }\n    });\n  });\n  if (cmpTags.length > 0) {\n    if (hasSlotRelocation) {\n      dataStyles.textContent += SLOT_FB_CSS;\n    }\n    {\n      dataStyles.textContent += cmpTags + HYDRATED_CSS;\n    }\n    if (dataStyles.innerHTML.length) {\n      dataStyles.setAttribute(\"data-styles\", \"\");\n      const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n      if (nonce != null) {\n        dataStyles.setAttribute(\"nonce\", nonce);\n      }\n      head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n  }\n  isBootstrapping = false;\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map(host => host.connectedCallback());\n  } else {\n    {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  }\n  endBootstrap();\n};\nvar addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n  if (listeners) {\n    listeners.map(_ref7 => {\n      let [flags, name, method] = _ref7;\n      const target = elm;\n      const handler = hostListenerProxy(hostRef, method);\n      const opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n    });\n  }\n};\nvar hostListenerProxy = (hostRef, methodName) => ev => {\n  try {\n    {\n      if (hostRef.$flags$ & 256 /* isListenReady */) {\n        hostRef.$lazyInstance$[methodName](ev);\n      } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    }\n  } catch (e) {\n    consoleError(e);\n  }\n};\nvar hostListenerOpts = flags => supportsListenerOptions ? {\n  passive: (flags & 1 /* Passive */) !== 0,\n  capture: (flags & 2 /* Capture */) !== 0\n} : (flags & 2 /* Capture */) !== 0;\n\n// src/runtime/nonce.ts\nvar setNonce = nonce => plt.$nonce$ = nonce;\n\n// src/client/client-host-ref.ts\nvar hostRefs = /* @__PURE__ */new WeakMap();\nvar getHostRef = ref => hostRefs.get(ref);\nvar registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\nvar registerHost = (hostElement, cmpMeta) => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: hostElement,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: /* @__PURE__ */new Map()\n  };\n  {\n    hostRef.$onInstancePromise$ = new Promise(r => hostRef.$onInstanceResolve$ = r);\n  }\n  {\n    hostRef.$onReadyPromise$ = new Promise(r => hostRef.$onReadyResolve$ = r);\n    hostElement[\"s-p\"] = [];\n    hostElement[\"s-rc\"] = [];\n  }\n  addHostEventListeners(hostElement, hostRef, cmpMeta.$listeners$);\n  return hostRefs.set(hostElement, hostRef);\n};\nvar isMemberInElement = (elm, memberName) => memberName in elm;\nvar consoleError = (e, el) => (0, console.error)(e, el);\n\n// src/client/client-load-module.ts\nvar cmpModules = /* @__PURE__ */new Map();\nvar loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  const exportName = cmpMeta.$tagName$.replace(/-/g, \"_\");\n  const bundleId = cmpMeta.$lazyBundleId$;\n  const module = cmpModules.get(bundleId);\n  if (module) {\n    return module[exportName];\n  }\n  if (!hmrVersionId || !BUILD.hotModuleReplacement) {\n    const processMod = importedModule => {\n      cmpModules.set(bundleId, importedModule);\n      return importedModule[exportName];\n    };\n    switch (bundleId) {\n      case 'dc-ui-btn-group_9':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-btn-group_9.entry.js').then(processMod, consoleError);\n      case 'dc-ui-accordion':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-accordion.entry.js').then(processMod, consoleError);\n      case 'dc-ui-callout':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-callout.entry.js').then(processMod, consoleError);\n      case 'dc-ui-checkbox':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-checkbox.entry.js').then(processMod, consoleError);\n      case 'dc-ui-context':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-context.entry.js').then(processMod, consoleError);\n      case 'dc-ui-context-item':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-context-item.entry.js').then(processMod, consoleError);\n      case 'dc-ui-divider':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-divider.entry.js').then(processMod, consoleError);\n      case 'dc-ui-dropdown-wrapper':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-dropdown-wrapper.entry.js').then(processMod, consoleError);\n      case 'dc-ui-family-result-item':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-family-result-item.entry.js').then(processMod, consoleError);\n      case 'dc-ui-filter-tag':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-filter-tag.entry.js').then(processMod, consoleError);\n      case 'dc-ui-flex':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-flex.entry.js').then(processMod, consoleError);\n      case 'dc-ui-flex-item':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-flex-item.entry.js').then(processMod, consoleError);\n      case 'dc-ui-gallery':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-gallery.entry.js').then(processMod, consoleError);\n      case 'dc-ui-gallery-item':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-gallery-item.entry.js').then(processMod, consoleError);\n      case 'dc-ui-grid':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-grid.entry.js').then(processMod, consoleError);\n      case 'dc-ui-grid-item':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-grid-item.entry.js').then(processMod, consoleError);\n      case 'dc-ui-image':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-image.entry.js').then(processMod, consoleError);\n      case 'dc-ui-image-wrapper':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-image-wrapper.entry.js').then(processMod, consoleError);\n      case 'dc-ui-indicator':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-indicator.entry.js').then(processMod, consoleError);\n      case 'dc-ui-input-wrapper':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-input-wrapper.entry.js').then(processMod, consoleError);\n      case 'dc-ui-link-button':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-link-button.entry.js').then(processMod, consoleError);\n      case 'dc-ui-list':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-list.entry.js').then(processMod, consoleError);\n      case 'dc-ui-list-item':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-list-item.entry.js').then(processMod, consoleError);\n      case 'dc-ui-list-result-item':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-list-result-item.entry.js').then(processMod, consoleError);\n      case 'dc-ui-product-link':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-product-link.entry.js').then(processMod, consoleError);\n      case 'dc-ui-progress-icon':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-progress-icon.entry.js').then(processMod, consoleError);\n      case 'dc-ui-radio':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-radio.entry.js').then(processMod, consoleError);\n      case 'dc-ui-select-button':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-select-button.entry.js').then(processMod, consoleError);\n      case 'dc-ui-status':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-status.entry.js').then(processMod, consoleError);\n      case 'dc-ui-tab-navigation':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-tab-navigation.entry.js').then(processMod, consoleError);\n      case 'dc-ui-tab-navigation-item':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-tab-navigation-item.entry.js').then(processMod, consoleError);\n      case 'dc-ui-table':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-table.entry.js').then(processMod, consoleError);\n      case 'dc-ui-textarea-wrapper':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-textarea-wrapper.entry.js').then(processMod, consoleError);\n      case 'dc-ui-tooltip':\n        return import( /* webpackMode: \"lazy\" */\n        './dc-ui-tooltip.entry.js').then(processMod, consoleError);\n    }\n  }\n  return import(\n  /* @vite-ignore */\n  /* webpackInclude: /\\.entry\\.js$/ */\n  /* webpackExclude: /\\.system\\.entry\\.js$/ */\n  /* webpackMode: \"lazy\" */\n  \"./\".concat(bundleId, \".entry.js\")).then(importedModule => {\n    {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\n// src/client/client-style.ts\nvar styles = /* @__PURE__ */new Map();\nvar win = typeof window !== \"undefined\" ? window : {};\nvar doc = win.document || {\n  head: {}\n};\nvar H = win.HTMLElement || class {};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: \"\",\n  jmp: h2 => h2(),\n  raf: h2 => requestAnimationFrame(h2),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n  ce: (eventName, opts) => new CustomEvent(eventName, opts)\n};\nvar supportsListenerOptions = /* @__PURE__ */(() => {\n  let supportsListenerOptions2 = false;\n  try {\n    doc.addEventListener(\"e\", null, Object.defineProperty({}, \"passive\", {\n      get() {\n        supportsListenerOptions2 = true;\n      }\n    }));\n  } catch (e) {}\n  return supportsListenerOptions2;\n})();\nvar promiseResolve = v => Promise.resolve(v);\nvar supportsConstructableStylesheets = /* @__PURE__ */(() => {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replaceSync === \"function\";\n  } catch (e) {}\n  return false;\n})();\nvar queuePending = false;\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueTask = (queue, write) => cb => {\n  queue.push(cb);\n  if (!queuePending) {\n    queuePending = true;\n    if (write && plt.$flags$ & 4 /* queueSync */) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\nvar consume = queue => {\n  for (let i2 = 0; i2 < queue.length; i2++) {\n    try {\n      queue[i2](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  queue.length = 0;\n};\nvar flush = () => {\n  consume(queueDomReads);\n  {\n    consume(queueDomWrites);\n    if (queuePending = queueDomReads.length > 0) {\n      plt.raf(flush);\n    }\n  }\n};\nvar nextTick = cb => promiseResolve().then(cb);\nvar writeTask = /* @__PURE__ */queueTask(queueDomWrites, true);\nexport { H, Host as a, bootstrapLazy as b, createEvent as c, forceUpdate as f, getElement as g, h, promiseResolve as p, registerInstance as r, setNonce as s };","map":{"version":3,"names":["NAMESPACE","__defProp","Object","defineProperty","__export","target","all","name","get","enumerable","EMPTY_OBJ","isDef","v","isComplexType","o","queryNonceMetaTagContent","doc2","_a","_b","_c","head","querySelector","getAttribute","result_exports","err","map","ok","unwrap","unwrapErr","value","isOk","isErr","result","fn","val","Promise","then","newVal","createTime","fnName","tagName","arguments","length","undefined","uniqueTime","key","measureText","HYDRATED_CSS","SLOT_FB_CSS","XLINK_NS","h","nodeName","vnodeData","child","simple","lastSimple","vNodeChildren","walk","c","i2","Array","isArray","String","$text$","push","newVNode","_len","children","_key","classData","className","class","keys","filter","k","join","vdomFnUtils","vnode","$attrs$","$children$","$key$","tag","text","$flags$","$tag$","$elm$","Host","isHost","node","forEach","cb","convertToPublic","convertToPrivate","vattrs","vchildren","vkey","vname","$name$","vtag","vtext","parsePropertyValue","propValue","propType","parseFloat","getElement","ref","getHostRef","$hostElement$","createEvent","flags","elm","emit","detail","emitEvent","bubbles","composed","cancelable","opts","ev","plt","ce","dispatchEvent","rootAppliedStyles","WeakMap","registerStyle","scopeId2","cssText","allowCS","style","styles","supportsConstructableStylesheets","CSSStyleSheet","replaceSync","set","addStyle","styleContainerNode","cmpMeta","mode","getScopeId","nodeType","doc","appliedStyles","styleElm","Set","has","createElement","innerHTML","nonce","$nonce$","setAttribute","insertBefore","add","adoptedStyleSheets","includes","attachStyles","hostRef","$cmpMeta$","endAttachStyles","$tagName$","shadowRoot","getRootNode","classList","cmp","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses","parseClassList","newClasses","remove","prop","removeProperty","setProperty","slice","win","capture","endsWith","CAPTURE_EVENT_SUFFIX","replace","CAPTURE_EVENT_REGEX","rel","ael","isComplex","n","e","xlink","removeAttributeNS","removeAttribute","setAttributeNS","parseClassListRegex","split","RegExp","updateElement","oldVnode","newVnode","isSvgMode2","host","oldVnodeAttrs","newVnodeAttrs","sortedAttrNames","attrNames","attr","scopeId","hostTagName","useNativeShadowDom","isSvgMode","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","newVNode2","childNode","createTextNode","appendChild","relocateToHostRoot","closest","contentRefNode","from","childNodes","find","childNodeArray","reverse","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","index","nullifyVNodeRefs","updateChildren","oldCh","newCh","isInitialRender","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","nextSibling","parentNode","leftVNode","rightVNode","oldVNode","oldChildren","newChildren","parentElement","textContent","data","vNode","renderVdom","renderFnResults","isInitialLoad","_e","hostElm","$vnode$","rootVnode","$attrsToReflect$","_ref","propName","attribute","hasAttribute","hidden","attachToAncestor","ancestorComponent","$onRenderResolve$","r","scheduleUpdate","$ancestorComponent$","dispatch","dispatchHooks","writeTask","endSchedule","instance","$lazyInstance$","maybePromise","$queuedListeners$","_ref2","methodName","event","safeCall","enqueue","updateComponent","isPromisey","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","$onInstanceResolve$","nextTick","forceUpdate","isConnected","who","documentElement","namespace","method","arg","getValue","$instanceValues$","setValue","oldVal","$members$","areBothNaN","Number","isNaN","didValueChange","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","prototype","watchers","members","entries","_ref3","memberFlags","configurable","_len2","args","_key2","_a2","$onInstancePromise$","_a3","attrNameToPropName","Map","attributeChangedCallback","attrName","jmp","hasOwnProperty","flags2","entry","callbackName","call","observedAttributes","_ref4","_","m","_ref5","initializeComponent","hmrVersionId","bundleId","$lazyBundleId$","loadModule","endLoad","isProxied","endNewInstance","fireConnectedCallback","constructor","customElements","whenDefined","endRegisterStyles","schedule","connectedCallback","endConnected","_ref6","addHostEventListeners","$listeners$","$onReadyPromise$","disconnectInstance","disconnectedCallback","$rmListeners$","rmListener","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements2","metaCharset","dataStyles","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","assign","$resourcesUrl$","URL","resourcesUrl","baseURI","href","hasSlotRelocation","lazyBundle","compactMeta","HostElement","HTMLElement","self","registerHost","attachShadow","delegatesFocus","clearTimeout","componentOnReady","define","firstChild","setTimeout","listeners","attachParentListeners","_ref7","handler","hostListenerProxy","hostListenerOpts","supportsListenerOptions","passive","setNonce","hostRefs","registerInstance","lazyInstance","hostElement","el","console","error","cmpModules","exportName","module","BUILD","hotModuleReplacement","processMod","importedModule"],"sources":["C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_final\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\@stencil\\core\\internal\\app-data","C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_final\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\node_modules\\@stencil\\core\\internal\\client\\index.js?app-data=conditional"],"sourcesContent":["export const NAMESPACE = 'nextgen-web-ui-toolkit';\nexport const BUILD = /* nextgen-web-ui-toolkit */ { allRenderFn: true, appendChildSlotFix: true, asyncLoading: true, asyncQueue: false, attachStyles: true, cloneNodeFix: true, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: false, cmpShouldUpdate: false, cmpWillLoad: true, cmpWillRender: true, cmpWillUpdate: true, connectedCallback: true, constructableCSS: true, cssAnnotations: true, devTools: false, disconnectedCallback: true, element: false, event: true, experimentalScopedSlotChanges: true, experimentalSlotFixes: true, formAssociated: false, hasRenderFn: true, hostListener: true, hostListenerTarget: false, hostListenerTargetBody: false, hostListenerTargetDocument: false, hostListenerTargetParent: false, hostListenerTargetWindow: false, hotModuleReplacement: false, hydrateClientSide: false, hydrateServerSide: false, hydratedAttribute: false, hydratedClass: true, initializeNextTick: false, invisiblePrehydration: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: false, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, scoped: false, scopedSlotTextContentFix: true, scriptDataOpts: false, shadowDelegatesFocus: true, shadowDom: true, slot: true, slotChildNodesFix: true, slotRelocation: false, state: true, style: true, svg: false, taskQueue: true, transformTagName: false, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };\nexport const Env = /* nextgen-web-ui-toolkit */ {};\n","/*\n Stencil Client Platform v4.18.0 | MIT Licensed | https://stenciljs.com\n */\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/client/client-build.ts\nimport { BUILD } from \"@stencil/core/internal/app-data\";\nvar Build = {\n  isDev: BUILD.isDev ? true : false,\n  isBrowser: true,\n  isServer: false,\n  isTesting: BUILD.isTesting ? true : false\n};\n\n// src/client/client-host-ref.ts\nimport { BUILD as BUILD22 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/asset-path.ts\nvar getAssetPath = (path) => {\n  const assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nvar setAssetPath = (path) => plt.$resourcesUrl$ = path;\n\n// src/runtime/bootstrap-custom-element.ts\nimport { BUILD as BUILD19 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/constants.ts\nvar EMPTY_OBJ = {};\nvar SVG_NS = \"http://www.w3.org/2000/svg\";\nvar HTML_NS = \"http://www.w3.org/1999/xhtml\";\n\n// src/utils/helpers.ts\nvar isDef = (v) => v != null;\nvar isComplexType = (o) => {\n  o = typeof o;\n  return o === \"object\" || o === \"function\";\n};\n\n// src/utils/query-nonce-meta-tag-content.ts\nfunction queryNonceMetaTagContent(doc2) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) == null ? void 0 : _b.getAttribute(\"content\")) != null ? _c : void 0;\n}\n\n// src/utils/result.ts\nvar result_exports = {};\n__export(result_exports, {\n  err: () => err,\n  map: () => map,\n  ok: () => ok,\n  unwrap: () => unwrap,\n  unwrapErr: () => unwrapErr\n});\nvar ok = (value) => ({\n  isOk: true,\n  isErr: false,\n  value\n});\nvar err = (value) => ({\n  isOk: false,\n  isErr: true,\n  value\n});\nfunction map(result, fn) {\n  if (result.isOk) {\n    const val = fn(result.value);\n    if (val instanceof Promise) {\n      return val.then((newVal) => ok(newVal));\n    } else {\n      return ok(val);\n    }\n  }\n  if (result.isErr) {\n    const value = result.value;\n    return err(value);\n  }\n  throw \"should never get here\";\n}\nvar unwrap = (result) => {\n  if (result.isOk) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar unwrapErr = (result) => {\n  if (result.isErr) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\n\n// src/runtime/connected-callback.ts\nimport { BUILD as BUILD16 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/client-hydrate.ts\nimport { BUILD as BUILD4 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/profile.ts\nimport { BUILD as BUILD2 } from \"@stencil/core/internal/app-data\";\nvar i = 0;\nvar createTime = (fnName, tagName = \"\") => {\n  if (BUILD2.profile && performance.mark) {\n    const key = `st:${fnName}:${tagName}:${i++}`;\n    performance.mark(key);\n    return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar uniqueTime = (key, measureText) => {\n  if (BUILD2.profile && performance.mark) {\n    if (performance.getEntriesByName(key, \"mark\").length === 0) {\n      performance.mark(key);\n    }\n    return () => {\n      if (performance.getEntriesByName(measureText, \"measure\").length === 0) {\n        performance.measure(measureText, key);\n      }\n    };\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar inspect = (ref) => {\n  const hostRef = getHostRef(ref);\n  if (!hostRef) {\n    return void 0;\n  }\n  const flags = hostRef.$flags$;\n  const hostElement = hostRef.$hostElement$;\n  return {\n    renderCount: hostRef.$renderCount$,\n    flags: {\n      hasRendered: !!(flags & 2 /* hasRendered */),\n      hasConnected: !!(flags & 1 /* hasConnected */),\n      isWaitingForChildren: !!(flags & 4 /* isWaitingForChildren */),\n      isConstructingInstance: !!(flags & 8 /* isConstructingInstance */),\n      isQueuedForUpdate: !!(flags & 16 /* isQueuedForUpdate */),\n      hasInitializedComponent: !!(flags & 32 /* hasInitializedComponent */),\n      hasLoadedComponent: !!(flags & 64 /* hasLoadedComponent */),\n      isWatchReady: !!(flags & 128 /* isWatchReady */),\n      isListenReady: !!(flags & 256 /* isListenReady */),\n      needsRerender: !!(flags & 512 /* needsRerender */)\n    },\n    instanceValues: hostRef.$instanceValues$,\n    ancestorComponent: hostRef.$ancestorComponent$,\n    hostElement,\n    lazyInstance: hostRef.$lazyInstance$,\n    vnode: hostRef.$vnode$,\n    modeName: hostRef.$modeName$,\n    onReadyPromise: hostRef.$onReadyPromise$,\n    onReadyResolve: hostRef.$onReadyResolve$,\n    onInstancePromise: hostRef.$onInstancePromise$,\n    onInstanceResolve: hostRef.$onInstanceResolve$,\n    onRenderResolve: hostRef.$onRenderResolve$,\n    queuedListeners: hostRef.$queuedListeners$,\n    rmListeners: hostRef.$rmListeners$,\n    [\"s-id\"]: hostElement[\"s-id\"],\n    [\"s-cr\"]: hostElement[\"s-cr\"],\n    [\"s-lr\"]: hostElement[\"s-lr\"],\n    [\"s-p\"]: hostElement[\"s-p\"],\n    [\"s-rc\"]: hostElement[\"s-rc\"],\n    [\"s-sc\"]: hostElement[\"s-sc\"]\n  };\n};\nvar installDevTools = () => {\n  if (BUILD2.devTools) {\n    const stencil = win.stencil = win.stencil || {};\n    const originalInspect = stencil.inspect;\n    stencil.inspect = (ref) => {\n      let result = inspect(ref);\n      if (!result && typeof originalInspect === \"function\") {\n        result = originalInspect(ref);\n      }\n      return result;\n    };\n  }\n};\n\n// src/runtime/runtime-constants.ts\nvar CONTENT_REF_ID = \"r\";\nvar ORG_LOCATION_ID = \"o\";\nvar SLOT_NODE_ID = \"s\";\nvar TEXT_NODE_ID = \"t\";\nvar HYDRATE_ID = \"s-id\";\nvar HYDRATED_STYLE_ID = \"sty-id\";\nvar HYDRATE_CHILD_ID = \"c-id\";\nvar HYDRATED_CSS = \"{visibility:hidden}.hydrated{visibility:inherit}\";\nvar SLOT_FB_CSS = \"slot-fb{display:contents}slot-fb[hidden]{display:none}\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\nvar FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n  \"formAssociatedCallback\",\n  \"formResetCallback\",\n  \"formDisabledCallback\",\n  \"formStateRestoreCallback\"\n];\n\n// src/runtime/vdom/h.ts\nimport { BUILD as BUILD3 } from \"@stencil/core/internal/app-data\";\nvar h = (nodeName, vnodeData, ...children) => {\n  let child = null;\n  let key = null;\n  let slotName = null;\n  let simple = false;\n  let lastSimple = false;\n  const vNodeChildren = [];\n  const walk = (c) => {\n    for (let i2 = 0; i2 < c.length; i2++) {\n      child = c[i2];\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== \"boolean\") {\n        if (simple = typeof nodeName !== \"function\" && !isComplexType(child)) {\n          child = String(child);\n        } else if (BUILD3.isDev && typeof nodeName !== \"function\" && child.$flags$ === void 0) {\n          consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n        }\n        if (simple && lastSimple) {\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n        lastSimple = simple;\n      }\n    }\n  };\n  walk(children);\n  if (vnodeData) {\n    if (BUILD3.isDev && nodeName === \"input\") {\n      validateInputProperties(vnodeData);\n    }\n    if (BUILD3.vdomKey && vnodeData.key) {\n      key = vnodeData.key;\n    }\n    if (BUILD3.slotRelocation && vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n    if (BUILD3.vdomClass) {\n      const classData = vnodeData.className || vnodeData.class;\n      if (classData) {\n        vnodeData.class = typeof classData !== \"object\" ? classData : Object.keys(classData).filter((k) => classData[k]).join(\" \");\n      }\n    }\n  }\n  if (BUILD3.isDev && vNodeChildren.some(isHost)) {\n    consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n  }\n  if (BUILD3.vdomFunctional && typeof nodeName === \"function\") {\n    return nodeName(\n      vnodeData === null ? {} : vnodeData,\n      vNodeChildren,\n      vdomFnUtils\n    );\n  }\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n  if (BUILD3.vdomKey) {\n    vnode.$key$ = key;\n  }\n  if (BUILD3.slotRelocation) {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\nvar newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  if (BUILD3.vdomAttribute) {\n    vnode.$attrs$ = null;\n  }\n  if (BUILD3.vdomKey) {\n    vnode.$key$ = null;\n  }\n  if (BUILD3.slotRelocation) {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\nvar Host = {};\nvar isHost = (node) => node && node.$tag$ === Host;\nvar vdomFnUtils = {\n  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)\n};\nvar convertToPublic = (node) => ({\n  vattrs: node.$attrs$,\n  vchildren: node.$children$,\n  vkey: node.$key$,\n  vname: node.$name$,\n  vtag: node.$tag$,\n  vtext: node.$text$\n});\nvar convertToPrivate = (node) => {\n  if (typeof node.vtag === \"function\") {\n    const vnodeData = { ...node.vattrs };\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n    return h(node.vtag, vnodeData, ...node.vchildren || []);\n  }\n  const vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\nvar validateInputProperties = (inputElm) => {\n  const props = Object.keys(inputElm);\n  const value = props.indexOf(\"value\");\n  if (value === -1) {\n    return;\n  }\n  const typeIndex = props.indexOf(\"type\");\n  const minIndex = props.indexOf(\"min\");\n  const maxIndex = props.indexOf(\"max\");\n  const stepIndex = props.indexOf(\"step\");\n  if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n    consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n  }\n};\n\n// src/runtime/client-hydrate.ts\nvar initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n  const endHydrate = createTime(\"hydrateClient\", tagName);\n  const shadowRoot = hostElm.shadowRoot;\n  const childRenderNodes = [];\n  const slotNodes = [];\n  const shadowRootNodes = BUILD4.shadowDom && shadowRoot ? [] : null;\n  const vnode = hostRef.$vnode$ = newVNode(tagName, null);\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = /* @__PURE__ */ new Map());\n  }\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n  childRenderNodes.map((c) => {\n    const orgLocationId = c.$hostId$ + \".\" + c.$nodeId$;\n    const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    const node = c.$elm$;\n    if (orgLocationNode && supportsShadow && orgLocationNode[\"s-en\"] === \"\") {\n      orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n    }\n    if (!shadowRoot) {\n      node[\"s-hn\"] = tagName;\n      if (orgLocationNode) {\n        node[\"s-ol\"] = orgLocationNode;\n        node[\"s-ol\"][\"s-nr\"] = node;\n      }\n    }\n    plt.$orgLocNodes$.delete(orgLocationId);\n  });\n  if (BUILD4.shadowDom && shadowRoot) {\n    shadowRootNodes.map((shadowRootNode) => {\n      if (shadowRootNode) {\n        shadowRoot.appendChild(shadowRootNode);\n      }\n    });\n  }\n  endHydrate();\n};\nvar clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {\n  let childNodeType;\n  let childIdSplt;\n  let childVNode;\n  let i2;\n  if (node.nodeType === 1 /* ElementNode */) {\n    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n    if (childNodeType) {\n      childIdSplt = childNodeType.split(\".\");\n      if (childIdSplt[0] === hostId || childIdSplt[0] === \"0\") {\n        childVNode = {\n          $flags$: 0,\n          $hostId$: childIdSplt[0],\n          $nodeId$: childIdSplt[1],\n          $depth$: childIdSplt[2],\n          $index$: childIdSplt[3],\n          $tag$: node.tagName.toLowerCase(),\n          $elm$: node,\n          $attrs$: null,\n          $children$: null,\n          $key$: null,\n          $name$: null,\n          $text$: null\n        };\n        childRenderNodes.push(childVNode);\n        node.removeAttribute(HYDRATE_CHILD_ID);\n        if (!parentVNode.$children$) {\n          parentVNode.$children$ = [];\n        }\n        parentVNode.$children$[childVNode.$index$] = childVNode;\n        parentVNode = childVNode;\n        if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n        }\n      }\n    }\n    for (i2 = node.childNodes.length - 1; i2 >= 0; i2--) {\n      clientHydrate(\n        parentVNode,\n        childRenderNodes,\n        slotNodes,\n        shadowRootNodes,\n        hostElm,\n        node.childNodes[i2],\n        hostId\n      );\n    }\n    if (node.shadowRoot) {\n      for (i2 = node.shadowRoot.childNodes.length - 1; i2 >= 0; i2--) {\n        clientHydrate(\n          parentVNode,\n          childRenderNodes,\n          slotNodes,\n          shadowRootNodes,\n          hostElm,\n          node.shadowRoot.childNodes[i2],\n          hostId\n        );\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[1] === hostId || childIdSplt[1] === \"0\") {\n      childNodeType = childIdSplt[0];\n      childVNode = {\n        $flags$: 0,\n        $hostId$: childIdSplt[1],\n        $nodeId$: childIdSplt[2],\n        $depth$: childIdSplt[3],\n        $index$: childIdSplt[4],\n        $elm$: node,\n        $attrs$: null,\n        $children$: null,\n        $key$: null,\n        $name$: null,\n        $tag$: null,\n        $text$: null\n      };\n      if (childNodeType === TEXT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {\n          childVNode.$text$ = childVNode.$elm$.textContent;\n          childRenderNodes.push(childVNode);\n          node.remove();\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n          if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } else if (childVNode.$hostId$ === hostId) {\n        if (childNodeType === SLOT_NODE_ID) {\n          childVNode.$tag$ = \"slot\";\n          if (childIdSplt[5]) {\n            node[\"s-sn\"] = childVNode.$name$ = childIdSplt[5];\n          } else {\n            node[\"s-sn\"] = \"\";\n          }\n          node[\"s-sr\"] = true;\n          if (BUILD4.shadowDom && shadowRootNodes) {\n            childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n            if (childVNode.$name$) {\n              childVNode.$elm$.setAttribute(\"name\", childVNode.$name$);\n            }\n            node.parentNode.insertBefore(childVNode.$elm$, node);\n            node.remove();\n            if (childVNode.$depth$ === \"0\") {\n              shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n            }\n          }\n          slotNodes.push(childVNode);\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n        } else if (childNodeType === CONTENT_REF_ID) {\n          if (BUILD4.shadowDom && shadowRootNodes) {\n            node.remove();\n          } else if (BUILD4.slotRelocation) {\n            hostElm[\"s-cr\"] = node;\n            node[\"s-cn\"] = true;\n          }\n        }\n      }\n    }\n  } else if (parentVNode && parentVNode.$tag$ === \"style\") {\n    const vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = \"0\";\n    parentVNode.$children$ = [vnode];\n  }\n};\nvar initializeDocumentHydrate = (node, orgLocNodes) => {\n  if (node.nodeType === 1 /* ElementNode */) {\n    let i2 = 0;\n    for (; i2 < node.childNodes.length; i2++) {\n      initializeDocumentHydrate(node.childNodes[i2], orgLocNodes);\n    }\n    if (node.shadowRoot) {\n      for (i2 = 0; i2 < node.shadowRoot.childNodes.length; i2++) {\n        initializeDocumentHydrate(node.shadowRoot.childNodes[i2], orgLocNodes);\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    const childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[0] === ORG_LOCATION_ID) {\n      orgLocNodes.set(childIdSplt[1] + \".\" + childIdSplt[2], node);\n      node.nodeValue = \"\";\n      node[\"s-en\"] = childIdSplt[3];\n    }\n  }\n};\n\n// src/runtime/initialize-component.ts\nimport { BUILD as BUILD15 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/mode.ts\nvar computeMode = (elm) => modeResolutionChain.map((h2) => h2(elm)).find((m) => !!m);\nvar setMode = (handler) => modeResolutionChain.push(handler);\nvar getMode = (ref) => getHostRef(ref).$modeName$;\n\n// src/runtime/proxy-component.ts\nimport { BUILD as BUILD14 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/set-value.ts\nimport { BUILD as BUILD13 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/parse-property-value.ts\nimport { BUILD as BUILD5 } from \"@stencil/core/internal/app-data\";\nvar parsePropertyValue = (propValue, propType) => {\n  if (propValue != null && !isComplexType(propValue)) {\n    if (BUILD5.propBoolean && propType & 4 /* Boolean */) {\n      return propValue === \"false\" ? false : propValue === \"\" || !!propValue;\n    }\n    if (BUILD5.propNumber && propType & 2 /* Number */) {\n      return parseFloat(propValue);\n    }\n    if (BUILD5.propString && propType & 1 /* String */) {\n      return String(propValue);\n    }\n    return propValue;\n  }\n  return propValue;\n};\n\n// src/runtime/update-component.ts\nimport { BUILD as BUILD12, NAMESPACE } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/event-emitter.ts\nimport { BUILD as BUILD7 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/element.ts\nimport { BUILD as BUILD6 } from \"@stencil/core/internal/app-data\";\nvar getElement = (ref) => BUILD6.lazyLoad ? getHostRef(ref).$hostElement$ : ref;\n\n// src/runtime/event-emitter.ts\nvar createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: (detail) => {\n      if (BUILD7.isDev && !elm.isConnected) {\n        consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n      }\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4 /* Bubbles */),\n        composed: !!(flags & 2 /* Composed */),\n        cancelable: !!(flags & 1 /* Cancellable */),\n        detail\n      });\n    }\n  };\n};\nvar emitEvent = (elm, name, opts) => {\n  const ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\n// src/runtime/styles.ts\nimport { BUILD as BUILD8 } from \"@stencil/core/internal/app-data\";\nvar rootAppliedStyles = /* @__PURE__ */ new WeakMap();\nvar registerStyle = (scopeId2, cssText, allowCS) => {\n  let style = styles.get(scopeId2);\n  if (supportsConstructableStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    if (typeof style === \"string\") {\n      style = cssText;\n    } else {\n      style.replaceSync(cssText);\n    }\n  } else {\n    style = cssText;\n  }\n  styles.set(scopeId2, style);\n};\nvar addStyle = (styleContainerNode, cmpMeta, mode) => {\n  var _a;\n  const scopeId2 = getScopeId(cmpMeta, mode);\n  const style = styles.get(scopeId2);\n  if (!BUILD8.attachStyles) {\n    return scopeId2;\n  }\n  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n  if (style) {\n    if (typeof style === \"string\") {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */ new Set());\n      }\n      if (!appliedStyles.has(scopeId2)) {\n        if (BUILD8.hydrateClientSide && styleContainerNode.host && (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`))) {\n          styleElm.innerHTML = style;\n        } else {\n          styleElm = doc.createElement(\"style\");\n          styleElm.innerHTML = style;\n          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n          if (nonce != null) {\n            styleElm.setAttribute(\"nonce\", nonce);\n          }\n          if (BUILD8.hydrateServerSide || BUILD8.hotModuleReplacement) {\n            styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId2);\n          }\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector(\"link\"));\n        }\n        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n          styleElm.innerHTML += SLOT_FB_CSS;\n        }\n        if (appliedStyles) {\n          appliedStyles.add(scopeId2);\n        }\n      }\n    } else if (BUILD8.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n    }\n  }\n  return scopeId2;\n};\nvar attachStyles = (hostRef) => {\n  const cmpMeta = hostRef.$cmpMeta$;\n  const elm = hostRef.$hostElement$;\n  const flags = cmpMeta.$flags$;\n  const endAttachStyles = createTime(\"attachStyles\", cmpMeta.$tagName$);\n  const scopeId2 = addStyle(\n    BUILD8.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(),\n    cmpMeta,\n    hostRef.$modeName$\n  );\n  if ((BUILD8.shadowDom || BUILD8.scoped) && BUILD8.cssAnnotations && flags & 10 /* needsScopedEncapsulation */) {\n    elm[\"s-sc\"] = scopeId2;\n    elm.classList.add(scopeId2 + \"-h\");\n    if (BUILD8.scoped && flags & 2 /* scopedCssEncapsulation */) {\n      elm.classList.add(scopeId2 + \"-s\");\n    }\n  }\n  endAttachStyles();\n};\nvar getScopeId = (cmp, mode) => \"sc-\" + (BUILD8.mode && mode && cmp.$flags$ & 32 /* hasMode */ ? cmp.$tagName$ + \"-\" + mode : cmp.$tagName$);\nvar convertScopedToShadow = (css) => css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, \"$1{\");\n\n// src/runtime/vdom/vdom-render.ts\nimport { BUILD as BUILD11 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/update-element.ts\nimport { BUILD as BUILD10 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/set-accessor.ts\nimport { BUILD as BUILD9 } from \"@stencil/core/internal/app-data\";\nvar setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n    if (BUILD9.vdomClass && memberName === \"class\") {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      const newClasses = parseClassList(newValue);\n      classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n      classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n    } else if (BUILD9.vdomStyle && memberName === \"style\") {\n      if (BUILD9.updatable) {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (!BUILD9.hydrateServerSide && prop.includes(\"-\")) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = \"\";\n            }\n          }\n        }\n      }\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (!BUILD9.hydrateServerSide && prop.includes(\"-\")) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (BUILD9.vdomKey && memberName === \"key\") {\n    } else if (BUILD9.vdomRef && memberName === \"ref\") {\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (BUILD9.vdomListener && (BUILD9.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) && memberName[0] === \"o\" && memberName[1] === \"n\") {\n      if (memberName[2] === \"-\") {\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        memberName = ln.slice(2);\n      } else {\n        memberName = ln[2] + memberName.slice(3);\n      }\n      if (oldValue || newValue) {\n        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n        memberName = memberName.replace(CAPTURE_EVENT_REGEX, \"\");\n        if (oldValue) {\n          plt.rel(elm, memberName, oldValue, capture);\n        }\n        if (newValue) {\n          plt.ael(elm, memberName, newValue, capture);\n        }\n      }\n    } else if (BUILD9.vdomPropOrAttr) {\n      const isComplex = isComplexType(newValue);\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes(\"-\")) {\n            const n = newValue == null ? \"\" : newValue;\n            if (memberName === \"list\") {\n              isProp = false;\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {\n        }\n      }\n      let xlink = false;\n      if (BUILD9.vdomXlink) {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, \"\"))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === \"\") {\n          if (BUILD9.vdomXlink && xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n        newValue = newValue === true ? \"\" : newValue;\n        if (BUILD9.vdomXlink && xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = (value) => !value ? [] : value.split(parseClassListRegex);\nvar CAPTURE_EVENT_SUFFIX = \"Capture\";\nvar CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + \"$\");\n\n// src/runtime/vdom/update-element.ts\nvar updateElement = (oldVnode, newVnode, isSvgMode2) => {\n  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  if (BUILD10.updatable) {\n    for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], void 0, isSvgMode2, newVnode.$flags$);\n      }\n    }\n  }\n  for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode2, newVnode.$flags$);\n  }\n};\nfunction sortedAttrNames(attrNames) {\n  return attrNames.includes(\"ref\") ? (\n    // we need to sort these to ensure that `'ref'` is the last attr\n    [...attrNames.filter((attr) => attr !== \"ref\"), \"ref\"]\n  ) : (\n    // no need to sort, return the original array\n    attrNames\n  );\n}\n\n// src/runtime/vdom/vdom-render.ts\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n  var _a, _b, _c, _d;\n  const newVNode2 = newParentVNode.$children$[childIndex];\n  let i2 = 0;\n  let elm;\n  let childNode;\n  let oldVNode;\n  if (BUILD11.slotRelocation && !useNativeShadowDom) {\n    checkSlotRelocate = true;\n    if (newVNode2.$tag$ === \"slot\") {\n      if (scopeId) {\n        parentElm.classList.add(scopeId + \"-s\");\n      }\n      newVNode2.$flags$ |= newVNode2.$children$ ? (\n        // slot element has fallback content\n        // still create an element that \"mocks\" the slot element\n        2 /* isSlotFallback */\n      ) : (\n        // slot element does not have fallback content\n        // create an html comment we'll use to always reference\n        // where actual slot content should sit next to\n        1 /* isSlotReference */\n      );\n    }\n  }\n  if (BUILD11.isDev && newVNode2.$elm$) {\n    consoleDevError(\n      `The JSX ${newVNode2.$text$ !== null ? `\"${newVNode2.$text$}\" text` : `\"${newVNode2.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`\n    );\n  }\n  if (BUILD11.vdomText && newVNode2.$text$ !== null) {\n    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);\n  } else if (BUILD11.slotRelocation && newVNode2.$flags$ & 1 /* isSlotReference */) {\n    elm = newVNode2.$elm$ = BUILD11.isDebug || BUILD11.hydrateServerSide ? slotReferenceDebugNode(newVNode2) : doc.createTextNode(\"\");\n  } else {\n    if (BUILD11.svg && !isSvgMode) {\n      isSvgMode = newVNode2.$tag$ === \"svg\";\n    }\n    elm = newVNode2.$elm$ = BUILD11.svg ? doc.createElementNS(\n      isSvgMode ? SVG_NS : HTML_NS,\n      BUILD11.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    ) : doc.createElement(\n      BUILD11.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    );\n    if (BUILD11.svg && isSvgMode && newVNode2.$tag$ === \"foreignObject\") {\n      isSvgMode = false;\n    }\n    if (BUILD11.vdomAttribute) {\n      updateElement(null, newVNode2, isSvgMode);\n    }\n    if ((BUILD11.shadowDom || BUILD11.scoped) && isDef(scopeId) && elm[\"s-si\"] !== scopeId) {\n      elm.classList.add(elm[\"s-si\"] = scopeId);\n    }\n    if (BUILD11.scoped) {\n      const rootScopeId = ((_a = newParentVNode.$elm$) == null ? void 0 : _a[\"s-rsc\"]) || ((_b = newParentVNode.$elm$) == null ? void 0 : _b[\"s-si\"]) || ((_c = newParentVNode.$elm$) == null ? void 0 : _c[\"s-sc\"]);\n      if (rootScopeId) {\n        elm[\"s-rsc\"] = rootScopeId;\n        !elm.classList.contains(rootScopeId) && elm.classList.add(rootScopeId);\n      }\n    }\n    if (newVNode2.$children$) {\n      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {\n        childNode = createElm(oldParentVNode, newVNode2, i2, elm);\n        if (childNode) {\n          elm.appendChild(childNode);\n        }\n      }\n    }\n    if (BUILD11.svg) {\n      if (newVNode2.$tag$ === \"svg\") {\n        isSvgMode = false;\n      } else if (elm.tagName === \"foreignObject\") {\n        isSvgMode = true;\n      }\n    }\n  }\n  elm[\"s-hn\"] = hostTagName;\n  if (BUILD11.slotRelocation) {\n    if (newVNode2.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n      elm[\"s-sr\"] = true;\n      elm[\"s-cr\"] = contentRef;\n      elm[\"s-sn\"] = newVNode2.$name$ || \"\";\n      elm[\"s-rf\"] = (_d = newVNode2.$attrs$) == null ? void 0 : _d.ref;\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n      if (oldVNode && oldVNode.$tag$ === newVNode2.$tag$ && oldParentVNode.$elm$) {\n        if (BUILD11.experimentalSlotFixes) {\n          relocateToHostRoot(oldParentVNode.$elm$);\n        } else {\n          putBackInOriginalLocation(oldParentVNode.$elm$, false);\n        }\n      }\n    }\n  }\n  return elm;\n};\nvar relocateToHostRoot = (parentElm) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const host = parentElm.closest(hostTagName.toLowerCase());\n  if (host != null) {\n    const contentRefNode = Array.from(host.childNodes).find((ref) => ref[\"s-cr\"]);\n    const childNodeArray = Array.from(parentElm.childNodes);\n    for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n      if (childNode[\"s-sh\"] != null) {\n        host.insertBefore(childNode, contentRefNode != null ? contentRefNode : null);\n        childNode[\"s-sh\"] = void 0;\n        checkSlotRelocate = true;\n      }\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar putBackInOriginalLocation = (parentElm, recursive) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const oldSlotChildNodes = Array.from(parentElm.childNodes);\n  if (parentElm[\"s-sr\"] && BUILD11.experimentalSlotFixes) {\n    let node = parentElm;\n    while (node = node.nextSibling) {\n      if (node && node[\"s-sn\"] === parentElm[\"s-sn\"] && node[\"s-sh\"] === hostTagName) {\n        oldSlotChildNodes.push(node);\n      }\n    }\n  }\n  for (let i2 = oldSlotChildNodes.length - 1; i2 >= 0; i2--) {\n    const childNode = oldSlotChildNodes[i2];\n    if (childNode[\"s-hn\"] !== hostTagName && childNode[\"s-ol\"]) {\n      parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n      childNode[\"s-ol\"].remove();\n      childNode[\"s-ol\"] = void 0;\n      childNode[\"s-sh\"] = void 0;\n      checkSlotRelocate = true;\n    }\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = BUILD11.slotRelocation && parentElm[\"s-cr\"] && parentElm[\"s-cr\"].parentNode || parentElm;\n  let childNode;\n  if (BUILD11.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        containerElm.insertBefore(childNode, BUILD11.slotRelocation ? referenceNode(before) : before);\n      }\n    }\n  }\n};\nvar removeVnodes = (vnodes, startIdx, endIdx) => {\n  for (let index = startIdx; index <= endIdx; ++index) {\n    const vnode = vnodes[index];\n    if (vnode) {\n      const elm = vnode.$elm$;\n      nullifyVNodeRefs(vnode);\n      if (elm) {\n        if (BUILD11.slotRelocation) {\n          checkSlotFallbackVisibility = true;\n          if (elm[\"s-ol\"]) {\n            elm[\"s-ol\"].remove();\n          } else {\n            putBackInOriginalLocation(elm, true);\n          }\n        }\n        elm.remove();\n      }\n    }\n  }\n};\nvar updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let idxInOld = 0;\n  let i2 = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n  let elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n      patch(oldStartVnode, newStartVnode, isInitialRender);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n      patch(oldEndVnode, newEndVnode, isInitialRender);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n      if (BUILD11.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n      patch(oldStartVnode, newEndVnode, isInitialRender);\n      parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n      if (BUILD11.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n      patch(oldEndVnode, newStartVnode, isInitialRender);\n      parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      idxInOld = -1;\n      if (BUILD11.vdomKey) {\n        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {\n          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {\n            idxInOld = i2;\n            break;\n          }\n        }\n      }\n      if (BUILD11.vdomKey && idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode, isInitialRender);\n          oldCh[idxInOld] = void 0;\n          node = elmToMove.$elm$;\n        }\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n      if (node) {\n        if (BUILD11.slotRelocation) {\n          parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n        } else {\n          oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(\n      parentElm,\n      newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,\n      newVNode2,\n      newCh,\n      newStartIdx,\n      newEndIdx\n    );\n  } else if (BUILD11.updatable && newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\nvar isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n  if (leftVNode.$tag$ === rightVNode.$tag$) {\n    if (BUILD11.slotRelocation && leftVNode.$tag$ === \"slot\") {\n      return leftVNode.$name$ === rightVNode.$name$;\n    }\n    if (BUILD11.vdomKey && !isInitialRender) {\n      return leftVNode.$key$ === rightVNode.$key$;\n    }\n    return true;\n  }\n  return false;\n};\nvar referenceNode = (node) => {\n  return node && node[\"s-ol\"] || node;\n};\nvar parentReferenceNode = (node) => (node[\"s-ol\"] ? node[\"s-ol\"] : node).parentNode;\nvar patch = (oldVNode, newVNode2, isInitialRender = false) => {\n  const elm = newVNode2.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode2.$children$;\n  const tag = newVNode2.$tag$;\n  const text = newVNode2.$text$;\n  let defaultHolder;\n  if (!BUILD11.vdomText || text === null) {\n    if (BUILD11.svg) {\n      isSvgMode = tag === \"svg\" ? true : tag === \"foreignObject\" ? false : isSvgMode;\n    }\n    if (BUILD11.vdomAttribute || BUILD11.reflect) {\n      if (BUILD11.slot && tag === \"slot\" && !useNativeShadowDom) {\n        if (BUILD11.experimentalSlotFixes && oldVNode.$name$ !== newVNode2.$name$) {\n          newVNode2.$elm$[\"s-sn\"] = newVNode2.$name$ || \"\";\n          relocateToHostRoot(newVNode2.$elm$.parentElement);\n        }\n      } else {\n        updateElement(oldVNode, newVNode2, isSvgMode);\n      }\n    }\n    if (BUILD11.updatable && oldChildren !== null && newChildren !== null) {\n      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);\n    } else if (newChildren !== null) {\n      if (BUILD11.updatable && BUILD11.vdomText && oldVNode.$text$ !== null) {\n        elm.textContent = \"\";\n      }\n      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);\n    } else if (BUILD11.updatable && oldChildren !== null) {\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n    if (BUILD11.svg && isSvgMode && tag === \"svg\") {\n      isSvgMode = false;\n    }\n  } else if (BUILD11.vdomText && BUILD11.slotRelocation && (defaultHolder = elm[\"s-cr\"])) {\n    defaultHolder.parentNode.textContent = text;\n  } else if (BUILD11.vdomText && oldVNode.$text$ !== text) {\n    elm.data = text;\n  }\n};\nvar updateFallbackSlotVisibility = (elm) => {\n  const childNodes = elm.childNodes;\n  for (const childNode of childNodes) {\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      if (childNode[\"s-sr\"]) {\n        const slotName = childNode[\"s-sn\"];\n        childNode.hidden = false;\n        for (const siblingNode of childNodes) {\n          if (siblingNode !== childNode) {\n            if (siblingNode[\"s-hn\"] !== childNode[\"s-hn\"] || slotName !== \"\") {\n              if (siblingNode.nodeType === 1 /* ElementNode */ && (slotName === siblingNode.getAttribute(\"slot\") || slotName === siblingNode[\"s-sn\"]) || siblingNode.nodeType === 3 /* TextNode */ && slotName === siblingNode[\"s-sn\"]) {\n                childNode.hidden = true;\n                break;\n              }\n            } else {\n              if (siblingNode.nodeType === 1 /* ElementNode */ || siblingNode.nodeType === 3 /* TextNode */ && siblingNode.textContent.trim() !== \"\") {\n                childNode.hidden = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n      updateFallbackSlotVisibility(childNode);\n    }\n  }\n};\nvar relocateNodes = [];\nvar markSlotContentForRelocation = (elm) => {\n  let node;\n  let hostContentNodes;\n  let j;\n  for (const childNode of elm.childNodes) {\n    if (childNode[\"s-sr\"] && (node = childNode[\"s-cr\"]) && node.parentNode) {\n      hostContentNodes = node.parentNode.childNodes;\n      const slotName = childNode[\"s-sn\"];\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n        if (!node[\"s-cn\"] && !node[\"s-nr\"] && node[\"s-hn\"] !== childNode[\"s-hn\"] && (!BUILD11.experimentalSlotFixes || !node[\"s-sh\"] || node[\"s-sh\"] !== childNode[\"s-hn\"])) {\n          if (isNodeLocatedInSlot(node, slotName)) {\n            let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n            checkSlotFallbackVisibility = true;\n            node[\"s-sn\"] = node[\"s-sn\"] || slotName;\n            if (relocateNodeData) {\n              relocateNodeData.$nodeToRelocate$[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              node[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n            if (node[\"s-sr\"]) {\n              relocateNodes.map((relocateNode) => {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node[\"s-sn\"])) {\n                  relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      markSlotContentForRelocation(childNode);\n    }\n  }\n};\nvar isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n  if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n    if (nodeToRelocate.getAttribute(\"slot\") === null && slotName === \"\") {\n      return true;\n    }\n    if (nodeToRelocate.getAttribute(\"slot\") === slotName) {\n      return true;\n    }\n    return false;\n  }\n  if (nodeToRelocate[\"s-sn\"] === slotName) {\n    return true;\n  }\n  return slotName === \"\";\n};\nvar nullifyVNodeRefs = (vNode) => {\n  if (BUILD11.vdomRef) {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n  }\n};\nvar renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n  var _a, _b, _c, _d, _e;\n  const hostElm = hostRef.$hostElement$;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  if (BUILD11.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n    throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n  }\n  if (BUILD11.reflect && cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(\n      ([propName, attribute]) => rootVnode.$attrs$[attribute] = hostElm[propName]\n    );\n  }\n  if (isInitialLoad && rootVnode.$attrs$) {\n    for (const key of Object.keys(rootVnode.$attrs$)) {\n      if (hostElm.hasAttribute(key) && ![\"key\", \"ref\", \"style\", \"class\"].includes(key)) {\n        rootVnode.$attrs$[key] = hostElm[key];\n      }\n    }\n  }\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4 /* isHost */;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = BUILD11.shadowDom ? hostElm.shadowRoot || hostElm : hostElm;\n  if (BUILD11.scoped || BUILD11.shadowDom) {\n    scopeId = hostElm[\"s-sc\"];\n  }\n  useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n  if (BUILD11.slotRelocation) {\n    contentRef = hostElm[\"s-cr\"];\n    checkSlotFallbackVisibility = false;\n  }\n  patch(oldVNode, rootVnode, isInitialLoad);\n  if (BUILD11.slotRelocation) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    if (checkSlotRelocate) {\n      markSlotContentForRelocation(rootVnode.$elm$);\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        if (!nodeToRelocate[\"s-ol\"]) {\n          const orgLocationNode = BUILD11.isDebug || BUILD11.hydrateServerSide ? originalLocationDebugNode(nodeToRelocate) : doc.createTextNode(\"\");\n          orgLocationNode[\"s-nr\"] = nodeToRelocate;\n          nodeToRelocate.parentNode.insertBefore(nodeToRelocate[\"s-ol\"] = orgLocationNode, nodeToRelocate);\n        }\n      }\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        const slotRefNode = relocateData.$slotRefNode$;\n        if (slotRefNode) {\n          const parentNodeRef = slotRefNode.parentNode;\n          let insertBeforeNode = slotRefNode.nextSibling;\n          if (!BUILD11.experimentalSlotFixes || insertBeforeNode && insertBeforeNode.nodeType === 1 /* ElementNode */) {\n            let orgLocationNode = (_a = nodeToRelocate[\"s-ol\"]) == null ? void 0 : _a.previousSibling;\n            while (orgLocationNode) {\n              let refNode = (_b = orgLocationNode[\"s-nr\"]) != null ? _b : null;\n              if (refNode && refNode[\"s-sn\"] === nodeToRelocate[\"s-sn\"] && parentNodeRef === refNode.parentNode) {\n                refNode = refNode.nextSibling;\n                while (refNode === nodeToRelocate || (refNode == null ? void 0 : refNode[\"s-sr\"])) {\n                  refNode = refNode == null ? void 0 : refNode.nextSibling;\n                }\n                if (!refNode || !refNode[\"s-nr\"]) {\n                  insertBeforeNode = refNode;\n                  break;\n                }\n              }\n              orgLocationNode = orgLocationNode.previousSibling;\n            }\n          }\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!BUILD11.experimentalSlotFixes && !nodeToRelocate[\"s-hn\"] && nodeToRelocate[\"s-ol\"]) {\n                nodeToRelocate[\"s-hn\"] = nodeToRelocate[\"s-ol\"].parentNode.nodeName;\n              }\n              parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n              if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                nodeToRelocate.hidden = (_c = nodeToRelocate[\"s-ih\"]) != null ? _c : false;\n              }\n            }\n          }\n          nodeToRelocate && typeof slotRefNode[\"s-rf\"] === \"function\" && slotRefNode[\"s-rf\"](nodeToRelocate);\n        } else {\n          if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n            if (isInitialLoad) {\n              nodeToRelocate[\"s-ih\"] = (_d = nodeToRelocate.hidden) != null ? _d : false;\n            }\n            nodeToRelocate.hidden = true;\n          }\n        }\n      }\n    }\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n    relocateNodes.length = 0;\n  }\n  if (BUILD11.experimentalScopedSlotChanges && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n    for (const childNode of rootVnode.$elm$.childNodes) {\n      if (childNode[\"s-hn\"] !== hostTagName && !childNode[\"s-sh\"]) {\n        if (isInitialLoad && childNode[\"s-ih\"] == null) {\n          childNode[\"s-ih\"] = (_e = childNode.hidden) != null ? _e : false;\n        }\n        childNode.hidden = true;\n      }\n    }\n  }\n  contentRef = void 0;\n};\nvar slotReferenceDebugNode = (slotVNode) => doc.createComment(\n  `<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : \"\"}> (host=${hostTagName.toLowerCase()})`\n);\nvar originalLocationDebugNode = (nodeToRelocate) => doc.createComment(\n  `org-location for ` + (nodeToRelocate.localName ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate[\"s-hn\"]})` : `[${nodeToRelocate.textContent}]`)\n);\n\n// src/runtime/update-component.ts\nvar attachToAncestor = (hostRef, ancestorComponent) => {\n  if (BUILD12.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent[\"s-p\"]) {\n    ancestorComponent[\"s-p\"].push(new Promise((r) => hostRef.$onRenderResolve$ = r));\n  }\n};\nvar scheduleUpdate = (hostRef, isInitialLoad) => {\n  if (BUILD12.taskQueue && BUILD12.updatable) {\n    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n  }\n  if (BUILD12.asyncLoading && hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n    hostRef.$flags$ |= 512 /* needsRerender */;\n    return;\n  }\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n  return BUILD12.taskQueue ? writeTask(dispatch) : dispatch();\n};\nvar dispatchHooks = (hostRef, isInitialLoad) => {\n  const elm = hostRef.$hostElement$;\n  const endSchedule = createTime(\"scheduleUpdate\", hostRef.$cmpMeta$.$tagName$);\n  const instance = BUILD12.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  let maybePromise;\n  if (isInitialLoad) {\n    if (BUILD12.lazyLoad && BUILD12.hostListener) {\n      hostRef.$flags$ |= 256 /* isListenReady */;\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n        hostRef.$queuedListeners$ = void 0;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentWillLoad\");\n    if (BUILD12.cmpWillLoad) {\n      maybePromise = safeCall(instance, \"componentWillLoad\");\n    }\n  } else {\n    emitLifecycleEvent(elm, \"componentWillUpdate\");\n    if (BUILD12.cmpWillUpdate) {\n      maybePromise = safeCall(instance, \"componentWillUpdate\");\n    }\n  }\n  emitLifecycleEvent(elm, \"componentWillRender\");\n  if (BUILD12.cmpWillRender) {\n    maybePromise = enqueue(maybePromise, () => safeCall(instance, \"componentWillRender\"));\n  }\n  endSchedule();\n  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nvar enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn) : fn();\nvar isPromisey = (maybePromise) => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === \"function\";\nvar updateComponent = async (hostRef, instance, isInitialLoad) => {\n  var _a;\n  const elm = hostRef.$hostElement$;\n  const endUpdate = createTime(\"update\", hostRef.$cmpMeta$.$tagName$);\n  const rc = elm[\"s-rc\"];\n  if (BUILD12.style && isInitialLoad) {\n    attachStyles(hostRef);\n  }\n  const endRender = createTime(\"render\", hostRef.$cmpMeta$.$tagName$);\n  if (BUILD12.isDev) {\n    hostRef.$flags$ |= 1024 /* devOnRender */;\n  }\n  if (BUILD12.hydrateServerSide) {\n    await callRender(hostRef, instance, elm, isInitialLoad);\n  } else {\n    callRender(hostRef, instance, elm, isInitialLoad);\n  }\n  if (BUILD12.isDev) {\n    hostRef.$renderCount$ = hostRef.$renderCount$ === void 0 ? 1 : hostRef.$renderCount$ + 1;\n    hostRef.$flags$ &= ~1024 /* devOnRender */;\n  }\n  if (BUILD12.hydrateServerSide) {\n    try {\n      serverSideConnected(elm);\n      if (isInitialLoad) {\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          elm[\"s-en\"] = \"\";\n        } else if (hostRef.$cmpMeta$.$flags$ & 2 /* scopedCssEncapsulation */) {\n          elm[\"s-en\"] = \"c\";\n        }\n      }\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  if (BUILD12.asyncLoading && rc) {\n    rc.map((cb) => cb());\n    elm[\"s-rc\"] = void 0;\n  }\n  endRender();\n  endUpdate();\n  if (BUILD12.asyncLoading) {\n    const childrenPromises = (_a = elm[\"s-p\"]) != null ? _a : [];\n    const postUpdate = () => postUpdateComponent(hostRef);\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n      childrenPromises.length = 0;\n    }\n  } else {\n    postUpdateComponent(hostRef);\n  }\n};\nvar renderingRef = null;\nvar callRender = (hostRef, instance, elm, isInitialLoad) => {\n  const allRenderFn = BUILD12.allRenderFn ? true : false;\n  const lazyLoad = BUILD12.lazyLoad ? true : false;\n  const taskQueue = BUILD12.taskQueue ? true : false;\n  const updatable = BUILD12.updatable ? true : false;\n  try {\n    renderingRef = instance;\n    instance = allRenderFn ? instance.render() : instance.render && instance.render();\n    if (updatable && taskQueue) {\n      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    if (updatable || lazyLoad) {\n      hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if (BUILD12.hasRenderFn || BUILD12.reflect) {\n      if (BUILD12.vdomRender || BUILD12.reflect) {\n        if (BUILD12.hydrateServerSide) {\n          return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n        } else {\n          renderVdom(hostRef, instance, isInitialLoad);\n        }\n      } else {\n        const shadowRoot = elm.shadowRoot;\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          shadowRoot.textContent = instance;\n        } else {\n          elm.textContent = instance;\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n  renderingRef = null;\n  return null;\n};\nvar getRenderingRef = () => renderingRef;\nvar postUpdateComponent = (hostRef) => {\n  const tagName = hostRef.$cmpMeta$.$tagName$;\n  const elm = hostRef.$hostElement$;\n  const endPostUpdate = createTime(\"postUpdate\", tagName);\n  const instance = BUILD12.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  if (BUILD12.cmpDidRender) {\n    if (BUILD12.isDev) {\n      hostRef.$flags$ |= 1024 /* devOnRender */;\n    }\n    safeCall(instance, \"componentDidRender\");\n    if (BUILD12.isDev) {\n      hostRef.$flags$ &= ~1024 /* devOnRender */;\n    }\n  }\n  emitLifecycleEvent(elm, \"componentDidRender\");\n  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n    hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n    if (BUILD12.asyncLoading && BUILD12.cssAnnotations) {\n      addHydratedFlag(elm);\n    }\n    if (BUILD12.cmpDidLoad) {\n      if (BUILD12.isDev) {\n        hostRef.$flags$ |= 2048 /* devOnDidLoad */;\n      }\n      safeCall(instance, \"componentDidLoad\");\n      if (BUILD12.isDev) {\n        hostRef.$flags$ &= ~2048 /* devOnDidLoad */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidLoad\");\n    endPostUpdate();\n    if (BUILD12.asyncLoading) {\n      hostRef.$onReadyResolve$(elm);\n      if (!ancestorComponent) {\n        appDidLoad(tagName);\n      }\n    }\n  } else {\n    if (BUILD12.cmpDidUpdate) {\n      if (BUILD12.isDev) {\n        hostRef.$flags$ |= 1024 /* devOnRender */;\n      }\n      safeCall(instance, \"componentDidUpdate\");\n      if (BUILD12.isDev) {\n        hostRef.$flags$ &= ~1024 /* devOnRender */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidUpdate\");\n    endPostUpdate();\n  }\n  if (BUILD12.method && BUILD12.lazyLoad) {\n    hostRef.$onInstanceResolve$(elm);\n  }\n  if (BUILD12.asyncLoading) {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = void 0;\n    }\n    if (hostRef.$flags$ & 512 /* needsRerender */) {\n      nextTick(() => scheduleUpdate(hostRef, false));\n    }\n    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n  }\n};\nvar forceUpdate = (ref) => {\n  if (BUILD12.updatable && (Build.isBrowser || Build.isTesting)) {\n    const hostRef = getHostRef(ref);\n    const isConnected = hostRef.$hostElement$.isConnected;\n    if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n      scheduleUpdate(hostRef, false);\n    }\n    return isConnected;\n  }\n  return false;\n};\nvar appDidLoad = (who) => {\n  if (BUILD12.cssAnnotations) {\n    addHydratedFlag(doc.documentElement);\n  }\n  if (BUILD12.asyncQueue) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  nextTick(() => emitEvent(win, \"appload\", { detail: { namespace: NAMESPACE } }));\n  if (BUILD12.profile && performance.measure) {\n    performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, \"st:app:start\");\n  }\n};\nvar safeCall = (instance, method, arg) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  return void 0;\n};\nvar emitLifecycleEvent = (elm, lifecycleName) => {\n  if (BUILD12.lifecycleDOMEvents) {\n    emitEvent(elm, \"stencil_\" + lifecycleName, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  }\n};\nvar addHydratedFlag = (elm) => BUILD12.hydratedClass ? elm.classList.add(\"hydrated\") : BUILD12.hydratedAttribute ? elm.setAttribute(\"hydrated\", \"\") : void 0;\nvar serverSideConnected = (elm) => {\n  const children = elm.children;\n  if (children != null) {\n    for (let i2 = 0, ii = children.length; i2 < ii; i2++) {\n      const childElm = children[i2];\n      if (typeof childElm.connectedCallback === \"function\") {\n        childElm.connectedCallback();\n      }\n      serverSideConnected(childElm);\n    }\n  }\n};\n\n// src/runtime/set-value.ts\nvar getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nvar setValue = (ref, propName, newVal, cmpMeta) => {\n  const hostRef = getHostRef(ref);\n  const elm = BUILD13.lazyLoad ? hostRef.$hostElement$ : ref;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = BUILD13.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n  const didValueChange = newVal !== oldVal && !areBothNaN;\n  if ((!BUILD13.lazyLoad || !(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {\n    hostRef.$instanceValues$.set(propName, newVal);\n    if (BUILD13.isDev) {\n      if (hostRef.$flags$ & 1024 /* devOnRender */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      } else if (hostRef.$flags$ & 2048 /* devOnDidLoad */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      }\n    }\n    if (!BUILD13.lazyLoad || instance) {\n      if (BUILD13.watchCallback && cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n        const watchMethods = cmpMeta.$watchers$[propName];\n        if (watchMethods) {\n          watchMethods.map((watchMethodName) => {\n            try {\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n      if (BUILD13.updatable && (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n        if (BUILD13.cmpShouldUpdate && instance.componentShouldUpdate) {\n          if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n            return;\n          }\n        }\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\n// src/runtime/proxy-component.ts\nvar proxyComponent = (Cstr, cmpMeta, flags) => {\n  var _a;\n  const prototype = Cstr.prototype;\n  if (BUILD14.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */ && flags & 1 /* isElementConstructor */) {\n    FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach(\n      (cbName) => Object.defineProperty(prototype, cbName, {\n        value(...args) {\n          const hostRef = getHostRef(this);\n          const elm = BUILD14.lazyLoad ? hostRef.$hostElement$ : this;\n          const instance = BUILD14.lazyLoad ? hostRef.$lazyInstance$ : elm;\n          if (!instance) {\n            hostRef.$onReadyPromise$.then((instance2) => {\n              const cb = instance2[cbName];\n              typeof cb === \"function\" && cb.call(instance2, ...args);\n            });\n          } else {\n            const cb = instance[cbName];\n            typeof cb === \"function\" && cb.call(instance, ...args);\n          }\n        }\n      })\n    );\n  }\n  if (BUILD14.member && cmpMeta.$members$) {\n    if (BUILD14.watchCallback && Cstr.watchers) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    }\n    const members = Object.entries(cmpMeta.$members$);\n    members.map(([memberName, [memberFlags]]) => {\n      if ((BUILD14.prop || BUILD14.state) && (memberFlags & 31 /* Prop */ || (!BUILD14.lazyLoad || flags & 2 /* proxyState */) && memberFlags & 32 /* State */)) {\n        Object.defineProperty(prototype, memberName, {\n          get() {\n            return getValue(this, memberName);\n          },\n          set(newValue) {\n            if (BUILD14.isDev) {\n              const ref = getHostRef(this);\n              if (\n                // we are proxying the instance (not element)\n                (flags & 1 /* isElementConstructor */) === 0 && // the element is not constructing\n                (ref && ref.$flags$ & 8 /* isConstructingInstance */) === 0 && // the member is a prop\n                (memberFlags & 31 /* Prop */) !== 0 && // the member is not mutable\n                (memberFlags & 1024 /* Mutable */) === 0\n              ) {\n                consoleDevWarn(\n                  `@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`\n                );\n              }\n            }\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      } else if (BUILD14.lazyLoad && BUILD14.method && flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n        Object.defineProperty(prototype, memberName, {\n          value(...args) {\n            var _a2;\n            const ref = getHostRef(this);\n            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {\n              var _a3;\n              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);\n            });\n          }\n        });\n      }\n    });\n    if (BUILD14.observeAttribute && (!BUILD14.lazyLoad || flags & 1 /* isElementConstructor */)) {\n      const attrNameToPropName = /* @__PURE__ */ new Map();\n      prototype.attributeChangedCallback = function(attrName, oldValue, newValue) {\n        plt.jmp(() => {\n          var _a2;\n          const propName = attrNameToPropName.get(attrName);\n          if (this.hasOwnProperty(propName)) {\n            newValue = this[propName];\n            delete this[propName];\n          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === \"number\" && this[propName] == newValue) {\n            return;\n          } else if (propName == null) {\n            const hostRef = getHostRef(this);\n            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;\n            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {\n              const elm = BUILD14.lazyLoad ? hostRef.$hostElement$ : this;\n              const instance = BUILD14.lazyLoad ? hostRef.$lazyInstance$ : elm;\n              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];\n              entry == null ? void 0 : entry.forEach((callbackName) => {\n                if (instance[callbackName] != null) {\n                  instance[callbackName].call(instance, newValue, oldValue, attrName);\n                }\n              });\n            }\n            return;\n          }\n          this[propName] = newValue === null && typeof this[propName] === \"boolean\" ? false : newValue;\n        });\n      };\n      Cstr.observedAttributes = Array.from(\n        /* @__PURE__ */ new Set([\n          ...Object.keys((_a = cmpMeta.$watchers$) != null ? _a : {}),\n          ...members.filter(([_, m]) => m[0] & 15 /* HasAttribute */).map(([propName, m]) => {\n            var _a2;\n            const attrName = m[1] || propName;\n            attrNameToPropName.set(attrName, propName);\n            if (BUILD14.reflect && m[0] & 512 /* ReflectAttr */) {\n              (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);\n            }\n            return attrName;\n          })\n        ])\n      );\n    }\n  }\n  return Cstr;\n};\n\n// src/runtime/initialize-component.ts\nvar initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n  let Cstr;\n  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n    hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if ((BUILD15.lazyLoad || BUILD15.hydrateClientSide) && bundleId) {\n      Cstr = loadModule(cmpMeta, hostRef, hmrVersionId);\n      if (Cstr.then) {\n        const endLoad = uniqueTime(\n          `st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`,\n          `[Stencil] Load module for <${cmpMeta.$tagName$}>`\n        );\n        Cstr = await Cstr;\n        endLoad();\n      }\n      if ((BUILD15.isDev || BUILD15.isDebug) && !Cstr) {\n        throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n      }\n      if (BUILD15.member && !Cstr.isProxied) {\n        if (BUILD15.watchCallback) {\n          cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n        Cstr.isProxied = true;\n      }\n      const endNewInstance = createTime(\"createInstance\", cmpMeta.$tagName$);\n      if (BUILD15.member) {\n        hostRef.$flags$ |= 8 /* isConstructingInstance */;\n      }\n      try {\n        new Cstr(hostRef);\n      } catch (e) {\n        consoleError(e);\n      }\n      if (BUILD15.member) {\n        hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n      }\n      if (BUILD15.watchCallback) {\n        hostRef.$flags$ |= 128 /* isWatchReady */;\n      }\n      endNewInstance();\n      fireConnectedCallback(hostRef.$lazyInstance$);\n    } else {\n      Cstr = elm.constructor;\n      customElements.whenDefined(cmpMeta.$tagName$).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);\n    }\n    if (BUILD15.style && Cstr.style) {\n      let style = Cstr.style;\n      if (BUILD15.mode && typeof style !== \"string\") {\n        style = style[hostRef.$modeName$ = computeMode(elm)];\n        if (BUILD15.hydrateServerSide && hostRef.$modeName$) {\n          elm.setAttribute(\"s-mode\", hostRef.$modeName$);\n        }\n      }\n      const scopeId2 = getScopeId(cmpMeta, hostRef.$modeName$);\n      if (!styles.has(scopeId2)) {\n        const endRegisterStyles = createTime(\"registerStyles\", cmpMeta.$tagName$);\n        if (!BUILD15.hydrateServerSide && BUILD15.shadowDom && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        BUILD15.shadowDomShim && cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n          style = await import(\"./shadow-css.js\").then((m) => m.scopeCss(style, scopeId2, false));\n        }\n        registerStyle(scopeId2, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n        endRegisterStyles();\n      }\n    }\n  }\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const schedule = () => scheduleUpdate(hostRef, true);\n  if (BUILD15.asyncLoading && ancestorComponent && ancestorComponent[\"s-rc\"]) {\n    ancestorComponent[\"s-rc\"].push(schedule);\n  } else {\n    schedule();\n  }\n};\nvar fireConnectedCallback = (instance) => {\n  if (BUILD15.lazyLoad && BUILD15.connectedCallback) {\n    safeCall(instance, \"connectedCallback\");\n  }\n};\n\n// src/runtime/connected-callback.ts\nvar connectedCallback = (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    const cmpMeta = hostRef.$cmpMeta$;\n    const endConnected = createTime(\"connectedCallback\", cmpMeta.$tagName$);\n    if (BUILD16.hostListenerTargetParent) {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n    }\n    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n      hostRef.$flags$ |= 1 /* hasConnected */;\n      let hostId;\n      if (BUILD16.hydrateClientSide) {\n        hostId = elm.getAttribute(HYDRATE_ID);\n        if (hostId) {\n          if (BUILD16.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            const scopeId2 = BUILD16.mode ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute(\"s-mode\")) : addStyle(elm.shadowRoot, cmpMeta);\n            elm.classList.remove(scopeId2 + \"-h\", scopeId2 + \"-s\");\n          }\n          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n        }\n      }\n      if (BUILD16.slotRelocation && !hostId) {\n        if (BUILD16.hydrateServerSide || (BUILD16.slot || BUILD16.shadowDom) && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */)) {\n          setContentReference(elm);\n        }\n      }\n      if (BUILD16.asyncLoading) {\n        let ancestorComponent = elm;\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          if (BUILD16.hydrateClientSide && ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute(\"s-id\") && ancestorComponent[\"s-p\"] || ancestorComponent[\"s-p\"]) {\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      }\n      if (BUILD16.prop && !BUILD16.hydrateServerSide && cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n          if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n      if (BUILD16.initializeNextTick) {\n        nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n      } else {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n        fireConnectedCallback(hostRef.$lazyInstance$);\n      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));\n      }\n    }\n    endConnected();\n  }\n};\nvar setContentReference = (elm) => {\n  const contentRefElm = elm[\"s-cr\"] = doc.createComment(\n    BUILD16.isDebug ? `content-ref (host=${elm.localName})` : \"\"\n  );\n  contentRefElm[\"s-cn\"] = true;\n  elm.insertBefore(contentRefElm, elm.firstChild);\n};\n\n// src/runtime/disconnected-callback.ts\nimport { BUILD as BUILD17 } from \"@stencil/core/internal/app-data\";\nvar disconnectInstance = (instance) => {\n  if (BUILD17.lazyLoad && BUILD17.disconnectedCallback) {\n    safeCall(instance, \"disconnectedCallback\");\n  }\n  if (BUILD17.cmpDidUnload) {\n    safeCall(instance, \"componentDidUnload\");\n  }\n};\nvar disconnectedCallback = async (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    if (BUILD17.hostListener) {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map((rmListener) => rmListener());\n        hostRef.$rmListeners$ = void 0;\n      }\n    }\n    if (!BUILD17.lazyLoad) {\n      disconnectInstance(elm);\n    } else if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n      disconnectInstance(hostRef.$lazyInstance$);\n    } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n      hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));\n    }\n  }\n};\n\n// src/runtime/dom-extras.ts\nimport { BUILD as BUILD18 } from \"@stencil/core/internal/app-data\";\nvar patchPseudoShadowDom = (hostElementPrototype, descriptorPrototype) => {\n  patchCloneNode(hostElementPrototype);\n  patchSlotAppendChild(hostElementPrototype);\n  patchSlotAppend(hostElementPrototype);\n  patchSlotPrepend(hostElementPrototype);\n  patchSlotInsertAdjacentElement(hostElementPrototype);\n  patchSlotInsertAdjacentHTML(hostElementPrototype);\n  patchSlotInsertAdjacentText(hostElementPrototype);\n  patchTextContent(hostElementPrototype);\n  patchChildSlotNodes(hostElementPrototype, descriptorPrototype);\n  patchSlotRemoveChild(hostElementPrototype);\n};\nvar patchCloneNode = (HostElementPrototype) => {\n  const orgCloneNode = HostElementPrototype.cloneNode;\n  HostElementPrototype.cloneNode = function(deep) {\n    const srcNode = this;\n    const isShadowDom = BUILD18.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n    const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n    if (BUILD18.slot && !isShadowDom && deep) {\n      let i2 = 0;\n      let slotted, nonStencilNode;\n      const stencilPrivates = [\n        \"s-id\",\n        \"s-cr\",\n        \"s-lr\",\n        \"s-rc\",\n        \"s-sc\",\n        \"s-p\",\n        \"s-cn\",\n        \"s-sr\",\n        \"s-sn\",\n        \"s-hn\",\n        \"s-ol\",\n        \"s-nr\",\n        \"s-si\",\n        \"s-rf\"\n      ];\n      for (; i2 < srcNode.childNodes.length; i2++) {\n        slotted = srcNode.childNodes[i2][\"s-nr\"];\n        nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i2][privateField]);\n        if (slotted) {\n          if (BUILD18.appendChildSlotFix && clonedNode.__appendChild) {\n            clonedNode.__appendChild(slotted.cloneNode(true));\n          } else {\n            clonedNode.appendChild(slotted.cloneNode(true));\n          }\n        }\n        if (nonStencilNode) {\n          clonedNode.appendChild(srcNode.childNodes[i2].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nvar patchSlotAppendChild = (HostElementPrototype) => {\n  HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n  HostElementPrototype.appendChild = function(newChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n    if (slotNode) {\n      const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n      const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n      const insertedNode = appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n      updateFallbackSlotVisibility(this);\n      return insertedNode;\n    }\n    return this.__appendChild(newChild);\n  };\n};\nvar patchSlotRemoveChild = (ElementPrototype) => {\n  ElementPrototype.__removeChild = ElementPrototype.removeChild;\n  ElementPrototype.removeChild = function(toRemove) {\n    if (toRemove && typeof toRemove[\"s-sn\"] !== \"undefined\") {\n      const slotNode = getHostSlotNode(this.childNodes, toRemove[\"s-sn\"], this.tagName);\n      if (slotNode) {\n        const slotChildNodes = getHostSlotChildNodes(slotNode, toRemove[\"s-sn\"]);\n        const existingNode = slotChildNodes.find((n) => n === toRemove);\n        if (existingNode) {\n          existingNode.remove();\n          updateFallbackSlotVisibility(this);\n          return;\n        }\n      }\n    }\n    return this.__removeChild(toRemove);\n  };\n};\nvar patchSlotPrepend = (HostElementPrototype) => {\n  const originalPrepend = HostElementPrototype.prepend;\n  HostElementPrototype.prepend = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n      const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n      if (slotNode) {\n        const slotPlaceholder = document.createTextNode(\"\");\n        slotPlaceholder[\"s-nr\"] = newChild;\n        slotNode[\"s-cr\"].parentNode.__appendChild(slotPlaceholder);\n        newChild[\"s-ol\"] = slotPlaceholder;\n        const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n        const appendAfter = slotChildNodes[0];\n        return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n      }\n      if (newChild.nodeType === 1 && !!newChild.getAttribute(\"slot\")) {\n        newChild.hidden = true;\n      }\n      return originalPrepend.call(this, newChild);\n    });\n  };\n};\nvar patchSlotAppend = (HostElementPrototype) => {\n  HostElementPrototype.append = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      this.appendChild(newChild);\n    });\n  };\n};\nvar patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n  const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n  HostElementPrototype.insertAdjacentHTML = function(position, text) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentHtml.call(this, position, text);\n    }\n    const container = this.ownerDocument.createElement(\"_\");\n    let node;\n    container.innerHTML = text;\n    if (position === \"afterbegin\") {\n      while (node = container.firstChild) {\n        this.prepend(node);\n      }\n    } else if (position === \"beforeend\") {\n      while (node = container.firstChild) {\n        this.append(node);\n      }\n    }\n  };\n};\nvar patchSlotInsertAdjacentText = (HostElementPrototype) => {\n  HostElementPrototype.insertAdjacentText = function(position, text) {\n    this.insertAdjacentHTML(position, text);\n  };\n};\nvar patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n  const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n  HostElementPrototype.insertAdjacentElement = function(position, element) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentElement.call(this, position, element);\n    }\n    if (position === \"afterbegin\") {\n      this.prepend(element);\n      return element;\n    } else if (position === \"beforeend\") {\n      this.append(element);\n      return element;\n    }\n    return element;\n  };\n};\nvar patchTextContent = (hostElementPrototype) => {\n  const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, \"textContent\");\n  Object.defineProperty(hostElementPrototype, \"__textContent\", descriptor);\n  if (BUILD18.experimentalScopedSlotChanges) {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      // To mimic shadow root behavior, we need to return the text content of all\n      // nodes in a slot reference node\n      get() {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        const textContent = slotRefNodes.map((node) => {\n          var _a, _b;\n          const text = [];\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            if (slotContent.nodeType === 3 /* TEXT_NODE */ || slotContent.nodeType === 1 /* ELEMENT_NODE */) {\n              text.push((_b = (_a = slotContent.textContent) == null ? void 0 : _a.trim()) != null ? _b : \"\");\n            }\n            slotContent = slotContent.nextSibling;\n          }\n          return text.filter((ref) => ref !== \"\").join(\" \");\n        }).filter((text) => text !== \"\").join(\" \");\n        return \" \" + textContent + \" \";\n      },\n      // To mimic shadow root behavior, we need to overwrite all nodes in a slot\n      // reference node. If a default slot reference node exists, the text content will be\n      // placed there. Otherwise, the new text node will be hidden\n      set(value) {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        slotRefNodes.forEach((node) => {\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            const tmp = slotContent;\n            slotContent = slotContent.nextSibling;\n            tmp.remove();\n          }\n          if (node[\"s-sn\"] === \"\") {\n            const textNode = this.ownerDocument.createTextNode(value);\n            textNode[\"s-sn\"] = \"\";\n            node.parentElement.insertBefore(textNode, node.nextSibling);\n          } else {\n            node.remove();\n          }\n        });\n      }\n    });\n  } else {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      get() {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === 3 /* TEXT_NODE */) {\n          return slotNode.nextSibling.textContent;\n        } else if (slotNode) {\n          return slotNode.textContent;\n        } else {\n          return this.__textContent;\n        }\n      },\n      set(value) {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === 3 /* TEXT_NODE */) {\n          slotNode.nextSibling.textContent = value;\n        } else if (slotNode) {\n          slotNode.textContent = value;\n        } else {\n          this.__textContent = value;\n          const contentRefElm = this[\"s-cr\"];\n          if (contentRefElm) {\n            this.insertBefore(contentRefElm, this.firstChild);\n          }\n        }\n      }\n    });\n  }\n};\nvar patchChildSlotNodes = (elm, cmpMeta) => {\n  class FakeNodeList extends Array {\n    item(n) {\n      return this[n];\n    }\n  }\n  if (cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n    const childNodesFn = elm.__lookupGetter__(\"childNodes\");\n    Object.defineProperty(elm, \"children\", {\n      get() {\n        return this.childNodes.map((n) => n.nodeType === 1);\n      }\n    });\n    Object.defineProperty(elm, \"childElementCount\", {\n      get() {\n        return elm.children.length;\n      }\n    });\n    Object.defineProperty(elm, \"childNodes\", {\n      get() {\n        const childNodes = childNodesFn.call(this);\n        if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0 && getHostRef(this).$flags$ & 2 /* hasRendered */) {\n          const result = new FakeNodeList();\n          for (let i2 = 0; i2 < childNodes.length; i2++) {\n            const slot = childNodes[i2][\"s-nr\"];\n            if (slot) {\n              result.push(slot);\n            }\n          }\n          return result;\n        }\n        return FakeNodeList.from(childNodes);\n      }\n    });\n  }\n};\nvar getAllChildSlotNodes = (childNodes) => {\n  const slotRefNodes = [];\n  for (const childNode of Array.from(childNodes)) {\n    if (childNode[\"s-sr\"]) {\n      slotRefNodes.push(childNode);\n    }\n    slotRefNodes.push(...getAllChildSlotNodes(childNode.childNodes));\n  }\n  return slotRefNodes;\n};\nvar getSlotName = (node) => node[\"s-sn\"] || node.nodeType === 1 && node.getAttribute(\"slot\") || \"\";\nvar getHostSlotNode = (childNodes, slotName, hostName) => {\n  let i2 = 0;\n  let childNode;\n  for (; i2 < childNodes.length; i2++) {\n    childNode = childNodes[i2];\n    if (childNode[\"s-sr\"] && childNode[\"s-sn\"] === slotName && childNode[\"s-hn\"] === hostName) {\n      return childNode;\n    }\n    childNode = getHostSlotNode(childNode.childNodes, slotName, hostName);\n    if (childNode) {\n      return childNode;\n    }\n  }\n  return null;\n};\nvar getHostSlotChildNodes = (n, slotName) => {\n  const childNodes = [n];\n  while ((n = n.nextSibling) && n[\"s-sn\"] === slotName) {\n    childNodes.push(n);\n  }\n  return childNodes;\n};\n\n// src/runtime/bootstrap-custom-element.ts\nvar defineCustomElement = (Cstr, compactMeta) => {\n  customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nvar proxyCustomElement = (Cstr, compactMeta) => {\n  const cmpMeta = {\n    $flags$: compactMeta[0],\n    $tagName$: compactMeta[1]\n  };\n  if (BUILD19.member) {\n    cmpMeta.$members$ = compactMeta[2];\n  }\n  if (BUILD19.hostListener) {\n    cmpMeta.$listeners$ = compactMeta[3];\n  }\n  if (BUILD19.watchCallback) {\n    cmpMeta.$watchers$ = Cstr.$watchers$;\n  }\n  if (BUILD19.reflect) {\n    cmpMeta.$attrsToReflect$ = [];\n  }\n  if (BUILD19.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n    cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n  }\n  if (BUILD19.experimentalSlotFixes) {\n    if (BUILD19.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchPseudoShadowDom(Cstr.prototype, cmpMeta);\n    }\n  } else {\n    if (BUILD19.slotChildNodesFix) {\n      patchChildSlotNodes(Cstr.prototype, cmpMeta);\n    }\n    if (BUILD19.cloneNodeFix) {\n      patchCloneNode(Cstr.prototype);\n    }\n    if (BUILD19.appendChildSlotFix) {\n      patchSlotAppendChild(Cstr.prototype);\n    }\n    if (BUILD19.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchTextContent(Cstr.prototype);\n    }\n  }\n  const originalConnectedCallback = Cstr.prototype.connectedCallback;\n  const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n  Object.assign(Cstr.prototype, {\n    __registerHost() {\n      registerHost(this, cmpMeta);\n    },\n    connectedCallback() {\n      connectedCallback(this);\n      if (BUILD19.connectedCallback && originalConnectedCallback) {\n        originalConnectedCallback.call(this);\n      }\n    },\n    disconnectedCallback() {\n      disconnectedCallback(this);\n      if (BUILD19.disconnectedCallback && originalDisconnectedCallback) {\n        originalDisconnectedCallback.call(this);\n      }\n    },\n    __attachShadow() {\n      if (supportsShadow) {\n        if (BUILD19.shadowDelegatesFocus) {\n          this.attachShadow({\n            mode: \"open\",\n            delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n          });\n        } else {\n          this.attachShadow({ mode: \"open\" });\n        }\n      } else {\n        this.shadowRoot = this;\n      }\n    }\n  });\n  Cstr.is = cmpMeta.$tagName$;\n  return proxyComponent(Cstr, cmpMeta, 1 /* isElementConstructor */ | 2 /* proxyState */);\n};\nvar forceModeUpdate = (elm) => {\n  if (BUILD19.style && BUILD19.mode && !BUILD19.lazyLoad) {\n    const mode = computeMode(elm);\n    const hostRef = getHostRef(elm);\n    if (hostRef.$modeName$ !== mode) {\n      const cmpMeta = hostRef.$cmpMeta$;\n      const oldScopeId = elm[\"s-sc\"];\n      const scopeId2 = getScopeId(cmpMeta, mode);\n      const style = elm.constructor.style[mode];\n      const flags = cmpMeta.$flags$;\n      if (style) {\n        if (!styles.has(scopeId2)) {\n          registerStyle(scopeId2, style, !!(flags & 1 /* shadowDomEncapsulation */));\n        }\n        hostRef.$modeName$ = mode;\n        elm.classList.remove(oldScopeId + \"-h\", oldScopeId + \"-s\");\n        attachStyles(hostRef);\n        forceUpdate(elm);\n      }\n    }\n  }\n};\n\n// src/runtime/bootstrap-lazy.ts\nimport { BUILD as BUILD20 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/hmr-component.ts\nvar hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n  const hostRef = getHostRef(hostElement);\n  hostRef.$flags$ = 1 /* hasConnected */;\n  initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\n\n// src/runtime/bootstrap-lazy.ts\nvar bootstrapLazy = (lazyBundles, options = {}) => {\n  var _a;\n  if (BUILD20.profile && performance.mark) {\n    performance.mark(\"st:app:start\");\n  }\n  installDevTools();\n  const endBootstrap = createTime(\"bootstrapLazy\");\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements2 = win.customElements;\n  const head = doc.head;\n  const metaCharset = /* @__PURE__ */ head.querySelector(\"meta[charset]\");\n  const dataStyles = /* @__PURE__ */ doc.createElement(\"style\");\n  const deferredConnectedCallbacks = [];\n  const styles2 = /* @__PURE__ */ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);\n  let appLoadFallback;\n  let isBootstrapping = true;\n  let i2 = 0;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || \"./\", doc.baseURI).href;\n  if (BUILD20.asyncQueue) {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4 /* queueSync */;\n    }\n  }\n  if (BUILD20.hydrateClientSide) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  if (BUILD20.hydrateClientSide && BUILD20.shadowDom) {\n    for (; i2 < styles2.length; i2++) {\n      registerStyle(styles2[i2].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles2[i2].innerHTML), true);\n    }\n  }\n  let hasSlotRelocation = false;\n  lazyBundles.map((lazyBundle) => {\n    lazyBundle[1].map((compactMeta) => {\n      var _a2;\n      const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n        hasSlotRelocation = true;\n      }\n      if (BUILD20.member) {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      if (BUILD20.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      if (BUILD20.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      if (BUILD20.watchCallback) {\n        cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};\n      }\n      if (BUILD20.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n      }\n      const tagName = BUILD20.transformTagName && options.transformTagName ? options.transformTagName(cmpMeta.$tagName$) : cmpMeta.$tagName$;\n      const HostElement = class extends HTMLElement {\n        // StencilLazyHost\n        constructor(self) {\n          super(self);\n          self = this;\n          registerHost(self, cmpMeta);\n          if (BUILD20.shadowDom && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            if (supportsShadow) {\n              if (BUILD20.shadowDelegatesFocus) {\n                self.attachShadow({\n                  mode: \"open\",\n                  delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n                });\n              } else {\n                self.attachShadow({ mode: \"open\" });\n              }\n            } else if (!BUILD20.hydrateServerSide && !(\"shadowRoot\" in self)) {\n              self.shadowRoot = self;\n            }\n          }\n        }\n        connectedCallback() {\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n          if (isBootstrapping) {\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(() => connectedCallback(this));\n          }\n        }\n        disconnectedCallback() {\n          plt.jmp(() => disconnectedCallback(this));\n        }\n        componentOnReady() {\n          return getHostRef(this).$onReadyPromise$;\n        }\n      };\n      if (BUILD20.experimentalSlotFixes) {\n        if (BUILD20.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchPseudoShadowDom(HostElement.prototype, cmpMeta);\n        }\n      } else {\n        if (BUILD20.slotChildNodesFix) {\n          patchChildSlotNodes(HostElement.prototype, cmpMeta);\n        }\n        if (BUILD20.cloneNodeFix) {\n          patchCloneNode(HostElement.prototype);\n        }\n        if (BUILD20.appendChildSlotFix) {\n          patchSlotAppendChild(HostElement.prototype);\n        }\n        if (BUILD20.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchTextContent(HostElement.prototype);\n        }\n      }\n      if (BUILD20.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */) {\n        HostElement.formAssociated = true;\n      }\n      if (BUILD20.hotModuleReplacement) {\n        HostElement.prototype[\"s-hmr\"] = function(hmrVersionId) {\n          hmrStart(this, cmpMeta, hmrVersionId);\n        };\n      }\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n      if (!exclude.includes(tagName) && !customElements2.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements2.define(\n          tagName,\n          proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */)\n        );\n      }\n    });\n  });\n  if (cmpTags.length > 0) {\n    if (hasSlotRelocation) {\n      dataStyles.textContent += SLOT_FB_CSS;\n    }\n    if (BUILD20.invisiblePrehydration && (BUILD20.hydratedClass || BUILD20.hydratedAttribute)) {\n      dataStyles.textContent += cmpTags + HYDRATED_CSS;\n    }\n    if (dataStyles.innerHTML.length) {\n      dataStyles.setAttribute(\"data-styles\", \"\");\n      const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n      if (nonce != null) {\n        dataStyles.setAttribute(\"nonce\", nonce);\n      }\n      head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n  }\n  isBootstrapping = false;\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map((host) => host.connectedCallback());\n  } else {\n    if (BUILD20.profile) {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30, \"timeout\"));\n    } else {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  }\n  endBootstrap();\n};\n\n// src/runtime/fragment.ts\nvar Fragment = (_, children) => children;\n\n// src/runtime/host-listener.ts\nimport { BUILD as BUILD21 } from \"@stencil/core/internal/app-data\";\nvar addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n  if (BUILD21.hostListener && listeners) {\n    if (BUILD21.hostListenerTargetParent) {\n      if (attachParentListeners) {\n        listeners = listeners.filter(([flags]) => flags & 32 /* TargetParent */);\n      } else {\n        listeners = listeners.filter(([flags]) => !(flags & 32 /* TargetParent */));\n      }\n    }\n    listeners.map(([flags, name, method]) => {\n      const target = BUILD21.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n      const handler = hostListenerProxy(hostRef, method);\n      const opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n    });\n  }\n};\nvar hostListenerProxy = (hostRef, methodName) => (ev) => {\n  try {\n    if (BUILD21.lazyLoad) {\n      if (hostRef.$flags$ & 256 /* isListenReady */) {\n        hostRef.$lazyInstance$[methodName](ev);\n      } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    } else {\n      hostRef.$hostElement$[methodName](ev);\n    }\n  } catch (e) {\n    consoleError(e);\n  }\n};\nvar getHostListenerTarget = (elm, flags) => {\n  if (BUILD21.hostListenerTargetDocument && flags & 4 /* TargetDocument */)\n    return doc;\n  if (BUILD21.hostListenerTargetWindow && flags & 8 /* TargetWindow */)\n    return win;\n  if (BUILD21.hostListenerTargetBody && flags & 16 /* TargetBody */)\n    return doc.body;\n  if (BUILD21.hostListenerTargetParent && flags & 32 /* TargetParent */)\n    return elm.parentElement;\n  return elm;\n};\nvar hostListenerOpts = (flags) => supportsListenerOptions ? {\n  passive: (flags & 1 /* Passive */) !== 0,\n  capture: (flags & 2 /* Capture */) !== 0\n} : (flags & 2 /* Capture */) !== 0;\n\n// src/runtime/nonce.ts\nvar setNonce = (nonce) => plt.$nonce$ = nonce;\n\n// src/runtime/platform-options.ts\nvar setPlatformOptions = (opts) => Object.assign(plt, opts);\n\n// src/runtime/vdom/vdom-annotations.ts\nvar insertVdomAnnotations = (doc2, staticComponents) => {\n  if (doc2 != null) {\n    const docData = {\n      hostIds: 0,\n      rootLevelIds: 0,\n      staticComponents: new Set(staticComponents)\n    };\n    const orgLocationNodes = [];\n    parseVNodeAnnotations(doc2, doc2.body, docData, orgLocationNodes);\n    orgLocationNodes.forEach((orgLocationNode) => {\n      var _a, _b;\n      if (orgLocationNode != null && orgLocationNode[\"s-nr\"]) {\n        const nodeRef = orgLocationNode[\"s-nr\"];\n        let hostId = nodeRef[\"s-host-id\"];\n        let nodeId = nodeRef[\"s-node-id\"];\n        let childId = `${hostId}.${nodeId}`;\n        if (hostId == null) {\n          hostId = 0;\n          docData.rootLevelIds++;\n          nodeId = docData.rootLevelIds;\n          childId = `${hostId}.${nodeId}`;\n          if (nodeRef.nodeType === 1 /* ElementNode */) {\n            nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n          } else if (nodeRef.nodeType === 3 /* TextNode */) {\n            if (hostId === 0) {\n              const textContent = (_a = nodeRef.nodeValue) == null ? void 0 : _a.trim();\n              if (textContent === \"\") {\n                orgLocationNode.remove();\n                return;\n              }\n            }\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n            (_b = nodeRef.parentNode) == null ? void 0 : _b.insertBefore(commentBeforeTextNode, nodeRef);\n          }\n        }\n        let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n        const orgLocationParentNode = orgLocationNode.parentElement;\n        if (orgLocationParentNode) {\n          if (orgLocationParentNode[\"s-en\"] === \"\") {\n            orgLocationNodeId += `.`;\n          } else if (orgLocationParentNode[\"s-en\"] === \"c\") {\n            orgLocationNodeId += `.c`;\n          }\n        }\n        orgLocationNode.nodeValue = orgLocationNodeId;\n      }\n    });\n  }\n};\nvar parseVNodeAnnotations = (doc2, node, docData, orgLocationNodes) => {\n  if (node == null) {\n    return;\n  }\n  if (node[\"s-nr\"] != null) {\n    orgLocationNodes.push(node);\n  }\n  if (node.nodeType === 1 /* ElementNode */) {\n    node.childNodes.forEach((childNode) => {\n      const hostRef = getHostRef(childNode);\n      if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n        const cmpData = {\n          nodeIds: 0\n        };\n        insertVNodeAnnotations(doc2, childNode, hostRef.$vnode$, docData, cmpData);\n      }\n      parseVNodeAnnotations(doc2, childNode, docData, orgLocationNodes);\n    });\n  }\n};\nvar insertVNodeAnnotations = (doc2, hostElm, vnode, docData, cmpData) => {\n  if (vnode != null) {\n    const hostId = ++docData.hostIds;\n    hostElm.setAttribute(HYDRATE_ID, hostId);\n    if (hostElm[\"s-cr\"] != null) {\n      hostElm[\"s-cr\"].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n    }\n    if (vnode.$children$ != null) {\n      const depth = 0;\n      vnode.$children$.forEach((vnodeChild, index) => {\n        insertChildVNodeAnnotations(doc2, vnodeChild, cmpData, hostId, depth, index);\n      });\n    }\n    if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n      const parent = hostElm.parentElement;\n      if (parent && parent.childNodes) {\n        const parentChildNodes = Array.from(parent.childNodes);\n        const comment = parentChildNodes.find(\n          (node) => node.nodeType === 8 /* CommentNode */ && node[\"s-sr\"]\n        );\n        if (comment) {\n          const index = parentChildNodes.indexOf(hostElm) - 1;\n          vnode.$elm$.setAttribute(\n            HYDRATE_CHILD_ID,\n            `${comment[\"s-host-id\"]}.${comment[\"s-node-id\"]}.0.${index}`\n          );\n        }\n      }\n    }\n  }\n};\nvar insertChildVNodeAnnotations = (doc2, vnodeChild, cmpData, hostId, depth, index) => {\n  const childElm = vnodeChild.$elm$;\n  if (childElm == null) {\n    return;\n  }\n  const nodeId = cmpData.nodeIds++;\n  const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n  childElm[\"s-host-id\"] = hostId;\n  childElm[\"s-node-id\"] = nodeId;\n  if (childElm.nodeType === 1 /* ElementNode */) {\n    childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n  } else if (childElm.nodeType === 3 /* TextNode */) {\n    const parentNode = childElm.parentNode;\n    const nodeName = parentNode == null ? void 0 : parentNode.nodeName;\n    if (nodeName !== \"STYLE\" && nodeName !== \"SCRIPT\") {\n      const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n      const commentBeforeTextNode = doc2.createComment(textNodeId);\n      parentNode == null ? void 0 : parentNode.insertBefore(commentBeforeTextNode, childElm);\n    }\n  } else if (childElm.nodeType === 8 /* CommentNode */) {\n    if (childElm[\"s-sr\"]) {\n      const slotName = childElm[\"s-sn\"] || \"\";\n      const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n      childElm.nodeValue = slotNodeId;\n    }\n  }\n  if (vnodeChild.$children$ != null) {\n    const childDepth = depth + 1;\n    vnodeChild.$children$.forEach((vnode, index2) => {\n      insertChildVNodeAnnotations(doc2, vnode, cmpData, hostId, childDepth, index2);\n    });\n  }\n};\n\n// src/client/client-host-ref.ts\nvar hostRefs = BUILD22.hotModuleReplacement ? window.__STENCIL_HOSTREFS__ || (window.__STENCIL_HOSTREFS__ = /* @__PURE__ */ new WeakMap()) : /* @__PURE__ */ new WeakMap();\nvar getHostRef = (ref) => hostRefs.get(ref);\nvar registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\nvar registerHost = (hostElement, cmpMeta) => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: hostElement,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: /* @__PURE__ */ new Map()\n  };\n  if (BUILD22.isDev) {\n    hostRef.$renderCount$ = 0;\n  }\n  if (BUILD22.method && BUILD22.lazyLoad) {\n    hostRef.$onInstancePromise$ = new Promise((r) => hostRef.$onInstanceResolve$ = r);\n  }\n  if (BUILD22.asyncLoading) {\n    hostRef.$onReadyPromise$ = new Promise((r) => hostRef.$onReadyResolve$ = r);\n    hostElement[\"s-p\"] = [];\n    hostElement[\"s-rc\"] = [];\n  }\n  addHostEventListeners(hostElement, hostRef, cmpMeta.$listeners$, false);\n  return hostRefs.set(hostElement, hostRef);\n};\nvar isMemberInElement = (elm, memberName) => memberName in elm;\n\n// src/client/client-load-module.ts\nimport { BUILD as BUILD24 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-log.ts\nimport { BUILD as BUILD23 } from \"@stencil/core/internal/app-data\";\nvar customError;\nvar consoleError = (e, el) => (customError || console.error)(e, el);\nvar STENCIL_DEV_MODE = BUILD23.isTesting ? [\"STENCIL:\"] : [\n  \"%cstencil\",\n  \"color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px\"\n];\nvar consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nvar consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nvar consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nvar setErrorHandler = (handler) => customError = handler;\n\n// src/client/client-load-module.ts\nvar cmpModules = /* @__PURE__ */ new Map();\nvar MODULE_IMPORT_PREFIX = \"./\";\nvar loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  const exportName = cmpMeta.$tagName$.replace(/-/g, \"_\");\n  const bundleId = cmpMeta.$lazyBundleId$;\n  if (BUILD24.isDev && typeof bundleId !== \"string\") {\n    consoleDevError(\n      `Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`\n    );\n    return void 0;\n  }\n  const module = !BUILD24.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n  if (module) {\n    return module[exportName];\n  }\n  /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n  return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD24.hotModuleReplacement && hmrVersionId ? \"?s-hmr=\" + hmrVersionId : \"\"}`\n  ).then((importedModule) => {\n    if (!BUILD24.hotModuleReplacement) {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\n// src/client/client-style.ts\nvar styles = /* @__PURE__ */ new Map();\nvar modeResolutionChain = [];\n\n// src/client/client-task-queue.ts\nimport { BUILD as BUILD26 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-window.ts\nimport { BUILD as BUILD25 } from \"@stencil/core/internal/app-data\";\nvar win = typeof window !== \"undefined\" ? window : {};\nvar doc = win.document || { head: {} };\nvar H = win.HTMLElement || class {\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: \"\",\n  jmp: (h2) => h2(),\n  raf: (h2) => requestAnimationFrame(h2),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n  ce: (eventName, opts) => new CustomEvent(eventName, opts)\n};\nvar setPlatformHelpers = (helpers) => {\n  Object.assign(plt, helpers);\n};\nvar supportsShadow = (\n  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n  BUILD25.shadowDomShim && BUILD25.shadowDom ? /* @__PURE__ */ (() => (doc.head.attachShadow + \"\").indexOf(\"[native\") > -1)() : true\n);\nvar supportsListenerOptions = /* @__PURE__ */ (() => {\n  let supportsListenerOptions2 = false;\n  try {\n    doc.addEventListener(\n      \"e\",\n      null,\n      Object.defineProperty({}, \"passive\", {\n        get() {\n          supportsListenerOptions2 = true;\n        }\n      })\n    );\n  } catch (e) {\n  }\n  return supportsListenerOptions2;\n})();\nvar promiseResolve = (v) => Promise.resolve(v);\nvar supportsConstructableStylesheets = BUILD25.constructableCSS ? /* @__PURE__ */ (() => {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replaceSync === \"function\";\n  } catch (e) {\n  }\n  return false;\n})() : false;\n\n// src/client/client-task-queue.ts\nvar queueCongestion = 0;\nvar queuePending = false;\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = (queue, write) => (cb) => {\n  queue.push(cb);\n  if (!queuePending) {\n    queuePending = true;\n    if (write && plt.$flags$ & 4 /* queueSync */) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\nvar consume = (queue) => {\n  for (let i2 = 0; i2 < queue.length; i2++) {\n    try {\n      queue[i2](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  queue.length = 0;\n};\nvar consumeTimeout = (queue, timeout) => {\n  let i2 = 0;\n  let ts = 0;\n  while (i2 < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i2++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  if (i2 === queue.length) {\n    queue.length = 0;\n  } else if (i2 !== 0) {\n    queue.splice(0, i2);\n  }\n};\nvar flush = () => {\n  if (BUILD26.asyncQueue) {\n    queueCongestion++;\n  }\n  consume(queueDomReads);\n  if (BUILD26.asyncQueue) {\n    const timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1 / 10)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push(...queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  } else {\n    consume(queueDomWrites);\n    if (queuePending = queueDomReads.length > 0) {\n      plt.raf(flush);\n    }\n  }\n};\nvar nextTick = (cb) => promiseResolve().then(cb);\nvar readTask = /* @__PURE__ */ queueTask(queueDomReads, false);\nvar writeTask = /* @__PURE__ */ queueTask(queueDomWrites, true);\n\n// src/client/index.ts\nimport { BUILD as BUILD27, Env, NAMESPACE as NAMESPACE2 } from \"@stencil/core/internal/app-data\";\nexport {\n  BUILD27 as BUILD,\n  Build,\n  Env,\n  Fragment,\n  H,\n  H as HTMLElement,\n  Host,\n  NAMESPACE2 as NAMESPACE,\n  STENCIL_DEV_MODE,\n  addHostEventListeners,\n  bootstrapLazy,\n  cmpModules,\n  connectedCallback,\n  consoleDevError,\n  consoleDevInfo,\n  consoleDevWarn,\n  consoleError,\n  createEvent,\n  defineCustomElement,\n  disconnectedCallback,\n  doc,\n  forceModeUpdate,\n  forceUpdate,\n  getAssetPath,\n  getElement,\n  getHostRef,\n  getMode,\n  getRenderingRef,\n  getValue,\n  h,\n  insertVdomAnnotations,\n  isMemberInElement,\n  loadModule,\n  modeResolutionChain,\n  nextTick,\n  parsePropertyValue,\n  plt,\n  postUpdateComponent,\n  promiseResolve,\n  proxyComponent,\n  proxyCustomElement,\n  readTask,\n  registerHost,\n  registerInstance,\n  renderVdom,\n  setAssetPath,\n  setErrorHandler,\n  setMode,\n  setNonce,\n  setPlatformHelpers,\n  setPlatformOptions,\n  setValue,\n  styles,\n  supportsConstructableStylesheets,\n  supportsListenerOptions,\n  supportsShadow,\n  win,\n  writeTask\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
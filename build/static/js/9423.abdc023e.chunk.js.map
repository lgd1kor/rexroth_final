{"version":3,"file":"static/js/9423.abdc023e.chunk.js","mappings":"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","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/breakPointChecker.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-header/dc-ui-header-main-nav-item/dc-ui-header-main-nav-item.scss?tag=dc-ui-header-main-nav-item&encapsulation=shadow","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-header/dc-ui-header-main-nav-item/dc-ui-header-main-nav-item.tsx","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/mediaQuery.ts"],"sourcesContent":["import { TBreakpointNames, breakpoints } from '../../utils';\r\n\r\nexport const getCurrentBreakpoint = (): TBreakpointNames => {\r\n  let currentBreakpoint: TBreakpointNames;\r\n  const width = window.innerWidth;\r\n\r\n  if (width < breakpoints.xs) {\r\n    currentBreakpoint = 'xxs';\r\n  } else if (width < breakpoints.sm) {\r\n    currentBreakpoint = 'xs';\r\n  } else if (width < breakpoints.md) {\r\n    currentBreakpoint = 'sm';\r\n  } else if (width < breakpoints.lg) {\r\n    currentBreakpoint = 'md';\r\n  } else if (width < breakpoints.xl) {\r\n    currentBreakpoint = 'lg';\r\n  } else if (width < breakpoints.xxl) {\r\n    currentBreakpoint = 'xl';\r\n  } else {\r\n    currentBreakpoint = 'xxl';\r\n  }\r\n\r\n  return currentBreakpoint;\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is equal to or larger than the specified breakpoint.\r\n *\r\n * @param {TBreakpointNames} breakpoint - The breakpoint to check against.\r\n * @returns {boolean} - True if the current breakpoint is equal to or larger than the specified breakpoint, false otherwise.\r\n */\r\nexport const isBreakpointEqualOrLarger = (breakpoint: TBreakpointNames): boolean => {\r\n  return window.innerWidth >= breakpoints[breakpoint];\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is equal to or smaller than the specified breakpoint.\r\n *\r\n * @param {TBreakpointNames} breakpoint - The breakpoint to check against.\r\n * @returns {boolean} - True if the current breakpoint is equal to or smaller than the specified breakpoint, false otherwise.\r\n */\r\nexport const isBreakpointEqualOrSmaller = (breakpoint: TBreakpointNames): boolean => {\r\n  return window.innerWidth <= breakpoints[breakpoint];\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is between the specified breakpoints.\r\n *\r\n * @param {TBreakpointNames} min - The start breakpoint.\r\n * @param {TBreakpointNames} max - The end breakpoint.\r\n * @returns {boolean} - True if the current breakpoint is between the specified breakpoints, false otherwise.\r\n */\r\nexport const isBreakpointBetween = (min: TBreakpointNames, max: TBreakpointNames): boolean => {\r\n  return window.innerWidth >= breakpoints[min] && window.innerWidth < breakpoints[max];\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is strictly larger than the specified breakpoint.\r\n *\r\n * @param {TBreakpointNames} breakpoint - The breakpoint to check against.\r\n * @returns {boolean} - True if the current breakpoint is larger than the specified breakpoint, false otherwise.\r\n */\r\nexport const isBreakpointLarger = (breakpoint: TBreakpointNames): boolean => {\r\n  return window.innerWidth > breakpoints[breakpoint];\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is strictly smaller than the specified breakpoint.\r\n *\r\n * @param {TBreakpointNames} breakpoint - The breakpoint to check against.\r\n * @returns {boolean} - True if the current breakpoint is smaller than the specified breakpoint, false otherwise.\r\n */\r\nexport const isBreakpointSmaller = (breakpoint: TBreakpointNames): boolean => {\r\n  return window.innerWidth < breakpoints[breakpoint];\r\n};\r\n",":host {\r\n  display: block;\r\n\r\n  --navigation-columns-number: 1;\r\n\r\n  @include media-min(lg) {\r\n    --navigation-columns-number: 1;\r\n  }\r\n\r\n  @include media-min(xl) {\r\n    --navigation-columns-number: 3;\r\n  }\r\n}\r\n\r\n.main-nav-item {\r\n  position: relative;\r\n\r\n  &.is-active {\r\n    .main-nav-item-content {\r\n      display: block;\r\n\r\n      @include media-max(xl) {\r\n        translate: 0 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.main-nav-item-trigger {\r\n  appearance: none;\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  padding: 4px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @include media-min(xl) {\r\n    background-color: transparent;\r\n    padding: 16px 24px;\r\n    display: flex;\r\n    position: relative;\r\n\r\n    &.is-active,\r\n    &:hover {\r\n      &:before {\r\n        content: '';\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        height: 4px;\r\n        background-color: $color-turquoise-01;\r\n      }\r\n    }\r\n\r\n    &:focus-visible {\r\n      outline: 2px solid $color-turquoise-03;\r\n      outline-offset: -2px;\r\n    }\r\n\r\n    &:hover:focus-visible,\r\n    &.is-active:focus-visible {\r\n      &:before {\r\n        bottom: 3px;\r\n        left: 3px;\r\n        right: 3px;\r\n      }\r\n    }\r\n\r\n    dc-ui-icon {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n.main-nav-item-title {\r\n  color: $color-dark-blue-02;\r\n  @include font-style('strong-text');\r\n\r\n  @include media-min(xl) {\r\n    line-height: 16px;\r\n  }\r\n}\r\n\r\n.main-nav-item-content {\r\n  display: none;\r\n  position: fixed;\r\n  inset: 0;\r\n  background-color: $color-white;\r\n  z-index: 1;\r\n  padding: 32px 24px 48px;\r\n\r\n  @include media-max(xl) {\r\n    display: block;\r\n    transition: translate 0.3s ease;\r\n    translate: 100% 0;\r\n  }\r\n\r\n  @include media-min(xl) {\r\n    padding: 0;\r\n    position: fixed;\r\n    top: calc(48px + var(--header-height));\r\n    left: 0;\r\n    right: 0;\r\n    bottom: unset;\r\n    max-width: var(--header-max-width);\r\n    margin-inline: auto;\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n}\r\n\r\n.navigation-body {\r\n  display: grid;\r\n  row-gap: 24px;\r\n\r\n  @include media-min(xl) {\r\n    max-width: 1170px;\r\n    margin-inline: auto;\r\n    overflow: hidden;\r\n    position: relative;\r\n    padding-block: 24px;\r\n    row-gap: 8px;\r\n\r\n    dc-ui-header-nav-breadcrumb {\r\n      min-height: 32px;\r\n      margin-right: 32px;\r\n    }\r\n  }\r\n}\r\n\r\n#close-icon {\r\n  display: none;\r\n\r\n  @include media-min(xl) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 24px;\r\n    right: 0;\r\n  }\r\n}\r\n\r\n.navigation-rows-wrapper {\r\n  min-width: 0; /* fix for grid layout */\r\n  display: flex;\r\n  height: 100%;\r\n  --translateX: min(\r\n    0%,\r\n    calc(\r\n      (-100% / var(--navigation-columns-number)) *\r\n        (var(--navigation-columns-current) - var(--navigation-columns-number))\r\n    )\r\n  );\r\n  transition: transform 0.5s;\r\n  transform: translate(var(--translateX));\r\n\r\n  @include media-max('xl') {\r\n    gap: 30px;\r\n    --translateX: min(\r\n      0%,\r\n      calc(\r\n        ((-100% - 30px) / var(--navigation-columns-number)) *\r\n          (var(--navigation-columns-current) - var(--navigation-columns-number))\r\n      )\r\n    );\r\n  }\r\n\r\n  > * {\r\n    width: calc(100% / var(--navigation-columns-number));\r\n    flex: 0 0 auto;\r\n  }\r\n}\r\n\r\n::slotted(*) {\r\n  width: calc(100% / var(--navigation-columns-number));\r\n  flex: 0 0 auto;\r\n}\r\n\r\n::slotted(.menu-container) {\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n  display: none;\r\n}\r\n\r\n::slotted(.menu-container.active) {\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  row-gap: 10px;\r\n  align-content: start;\r\n}\r\n","import {\r\n  Component,\r\n  h,\r\n  Prop,\r\n  State,\r\n  Element,\r\n  Listen,\r\n  Event,\r\n  EventEmitter,\r\n  Method,\r\n} from '@stencil/core';\r\nimport { createUuid } from '../../../utils/functions/uuid';\r\nimport { isBreakpointEqualOrLarger, isBreakpointEqualOrSmaller } from '../../../utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-header-main-nav-item',\r\n  styleUrl: 'dc-ui-header-main-nav-item.scss',\r\n  shadow: true,\r\n})\r\nexport class DcUiHeaderMainNavItem {\r\n  @Element() el!: HTMLElement;\r\n  @Prop() title!: string;\r\n\r\n  @State() isActive: boolean = false;\r\n\r\n  private readonly uuid: string = createUuid();\r\n  private breadcrumbElement: HTMLDcUiHeaderNavBreadcrumbElement;\r\n\r\n  @Event() closeOtherFlyouts: EventEmitter<{ sourceId: string }>;\r\n\r\n  @Listen('click', { target: 'window' })\r\n  handleWindowClick(event: MouseEvent) {\r\n    if (this.isActive && isBreakpointEqualOrLarger('lg')) {\r\n      // check if the click is outside the component\r\n      if (!this.el.contains(event.target as Node)) {\r\n        this.closeFlyout();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Listen('keydown', { target: 'window' })\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (this.isActive && event.key === 'Escape' && isBreakpointEqualOrLarger('lg')) {\r\n      this.closeFlyout();\r\n    }\r\n  }\r\n\r\n  @Listen('breadcrumbClick')\r\n  handleBreadcrumbClick(event: CustomEvent) {\r\n    // use the event.detail to get the index\r\n    const index = event.detail.index;\r\n    // on mobile, if the index is 0, close the flyout\r\n    if (index === 0 && isBreakpointEqualOrSmaller('xl')) {\r\n      this.closeFlyout();\r\n      this.resetMenuContainerAndItems();\r\n    }\r\n\r\n    // use this index to go back up in the hierarchy and toggle all active menu-containers higher than this index\r\n    this.toggleAllMenuContainersAfterLevel(index);\r\n  }\r\n\r\n  private toggleFlyout() {\r\n    if (this.isActive) {\r\n      this.closeFlyout();\r\n    } else {\r\n      this.closeOtherFlyouts.emit({ sourceId: this.uuid });\r\n      this.openFlyout();\r\n    }\r\n  }\r\n\r\n  private openFlyout() {\r\n    this.isActive = true;\r\n\r\n    if (!isBreakpointEqualOrLarger('xl')) {\r\n      // get first menu-container and add active class\r\n      const firstMenuContainer = this.el.querySelector('.menu-container');\r\n      if (firstMenuContainer && !firstMenuContainer.classList.contains('active')) {\r\n        firstMenuContainer.classList.add('active');\r\n      }\r\n\r\n      // Add the initial breadcrumb item with the main nav item title\r\n      if (this.breadcrumbElement) {\r\n        // add the initial breadcrumb item with the main nav item title\r\n        this.breadcrumbElement.addItem('', true);\r\n        // also add the current item\r\n        this.breadcrumbElement.addItem(this.title);\r\n      }\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async closeFlyout() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  private organizeMenuHierarchy(\r\n    element: HTMLElement,\r\n    parentId = null,\r\n    groupedContainers = {},\r\n    level = 0\r\n  ) {\r\n    const children = Array.from(element.children);\r\n\r\n    if (!groupedContainers[parentId]) {\r\n      const groupContainer = document.createElement('ul');\r\n      groupContainer.className = 'menu-container';\r\n      groupContainer.setAttribute('data-parent-id', parentId);\r\n      groupContainer.setAttribute('data-nav-level', level.toString());\r\n      if (parentId === null && isBreakpointEqualOrLarger('xl'))\r\n        groupContainer.classList.add('active');\r\n      this.el.appendChild(groupContainer);\r\n      groupedContainers[parentId] = groupContainer;\r\n    }\r\n\r\n    children.forEach((child) => {\r\n      const id = createUuid();\r\n      child.setAttribute('data-id', id);\r\n      child.classList.add('menu-item');\r\n      groupedContainers[parentId].appendChild(child);\r\n\r\n      // Only recurse if the child is a flyout nav item\r\n      if (\r\n        child.children.length > 0 &&\r\n        (child.tagName.toLowerCase() === 'dc-ui-header-flyout-nav-item' ||\r\n          (child.hasAttribute('data-nesting') && child.getAttribute('data-nesting') !== 'false'))\r\n      ) {\r\n        this.organizeMenuHierarchy(child as HTMLElement, id, groupedContainers, level + 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  private addEventListenersToMenuItems() {\r\n    const menuItems = this.el.querySelectorAll('dc-ui-header-flyout-nav-item');\r\n    menuItems.forEach((menuItem) => {\r\n      menuItem.addEventListener('click', (event) => this.handleMenuItemClick(event));\r\n    });\r\n  }\r\n\r\n  private toggleAllMenuContainersAfterLevel(level: number) {\r\n    // use this function to remove the active class from all menu-containers with a nav-level greater than the given level\r\n\r\n    // 1. get all menu-containers with a active class\r\n    const activeMenuContainers = this.el.querySelectorAll('.menu-container.active');\r\n\r\n    // 2. make sure the --navigation-columns-current custom property is updated\r\n    const navLevelNumber = Number(level) + (isBreakpointEqualOrLarger('xl') ? 2 : 0);\r\n    this.el.style.setProperty('--navigation-columns-current', navLevelNumber.toString());\r\n\r\n    // on the current level, remove the selected state from all menu items\r\n    const currentLevelMenuItems = this.el.querySelectorAll(\r\n      `[data-nav-level=\"${level + 1}\"] .menu-item`\r\n    );\r\n\r\n    currentLevelMenuItems.forEach((menuItem) => {\r\n      menuItem.removeAttribute('selected');\r\n    });\r\n\r\n    // 3. loop through all active menu-containers and remove the active class if the nav-level is greater than the given level\r\n    activeMenuContainers.forEach((menuContainer) => {\r\n      const containerLevel = menuContainer.getAttribute('data-nav-level');\r\n      if (containerLevel && Number(containerLevel) > level + 1) {\r\n        menuContainer.classList.remove('active');\r\n\r\n        // on the current level, remove the selected state from all menu items\r\n        const currentLevelMenuItems = menuContainer.querySelectorAll('.menu-item');\r\n        currentLevelMenuItems.forEach((menuItem) => {\r\n          menuItem.removeAttribute('selected');\r\n        });\r\n      }\r\n    });\r\n\r\n    // 4. update the breadcrumb\r\n    this.breadcrumbElement.removeAllItemsFrom(level + 1);\r\n  }\r\n\r\n  private resetMenuContainerAndItems() {\r\n    // 1. remove selected state from all menu items\r\n    const menuItems = this.el.querySelectorAll('.menu-item');\r\n    menuItems.forEach((menuItem) => {\r\n      menuItem.removeAttribute('selected');\r\n    });\r\n\r\n    // 2. remove active class from all menu containers\r\n    const menuContainers = this.el.querySelectorAll('.menu-container');\r\n    menuContainers.forEach((menuContainer) => {\r\n      menuContainer.classList.remove('active');\r\n    });\r\n  }\r\n\r\n  private async handleMenuItemClick(event: Event) {\r\n    const clickedMenuItem = event.target as HTMLElement;\r\n    const id = clickedMenuItem.getAttribute('data-id');\r\n    const title = clickedMenuItem.getAttribute('title') || clickedMenuItem.textContent;\r\n\r\n    const menuContainerToToggle = document.querySelector(`.menu-container[data-parent-id=\"${id}\"]`);\r\n    if (!menuContainerToToggle) return;\r\n\r\n    const currentNavLevel = clickedMenuItem\r\n      .closest('.menu-container')\r\n      ?.getAttribute('data-nav-level');\r\n    const navLevelToToggle = menuContainerToToggle.getAttribute('data-nav-level');\r\n\r\n    // Add item to breadcrumb\r\n    if (this.breadcrumbElement) {\r\n      // clear existing items from this level onwards\r\n      const currentLevel = Number(currentNavLevel) + (isBreakpointEqualOrSmaller('xl') ? 2 : 0);\r\n      this.breadcrumbElement.removeAllItemsFrom(currentLevel);\r\n      // Add new Item\r\n      this.breadcrumbElement.addItem(title);\r\n    }\r\n\r\n    const activeMenuContainers = document.querySelectorAll(`.menu-container.active`);\r\n    activeMenuContainers.forEach((container) => {\r\n      const containerLevel = container.getAttribute('data-nav-level');\r\n      if (containerLevel && Number(containerLevel) >= Number(navLevelToToggle)) {\r\n        container.classList.remove('active');\r\n      }\r\n    });\r\n\r\n    menuContainerToToggle.classList.toggle('active');\r\n\r\n    // Updated selection clearing to exclude lower levels\r\n    const currentAndHigherLevelItems = Array.from(\r\n      this.el.querySelectorAll('.menu-container .menu-item')\r\n    ).filter((menuItem) => {\r\n      const containerLevel = menuItem.closest('.menu-container')?.getAttribute('data-nav-level');\r\n      return containerLevel && Number(containerLevel) >= Number(currentNavLevel);\r\n    });\r\n    currentAndHigherLevelItems.forEach((menuItem) => menuItem.removeAttribute('selected'));\r\n\r\n    // toggle selected state on clicked menu item\r\n    clickedMenuItem.setAttribute('selected', 'true');\r\n\r\n    // update custom property\r\n    const navLevelNumber = Number(navLevelToToggle) + 1;\r\n    this.el.style.setProperty('--navigation-columns-current', navLevelNumber.toString());\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.organizeMenuHierarchy(this.el, null, {}, 0);\r\n    this.addEventListenersToMenuItems();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // Clean up the containers when component is removed\r\n    const parentElement = this.el.parentElement;\r\n    if (!parentElement) return;\r\n\r\n    const containers = parentElement.querySelectorAll('[data-nav-level]');\r\n    containers.forEach((container) => container.remove());\r\n  }\r\n\r\n  render() {\r\n    const closeButton = (\r\n      <dc-ui-button\r\n        autofocus\r\n        variant=\"link\"\r\n        icon=\"dc_close\"\r\n        hide-label=\"true\"\r\n        id=\"close-icon\"\r\n        size=\"small\"\r\n        onClick={() => this.closeFlyout()}>\r\n        Close\r\n      </dc-ui-button>\r\n    );\r\n\r\n    return (\r\n      <div\r\n        data-nav-item-id={this.uuid}\r\n        class={{\r\n          'main-nav-item': true,\r\n          'is-active': this.isActive,\r\n        }}>\r\n        <button\r\n          onClick={() => this.toggleFlyout()}\r\n          class={{\r\n            'main-nav-item-trigger': true,\r\n            'is-active': this.isActive,\r\n          }}>\r\n          <span class=\"main-nav-item-title\">{this.title}</span>\r\n          <dc-ui-icon\r\n            name=\"dc_forward_right\"\r\n            size=\"tiny\"></dc-ui-icon>\r\n        </button>\r\n        <div class=\"main-nav-item-content\">\r\n          <div class=\"navigation-body\">\r\n            <dc-ui-header-nav-breadcrumb\r\n              ref={(el) => (this.breadcrumbElement = el)}></dc-ui-header-nav-breadcrumb>\r\n            {closeButton}\r\n            <div class=\"navigation-rows-wrapper\">\r\n              <slot />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export type TBreakpointNames = 'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\r\nexport const breakpoints: { [key in TBreakpointNames]: number } = {\r\n  xxs: 0,\r\n  xs: 480,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n  xxl: 1920,\r\n};\r\n\r\ntype BPKey<K extends TBreakpointNames> = Extract<TBreakpointNames, K>;\r\n\r\nexport function mediaQueryMin(min: BPKey<'xxs'>): '@media(min-width:0px)';\r\nexport function mediaQueryMin(min: BPKey<'xs'>): `@media(min-width:480px)`;\r\nexport function mediaQueryMin(min: BPKey<'sm'>): '@media(min-width:576px)';\r\nexport function mediaQueryMin(min: BPKey<'md'>): '@media(min-width:768px)';\r\nexport function mediaQueryMin(min: BPKey<'lg'>): '@media(min-width:992px)';\r\nexport function mediaQueryMin(min: BPKey<'xl'>): '@media(min-width:1200px)';\r\nexport function mediaQueryMin(min: BPKey<'xxl'>): '@media(min-width:1920px)';\r\nexport function mediaQueryMin(min: TBreakpointNames): string {\r\n  return `@media(min-width:${breakpoints[min]}px)`;\r\n}\r\n\r\nexport function mediaQueryMax(max: BPKey<'xs'>): '@media(max-width:479px)';\r\nexport function mediaQueryMax(max: BPKey<'sm'>): '@media(max-width:575px)';\r\nexport function mediaQueryMax(max: BPKey<'md'>): '@media(max-width:767px)';\r\nexport function mediaQueryMax(max: BPKey<'lg'>): '@media(max-width:991px)';\r\nexport function mediaQueryMax(max: BPKey<'xl'>): '@media(max-width:1199px)';\r\nexport function mediaQueryMax(max: BPKey<'xxl'>): '@media(max-width:1919px)';\r\nexport function mediaQueryMax(max: Exclude<TBreakpointNames, 'xxs'>): string {\r\n  return `@media(max-width:${breakpoints[max] - 1}px)`;\r\n}\r\n"],"names":["getCurrentBreakpoint","currentBreakpoint","width","window","innerWidth","breakpoints","xs","sm","md","lg","xl","xxl","isBreakpointEqualOrLarger","breakpoint","isBreakpointEqualOrSmaller","isBreakpointSmaller","DcUiHeaderMainNavItem","uuid","createUuid","handleWindowClick","event","this","isActive","el","contains","target","closeFlyout","handleKeyDown","key","handleBreadcrumbClick","index","detail","resetMenuContainerAndItems","toggleAllMenuContainersAfterLevel","toggleFlyout","closeOtherFlyouts","emit","sourceId","openFlyout","firstMenuContainer","querySelector","classList","add","breadcrumbElement","addItem","title","organizeMenuHierarchy","element","parentId","arguments","length","undefined","groupedContainers","level","children","Array","from","groupContainer","document","createElement","className","setAttribute","toString","appendChild","forEach","child","id","tagName","toLowerCase","hasAttribute","getAttribute","addEventListenersToMenuItems","querySelectorAll","menuItem","addEventListener","handleMenuItemClick","activeMenuContainers","navLevelNumber","Number","style","setProperty","removeAttribute","menuContainer","containerLevel","remove","removeAllItemsFrom","clickedMenuItem","textContent","menuContainerToToggle","currentNavLevel","_a","closest","navLevelToToggle","currentLevel","container","toggle","currentAndHigherLevelItems","filter","componentDidLoad","disconnectedCallback","parentElement","render","closeButton","h","autofocus","variant","icon","size","onClick","class","name","ref","xxs","mediaQueryMin","min","mediaQueryMax","max"],"sourceRoot":""}
{"ast":null,"code":"import { r as registerInstance, h, g as getElement } from './index-80864cdc.js';\nimport { g as getCss, m as mergeDeep, i as injectCSS } from './observeOptions-74693e66.js';\nimport { b as buildResponsiveStyles } from './breakpointCustom-9d1b1283.js';\nimport './mediaQuery-8afb3804.js';\nimport './text-styles-cd2dc550.js';\nconst createStyles = (inline, direction, wrap, gutter, alignContent, alignItems, justifyContent) => {\n  return getCss({\n    '@global': {\n      ':host': mergeDeep(buildResponsiveStyles(inline, inlineResponsive => ({\n        display: inlineResponsive ? 'inline-flex' : 'flex'\n      })), buildResponsiveStyles(direction, flexDirectionResponsive => ({\n        flexDirection: flexDirectionResponsive\n      })), buildResponsiveStyles(wrap, flexWrapResponsive => ({\n        flexWrap: flexWrapResponsive\n      })), buildResponsiveStyles(gutter, gutterResponsive => ({\n        gap: `${gutterResponsive}px`\n      })), buildResponsiveStyles(alignContent, alignContentResponsive => ({\n        alignContent: alignContentResponsive\n      })), buildResponsiveStyles(alignItems, alignItemsResponsive => ({\n        alignItems: alignItemsResponsive\n      })), buildResponsiveStyles(justifyContent, justifyContentResponsive => ({\n        justifyContent: justifyContentResponsive\n      })))\n    }\n  });\n};\nconst DcUiFlex = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.direction = 'row';\n    this.wrap = 'nowrap';\n    this.gutter = 0;\n    this.alignContent = 'stretch';\n    this.alignItems = 'stretch';\n    this.justifyContent = 'flex-start';\n    this.inline = false;\n  }\n  render() {\n    injectCSS(this.host, createStyles, this.inline, this.direction, this.wrap, this.gutter, this.alignContent, this.alignItems, this.justifyContent);\n    return h(\"slot\", {\n      key: '4cb59b442da31626d5a9aa1920ace5bd52a491bf'\n    });\n  }\n  get host() {\n    return getElement(this);\n  }\n};\nexport { DcUiFlex as dc_ui_flex };","map":{"version":3,"names":["createStyles","inline","direction","wrap","gutter","alignContent","alignItems","justifyContent","getCss","mergeDeep","buildResponsiveStyles","inlineResponsive","display","flexDirectionResponsive","flexDirection","flexWrapResponsive","flexWrap","gutterResponsive","gap","alignContentResponsive","alignItemsResponsive","justifyContentResponsive","DcUiFlex","render","injectCSS","host","h","key"],"sources":["C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_v1\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-flex\\flex-styles.ts","C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_v1\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-flex\\dc-ui-flex.tsx"],"sourcesContent":["import { getCss, buildResponsiveStyles, mergeDeep } from '../../utils';\r\nimport {\r\n  TFlexDirection,\r\n  FlexDirectionType,\r\n  TFlexWrap,\r\n  FlexWrapType,\r\n  TFlexGutterSize,\r\n  FlexGutterSizeType,\r\n  TFlexAlignContent,\r\n  TFlexAlignItem,\r\n  TFlexJustifyContent,\r\n  FlexAlignContentType,\r\n  FlexAlignItemType,\r\n  TFlexInline,\r\n  FlexInlineType,\r\n} from './flex-utils';\r\n\r\nexport const createStyles = (\r\n  inline: TFlexInline,\r\n  direction: TFlexDirection,\r\n  wrap: TFlexWrap,\r\n  gutter: TFlexGutterSize,\r\n  alignContent: TFlexAlignContent,\r\n  alignItems: TFlexAlignItem,\r\n  justifyContent: TFlexJustifyContent\r\n): string => {\r\n  return getCss({\r\n    '@global': {\r\n      ':host': mergeDeep(\r\n        buildResponsiveStyles(inline, (inlineResponsive: FlexInlineType) => ({\r\n          display: inlineResponsive ? 'inline-flex' : 'flex',\r\n        })),\r\n        buildResponsiveStyles(direction, (flexDirectionResponsive: FlexDirectionType) => ({\r\n          flexDirection: flexDirectionResponsive,\r\n        })),\r\n        buildResponsiveStyles(wrap, (flexWrapResponsive: FlexWrapType) => ({\r\n          flexWrap: flexWrapResponsive,\r\n        })),\r\n        buildResponsiveStyles(gutter, (gutterResponsive: FlexGutterSizeType) => ({\r\n          gap: `${gutterResponsive}px`,\r\n        })),\r\n        buildResponsiveStyles(alignContent, (alignContentResponsive: FlexAlignContentType) => ({\r\n          alignContent: alignContentResponsive,\r\n        })),\r\n        buildResponsiveStyles(alignItems, (alignItemsResponsive: FlexAlignItemType) => ({\r\n          alignItems: alignItemsResponsive,\r\n        })),\r\n        buildResponsiveStyles(justifyContent, (justifyContentResponsive: FlexAlignContentType) => ({\r\n          justifyContent: justifyContentResponsive,\r\n        }))\r\n      ),\r\n    },\r\n  });\r\n};\r\n","import { Component, Element, h, Prop } from '@stencil/core';\r\nimport { injectCSS } from '../../utils';\r\nimport { createStyles } from './flex-styles';\r\nimport {\r\n  TFlexAlignContent,\r\n  TFlexAlignItem,\r\n  TFlexDirection,\r\n  TFlexJustifyContent,\r\n  TFlexGutterSize,\r\n  TFlexWrap,\r\n  TFlexInline,\r\n} from './flex-utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-flex',\r\n  shadow: true,\r\n})\r\nexport class DcUiFlex {\r\n  /** Host element */\r\n  @Element() host!: HTMLElement;\r\n  /** Defines the direction of the main and cross axis */\r\n  @Prop() direction?: TFlexDirection = 'row';\r\n  /** Wrapping behavior of items */\r\n  @Prop() wrap?: TFlexWrap = 'nowrap';\r\n  /** Defines the gutter size */\r\n  @Prop() gutter?: TFlexGutterSize = 0;\r\n  /** This aligns a flex container's individual lines when there is extra space in the cross-axis, similar to how 'justifyContent' aligns individual items along the main axis. */\r\n  @Prop() alignContent?: TFlexAlignContent = 'stretch';\r\n  /** Defines how the flex items are aligned along the cross axis. */\r\n  @Prop() alignItems?: TFlexAlignItem = 'stretch';\r\n  /** Defines how the flex items are aligned along the main axis. */\r\n  @Prop() justifyContent?: TFlexJustifyContent = 'flex-start';\r\n  /** Defines the flex containers content flow if 2 or more containers are siblings of each other. */\r\n  @Prop() inline?: TFlexInline = false;\r\n\r\n  render() {\r\n    injectCSS(\r\n      this.host,\r\n      createStyles,\r\n      this.inline,\r\n      this.direction,\r\n      this.wrap,\r\n      this.gutter,\r\n      this.alignContent,\r\n      this.alignItems,\r\n      this.justifyContent\r\n    );\r\n\r\n    return <slot />;\r\n  }\r\n}\r\n"],"mappings":";;;;;AAiBO,MAAMA,YAAY,GAAGA,CAC1BC,MAAmB,EACnBC,SAAyB,EACzBC,IAAe,EACfC,MAAuB,EACvBC,YAA+B,EAC/BC,UAA0B,EAC1BC,cAAmC;EAEnC,OAAOC,MAAM,CAAC;IACZ,SAAS,EAAE;MACT,OAAO,EAAEC,SAAS,CAChBC,qBAAqB,CAACT,MAAM,EAAGU,gBAAgC,KAAM;QACnEC,OAAO,EAAED,gBAAgB,GAAG,aAAa,GAAG;OAC7C,CAAC,CAAC,EACHD,qBAAqB,CAACR,SAAS,EAAGW,uBAA0C,KAAM;QAChFC,aAAa,EAAED;OAChB,CAAC,CAAC,EACHH,qBAAqB,CAACP,IAAI,EAAGY,kBAAgC,KAAM;QACjEC,QAAQ,EAAED;OACX,CAAC,CAAC,EACHL,qBAAqB,CAACN,MAAM,EAAGa,gBAAoC,KAAM;QACvEC,GAAG,EAAE,GAAGD,gBAAgB;OACzB,CAAC,CAAC,EACHP,qBAAqB,CAACL,YAAY,EAAGc,sBAA4C,KAAM;QACrFd,YAAY,EAAEc;OACf,CAAC,CAAC,EACHT,qBAAqB,CAACJ,UAAU,EAAGc,oBAAuC,KAAM;QAC9Ed,UAAU,EAAEc;OACb,CAAC,CAAC,EACHV,qBAAqB,CAACH,cAAc,EAAGc,wBAA8C,KAAM;QACzFd,cAAc,EAAEc;OACjB,CAAC,CAAC;;GAGR,CAAC;AACJ,CAAC;MCpCYC,QAAQ;;;qBAIkB,KAAK;gBAEf,QAAQ;kBAEA,CAAC;wBAEO,SAAS;sBAEd,SAAS;0BAEA,YAAY;kBAE5B,KAAK;;EAEpCC,MAAMA,CAAA;IACJC,SAAS,CACP,IAAI,CAACC,IAAI,EACTzB,YAAY,EACZ,IAAI,CAACC,MAAM,EACX,IAAI,CAACC,SAAS,EACd,IAAI,CAACC,IAAI,EACT,IAAI,CAACC,MAAM,EACX,IAAI,CAACC,YAAY,EACjB,IAAI,CAACC,UAAU,EACf,IAAI,CAACC,cAAc,CACpB;IAED,OAAOmB,CAAA;MAAAC,GAAA;IAAA,EAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
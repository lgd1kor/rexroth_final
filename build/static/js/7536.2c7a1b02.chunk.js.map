{"version":3,"file":"static/js/7536.2c7a1b02.chunk.js","mappings":"yHAMO,MAqBMA,EAAoBA,CAACC,EAAiBC,KACjD,MAAM,MAAEC,EAAK,QAAEC,GAAYF,EACvBC,GAvBsB,SAACF,EAAiBI,GAA0C,IAAnBC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACpFN,EAAGS,aAAaL,EAAeC,EACjC,CAsBII,CAAaT,EAAI,aAAc,GAAGE,IAAQC,EAAU,KAAKA,IAAY,K,EAI5DO,EACXC,IAEA,GAAIA,EAAe,CACjB,MAAMC,EAtBoB,kBADQC,EAuBIF,GApBpCG,KAAKC,MACHF,EACGG,QAAQ,KAAM,KACdA,QAAQ,yBAA0B,UAGvCH,EAeII,EAAgBC,OAAOC,KAAKP,GAGlC,IAAK,MAAMQ,KAAOH,EACe,mBAApBL,EAAWQ,KACpBR,EAAWQ,GAAO,GAAGR,EAAWQ,MAIpC,OAAOR,C,CAjC2BC,K,kFCZ/B,MAAMQ,EAAgB,CAAC,UAAW,aCO5BC,EAAQ,M,+BAenB,KAAAC,kBAAmB,E,gCAZU,E,eACA,E,sEAIF,E,UACA,S,YACD,Q,aACO,U,iBACF,E,WACiB,O,CAKhDC,eAAAA,CAAgBC,GACd,IAAKJ,EAAcK,SAASD,GAE1B,MADAE,KAAKJ,kBAAmB,EAClB,IAAIK,MAAM,oBAAoBH,I,CAKxCI,YAAAA,GACOF,KAAKG,MAAsB,KAAdH,KAAKG,OACrBH,KAAKI,UAAW,E,CAIpBC,iBAAAA,GACEL,KAAKE,eACLF,KAAKH,gBAAgBG,KAAKF,Q,CAG5BQ,MAAAA,G,QACE,MAAMC,EAAiBP,KAAKI,SAAiC,CAAC,EAAvB,CAAED,KAAMH,KAAKG,MAC9CK,EAAoBR,KAAKS,SAAW,CAAEA,SAAU,IAAO,CAAC,EACxDC,EAAoBV,KAAKI,SAAW,CAAEO,aAAcX,KAAKI,SAAUQ,KAAM,QAAW,CAAC,EAE3F,GAAIZ,KAAKJ,iBACP,OACEiB,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAArB,IAAA,2CACHsB,MAAO,iBACHf,KAAKgB,OAAS,SAAW,mBAE7BH,EAAAA,EAAAA,GAAA,IAAAtB,OAAA0B,OAAA,CAAAxB,IAAA,4CACMc,EACAC,EACAE,GACA3B,EAAAA,EAAAA,GAA0BiB,KAAKkB,MAAK,CACxCH,MAAO,yDAESf,KAAKF,sCACLE,KAAKmB,uBACjBnB,KAAKoB,WAAa,yBAA2B,qBAC7CpB,KAAKI,SAAW,WAAa,mBAEjCiB,OAAQrB,KAAKqB,UACH,QAATC,EAAAtB,KAAKuB,YAAI,IAAAD,OAAA,EAAAA,EAAE1C,UAAyB,QAAf4C,EAAAxB,KAAKyB,kBAAU,IAAAD,OAAA,EAAAA,EAAE5C,SACrCiC,EAAAA,EAAAA,GAAA,cACEa,KAAM1B,KAAKuB,KACXI,OAAQ3B,KAAKyB,WACbN,KAAoB,WAAdnB,KAAKmB,KAAoB,SAAW,SAC1C,MACJN,EAAAA,EAAAA,GAAA,cAAApB,IAAA,2CACEK,QAAS,QAAQE,KAAKmB,OACtBS,MAAM,YACNf,EAAAA,EAAAA,GAAA,QAAApB,IAAA,+C,0HChFM,o3F","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/a11y.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-link/link-utils.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-link/dc-ui-link.tsx","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-link/dc-ui-link.scss?tag=dc-ui-link&encapsulation=shadow"],"sourcesContent":["import { AriaAttributes } from '../types';\r\n\r\nexport const removeAttribute = (el: HTMLElement, attributeName: string): void => {\r\n  el.removeAttribute(attributeName);\r\n};\r\n\r\nexport const setAttribute = (el: HTMLElement, attributeName: string, attributeValue = ''): void => {\r\n  el.setAttribute(attributeName, attributeValue);\r\n};\r\n\r\nexport type SetAriaAttributesOptions = {\r\n  label?: string;\r\n  message?: string;\r\n};\r\n\r\nexport const parseJSONAttribute = <T>(attribute: T | string): T => {\r\n  return typeof attribute === 'string'\r\n    ? // input is potentially JSON parsable string, e.g. \"{ aria-label: 'Some label' }\"\r\n      JSON.parse(\r\n        attribute\r\n          .replace(/'/g, '\"') // convert single quotes to double quotes\r\n          .replace(/[\\s\"]?([\\w-]+)[\\s\"]?:/g, '\"$1\":') // wrap keys in double quotes\r\n      )\r\n    : // input is object, e.g. { aria-label: 'Some label' }\r\n      attribute;\r\n};\r\n\r\nexport const setAriaAttributes = (el: HTMLElement, opts: SetAriaAttributesOptions): void => {\r\n  const { label, message } = opts;\r\n  if (label) {\r\n    setAttribute(el, 'aria-label', `${label}${message ? `. ${message}` : ''}`);\r\n  }\r\n};\r\n\r\nexport const parseAndGetAriaAttributes = (\r\n  rawAttributes: AriaAttributes | string\r\n): AriaAttributes => {\r\n  if (rawAttributes) {\r\n    const attributes = parseJSONAttribute(rawAttributes);\r\n    const attributeKeys = Object.keys(attributes);\r\n\r\n    // convert booleans to strings so that values are properly set and not just result in attributes without a value when true in jsx\r\n    for (const key of attributeKeys) {\r\n      if (typeof attributes[key] === 'boolean') {\r\n        attributes[key] = `${attributes[key]}`;\r\n      }\r\n    }\r\n\r\n    return attributes;\r\n  }\r\n};\r\n","export const LINK_SIZES = ['small', 'normal'] as const;\r\nexport type TLinkSize = typeof LINK_SIZES[number];\r\n\r\nexport const LINK_VARIANTS = ['primary', 'secondary'] as const;\r\nexport type TLinkVariant = typeof LINK_VARIANTS[number];\r\n\r\nexport const LINK_ARIA_ATTRIBUTES = ['aria-label'] as const;\r\nexport type TLinkAriaAttribute = typeof LINK_ARIA_ATTRIBUTES[number];\r\n","import { Component, Element, Host, Prop, h, Watch } from '@stencil/core';\r\nimport { SelectedAriaAttributes, TThemeColors, parseAndGetAriaAttributes } from '../../utils';\r\nimport { TLinkAriaAttribute, TLinkSize, TLinkVariant, LINK_VARIANTS } from './link-utils';\r\nimport { TIcon } from '../../svg/icons';\r\n\r\n@Component({\r\n  tag: 'dc-ui-link',\r\n  styleUrl: 'dc-ui-link.scss',\r\n  shadow: true,\r\n})\r\nexport class DcUiLink {\r\n  @Element() host: HTMLElement;\r\n  @Prop() aria?: SelectedAriaAttributes<TLinkAriaAttribute>;\r\n  @Prop() disabled?: boolean = false;\r\n  @Prop() download?: boolean = false;\r\n  @Prop() href: string;\r\n  @Prop() icon?: TIcon;\r\n  @Prop() iconSource?: string;\r\n  @Prop() inline?: boolean = true;\r\n  @Prop() size?: TLinkSize = 'normal';\r\n  @Prop() target?: string = '_self';\r\n  @Prop() variant?: TLinkVariant = 'primary';\r\n  @Prop() underlined?: boolean = false;\r\n  @Prop({ reflect: true }) theme?: TThemeColors = 'light';\r\n\r\n  isComponentValid = true;\r\n\r\n  @Watch('variant')\r\n  validateVariant(variant: TLinkVariant) {\r\n    if (!LINK_VARIANTS.includes(variant)) {\r\n      this.isComponentValid = false;\r\n      throw new Error(`Invalid variant: ${variant}`);\r\n    }\r\n  }\r\n\r\n  @Watch('href')\r\n  checkForHref() {\r\n    if (!this.href || this.href === '') {\r\n      this.disabled = true;\r\n    }\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.checkForHref();\r\n    this.validateVariant(this.variant);\r\n  }\r\n\r\n  render() {\r\n    const hrefAttribute = !this.disabled ? { href: this.href } : {};\r\n    const downloadAttribute = this.download ? { download: '' } : {};\r\n    const disabledAttribute = this.disabled ? { ariaDisabled: this.disabled, role: 'link' } : {};\r\n\r\n    if (this.isComponentValid) {\r\n      return (\r\n        <Host\r\n          class={`\r\n            ${this.inline ? 'inline' : ''}\r\n          `}>\r\n          <a\r\n            {...hrefAttribute}\r\n            {...downloadAttribute}\r\n            {...disabledAttribute}\r\n            {...parseAndGetAriaAttributes(this.aria)}\r\n            class={`\r\n              dc-ui-link\r\n              dc-ui-link--${this.variant}\r\n              dc-ui-link--${this.size}\r\n              ${this.underlined ? 'dc-ui-link--underlined' : ''}\r\n              ${this.disabled ? 'disabled' : ''}\r\n            `}\r\n            target={this.target}>\r\n            {this.icon?.length || this.iconSource?.length ? (\r\n              <dc-ui-icon\r\n                name={this.icon}\r\n                source={this.iconSource}\r\n                size={this.size === 'normal' ? 'medium' : 'tiny'}></dc-ui-icon>\r\n            ) : null}\r\n            <dc-ui-text\r\n              variant={`link-${this.size}`}\r\n              color=\"inherit\">\r\n              <slot />\r\n            </dc-ui-text>\r\n          </a>\r\n        </Host>\r\n      );\r\n    }\r\n  }\r\n}\r\n",":host {\r\n  --dc-ui-link-animation-duration: 0.35s;\r\n  --dc-ui-link-focus-color: #{$color-turquoise-03};\r\n  --dc-ui-link-focus-color-inset: #{$color-white};\r\n\r\n  --dc-ui-link-primary-active: #{$color-turquoise-06};\r\n  --dc-ui-link-primary-color: #{$color-turquoise-04};\r\n  --dc-ui-link-primary-focus: #{$color-turquoise-04};\r\n  --dc-ui-link-primary-hover: #{$color-turquoise-05};\r\n  --dc-ui-link-primary-disabled: #{$color-grey-03};\r\n\r\n  --dc-ui-link-secondary-active: #{$color-grey-10};\r\n  --dc-ui-link-secondary-color: #{$color-grey-06};\r\n  --dc-ui-link-secondary-focus: #{$color-grey-06};\r\n  --dc-ui-link-secondary-hover: #{$color-grey-08};\r\n  --dc-ui-link-secondary-disabled: #{$color-grey-03};\r\n\r\n  @media screen and (prefers-reduced-motion: reduce) {\r\n    --dc-ui-link-animation-duration: 0s;\r\n  }\r\n\r\n  display: flex;\r\n  width: auto;\r\n}\r\n\r\n:host(.inline) {\r\n  display: inline-block;\r\n}\r\n\r\n:host([theme='dark']) {\r\n  --dc-ui-link-primary-active: #{$color-turquoise-06};\r\n  --dc-ui-link-primary-color: #{$color-turquoise-04};\r\n\r\n  // primary link\r\n  --dc-ui-link-primary-color: #{$color-turquoise-01};\r\n  --dc-ui-link-primary-hover: #{$color-white};\r\n  --dc-ui-link-primary-focus: #{$color-turquoise-01};\r\n  --dc-ui-link-primary-active: #{$color-white};\r\n  --dc-ui-link-primary-disabled: #{$color-grey-07};\r\n\r\n  // secondary link\r\n  --dc-ui-link-secondary-color: #{$color-dark-blue-01};\r\n  --dc-ui-link-secondary-hover: #{$color-white};\r\n  --dc-ui-link-secondary-focus: #{$color-dark-blue-01};\r\n  --dc-ui-link-secondary-active: #{$color-white};\r\n  --dc-ui-link-secondary-disabled: #{$color-grey-07};\r\n}\r\n\r\n.dc-ui-link {\r\n  background-color: transparent;\r\n  display: inline-flex;\r\n  line-height: inherit;\r\n  text-decoration: none;\r\n  position: relative;\r\n  vertical-align: bottom;\r\n\r\n  &:focus-visible {\r\n    outline: none;\r\n\r\n    &:before {\r\n      content: '';\r\n      position: absolute;\r\n      inset: -1px;\r\n      border: 1px solid var(--dc-ui-link-focus-color);\r\n      z-index: 1;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    &:not(.disabled):not([disabled]) {\r\n      transition: color var(--dc-ui-link-animation-duration);\r\n\r\n      dc-ui-text {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n  }\r\n\r\n  &--primary {\r\n    color: var(--dc-ui-link-primary-color);\r\n\r\n    &:active {\r\n      &:not(.disabled):not([disabled]) {\r\n        color: var(--dc-ui-link-primary-active);\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      &:not(.disabled):not([disabled]) {\r\n        color: var(--dc-ui-link-primary-hover);\r\n      }\r\n    }\r\n\r\n    &.disabled,\r\n    &[disabled] {\r\n      cursor: not-allowed;\r\n      color: var(--dc-ui-link-primary-disabled);\r\n    }\r\n  }\r\n\r\n  &--secondary {\r\n    color: var(--dc-ui-link-secondary-color);\r\n\r\n    &:active {\r\n      &:not(.disabled):not([disabled]) {\r\n        color: var(--dc-ui-link-secondary-active);\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      &:not(.disabled):not([disabled]) {\r\n        color: var(--dc-ui-link-secondary-hover);\r\n      }\r\n    }\r\n\r\n    &.disabled,\r\n    &[disabled] {\r\n      cursor: not-allowed;\r\n      color: var(--dc-ui-link-secondary-disabled);\r\n    }\r\n  }\r\n\r\n  &--small {\r\n    dc-ui-icon {\r\n      margin-right: 0.625rem;\r\n    }\r\n  }\r\n\r\n  &--normal {\r\n    dc-ui-icon {\r\n      margin-right: 8px;\r\n    }\r\n  }\r\n\r\n  &--underlined {\r\n    dc-ui-text {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n"],"names":["setAriaAttributes","el","opts","label","message","attributeName","attributeValue","arguments","length","undefined","setAttribute","parseAndGetAriaAttributes","rawAttributes","attributes","attribute","JSON","parse","replace","attributeKeys","Object","keys","key","LINK_VARIANTS","DcUiLink","isComponentValid","validateVariant","variant","includes","this","Error","checkForHref","href","disabled","componentWillLoad","render","hrefAttribute","downloadAttribute","download","disabledAttribute","ariaDisabled","role","h","Host","class","inline","assign","aria","size","underlined","target","_a","icon","_b","iconSource","name","source","color"],"sourceRoot":""}
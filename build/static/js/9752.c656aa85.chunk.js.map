{"version":3,"file":"static/js/9752.c656aa85.chunk.js","mappings":"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","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/variables/color.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-accordion/accordion-styles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-accordion/dc-ui-accordion.tsx"],"sourcesContent":["export const color = {\r\n  focusColor: '#009cc2',\r\n\r\n  redBrand01: '#ed0007',\r\n  redBrand02: '#d50005',\r\n  redBrand03: '#a80003',\r\n\r\n  turquoise01: '#00c8f7',\r\n  turquoise02: '#00b9e5',\r\n  turquoise03: '#009cc2',\r\n  turquoise04: '#00738f',\r\n  turquoise05: '#004d61',\r\n  turquoise06: '#002936',\r\n\r\n  grey01: '#edf1f4',\r\n  grey02: '#cad6dd',\r\n  grey03: '#a3bac8',\r\n  grey04: '#99aebb',\r\n  grey05: '#7995a6',\r\n  grey06: '#506e81',\r\n  grey07: '#476273',\r\n  grey08: '#354956',\r\n  grey09: '#2d3e48',\r\n  grey10: '#1c272e',\r\n\r\n  green01: '#d9e8d0',\r\n  green02: '#528236',\r\n  green03: '#1a2a11',\r\n\r\n  yellow01: '#f9f3bc',\r\n  yellow02: '#ebd417',\r\n  yellow03: '#2a2604',\r\n\r\n  red01: '#f7bfc8',\r\n  red02: '#da1e28',\r\n  red03: '#54000e',\r\n\r\n  orange01: '#FBE8DA',\r\n  orange02: '#DC641E',\r\n\r\n  darkBlue01: '#d1dce3',\r\n  darkBlue02: '#002b49',\r\n  darkBlue03: '#00243e',\r\n\r\n  white: '#ffffff',\r\n  black: '#000000',\r\n};\r\n\r\nexport type TColor = keyof typeof color;\r\nexport type TBGColor = 'grey01' | 'turquoise01' | 'darkBlue02';\r\n","import { getCss, color as colorUtils } from '../../utils';\r\n\r\nexport const createStyles = (open: boolean): string => {\r\n  return getCss({\r\n    '@global': {\r\n      ':host': {\r\n        display: 'block',\r\n        boxSizing: 'border-box',\r\n      },\r\n      '.accordion__heading': {\r\n        color: colorUtils.darkBlue02,\r\n        padding: 0,\r\n        margin: 0,\r\n        backgroundColor: colorUtils.white,\r\n\r\n        '&--disabled': {\r\n          color: colorUtils.grey03,\r\n        },\r\n\r\n        '&:not(.accordion__heading--disabled):not(.accordion__heading--list):hover': {\r\n          backgroundColor: colorUtils.grey01,\r\n        },\r\n      },\r\n      '.accordion__button': {\r\n        appearance: 'none',\r\n        WebkitAppearance: 'none',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        padding: '20px 16px',\r\n        border: 'none',\r\n        borderTop: `1px solid ${colorUtils.grey03}`,\r\n        background: 'none',\r\n        cursor: 'pointer',\r\n        color: 'inherit',\r\n        outline: '2px solid transparent',\r\n        outlineOffset: '-2px',\r\n\r\n        '&--last': {\r\n          borderBottom: `1px solid ${colorUtils.grey03}`,\r\n        },\r\n\r\n        '&--list': {\r\n          padding: '8px',\r\n          borderTop: 'none',\r\n        },\r\n\r\n        '&:disabled': {\r\n          cursor: 'not-allowed',\r\n        },\r\n\r\n        '&:focus': {\r\n          outlineColor: colorUtils.turquoise03,\r\n        },\r\n      },\r\n      'dc-ui-icon': {\r\n        transition: 'rotate 0.3s ease-in-out',\r\n        rotate: open ? 'x 180deg' : '0deg',\r\n      },\r\n      '.accordion__icon': {\r\n        '&--hidden': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.accordion__content': {\r\n        display: 'none',\r\n        padding: '8px 16px 64px',\r\n        backgroundColor: colorUtils.white,\r\n\r\n        '&--list': {\r\n          borderTop: `1px solid ${colorUtils.grey03}`,\r\n          padding: '15px 8px',\r\n        },\r\n\r\n        '&--open': {\r\n          display: 'block',\r\n        },\r\n      },\r\n    },\r\n  });\r\n};\r\n","import { Component, Element, Event, EventEmitter, h, Host, Method, Prop } from '@stencil/core';\r\nimport { injectCSS } from '../../utils';\r\nimport { createStyles } from './accordion-styles';\r\nimport { TAccordionChangeEvent, TAccordionHeading, TAccordionVariant } from './accordion-utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-accordion',\r\n  shadow: true,\r\n})\r\nexport class DcUiAccordion {\r\n  @Element() el: HTMLElement;\r\n  @Prop() title: string; // TODO: use different prop name, hence title is already used by HTML\r\n  @Prop() label: string;\r\n  @Prop() heading: TAccordionHeading = 'h2';\r\n  @Prop({ reflect: true }) variant: TAccordionVariant = 'default';\r\n  @Prop() disabled = false;\r\n  @Prop() public open: boolean;\r\n  /** Emitted when accordion state is changed. */\r\n  @Event({ bubbles: false }) public accordionChange: EventEmitter<TAccordionChangeEvent>;\r\n\r\n  @Method() async toggle(): Promise<boolean> {\r\n    this.accordionChange.emit({ open: !this.open });\r\n    this.open = !this.open;\r\n    return this.open;\r\n  }\r\n\r\n  private isLastChild = false;\r\n\r\n  componentWillLoad() {\r\n    // check if next sibling is dc-ui-accordion\r\n    this.isLastChild = this.el.nextElementSibling?.tagName !== 'DC-UI-ACCORDION';\r\n  }\r\n\r\n  private onButtonClick = (): void => {\r\n    this.accordionChange.emit({ open: !this.open });\r\n    this.open = !this.open;\r\n  };\r\n\r\n  render() {\r\n    injectCSS(this.el, createStyles, this.open);\r\n\r\n    const Heading = this.heading;\r\n    const buttonId = 'accordion-control';\r\n    const contentId = 'accordion-panel';\r\n\r\n    const iconVariantDefault = (\r\n      <dc-ui-icon\r\n        aria-hidden=\"true\"\r\n        name=\"dc_down\"></dc-ui-icon>\r\n    );\r\n\r\n    const iconVariantList = (\r\n      <div>\r\n        <dc-ui-icon\r\n          aria-hidden=\"true\"\r\n          size=\"tiny\"\r\n          class={{\r\n            'accordion__icon--hidden': this.open,\r\n          }}\r\n          name=\"dc_add\"></dc-ui-icon>\r\n        <dc-ui-icon\r\n          aria-hidden=\"true\"\r\n          size=\"tiny\"\r\n          class={{\r\n            'accordion__icon--hidden': !this.open,\r\n          }}\r\n          name=\"dc_less_minimize\"></dc-ui-icon>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Host>\r\n        <Heading\r\n          class={{\r\n            accordion__heading: true,\r\n            'accordion__heading--disabled': this.disabled,\r\n            'accordion__heading--list': this.variant === 'list',\r\n          }}>\r\n          <button\r\n            class={{\r\n              accordion__button: true,\r\n              'accordion__button--list': this.variant === 'list',\r\n              'accordion__button--last': this.isLastChild && this.variant !== 'list',\r\n            }}\r\n            id={buttonId}\r\n            type=\"button\"\r\n            {...(this.disabled && { disabled: true })}\r\n            aria-expanded={this.open ? 'true' : 'false'}\r\n            aria-controls={contentId}\r\n            onClick={this.onButtonClick}>\r\n            <dc-ui-text\r\n              color=\"inherit\"\r\n              variant={this.variant === 'default' ? 'h4' : 'mid-size-text'}>\r\n              {this.label || this.title}\r\n            </dc-ui-text>\r\n            {this.variant === 'default' ? iconVariantDefault : iconVariantList}\r\n          </button>\r\n        </Heading>\r\n        <div\r\n          id={contentId}\r\n          role=\"region\"\r\n          aria-labelledby={buttonId}\r\n          class={{\r\n            accordion__content: true,\r\n            'accordion__content--open': this.open,\r\n            'accordion__content--list': this.variant === 'list',\r\n          }}>\r\n          <slot />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"names":["color","focusColor","redBrand01","redBrand02","redBrand03","turquoise01","turquoise02","turquoise03","turquoise04","turquoise05","turquoise06","grey01","grey02","grey03","grey04","grey05","grey06","grey07","grey08","grey09","grey10","green01","green02","green03","yellow01","yellow02","yellow03","red01","red02","red03","orange01","orange02","darkBlue01","darkBlue02","darkBlue03","white","black","createStyles","open","getCss","display","boxSizing","padding","margin","backgroundColor","appearance","WebkitAppearance","justifyContent","alignItems","width","border","borderTop","background","cursor","outline","outlineOffset","borderBottom","outlineColor","transition","rotate","DcUiAccordion","isLastChild","onButtonClick","this","accordionChange","emit","toggle","componentWillLoad","_a","el","nextElementSibling","tagName","render","injectCSS","Heading","heading","buttonId","contentId","iconVariantDefault","h","key","name","iconVariantList","size","class","Host","accordion__heading","disabled","variant","Object","assign","accordion__button","id","type","onClick","label","title","role","accordion__content"],"sourceRoot":""}
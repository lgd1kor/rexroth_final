{"version":3,"file":"static/js/328.b2e30392.chunk.js","mappings":"gKAGO,MAAMA,EAAeA,CAC1BC,EACAC,EACAC,KAEeC,EAAAA,EAAAA,GAAO,CACpB,UAAW,CACT,QAAS,CACPC,WAAY,cAGd,SAAQC,OAAAC,OAAA,CACNC,YAAa,SACbC,WAAYP,EAAS,IAAM,EAC3BQ,UAAWR,EAAS,MAAQ,EAC5BS,aAAc,GAEQ,SAAlBR,EACA,CACEK,YAAa,KAEf,CAAC,GAGPI,GAAI,CACFT,cAAe,UAGjBU,GAAEP,OAAAC,OAAA,GACsB,mBAAlBN,EACA,CACEE,cAAe,eAEjB,CAAC,MC3BAW,EAAQ,M,6CAEW,K,mBACU,K,mBACA,U,aACvB,C,CAEjBC,iBAAAA,IACEC,EAAAA,EAAAA,KAEA,MAAMC,EAASC,KAAKC,GAAGC,cAAcC,QAAQ,cAC9B,OAAXJ,GACFC,KAAKhB,QAAS,EACQ,OAAlBgB,KAAKI,WACPJ,KAAKI,SAAWL,EAAOK,UAEE,OAAvBJ,KAAKjB,gBACPiB,KAAKjB,cAAgBiB,KAAKK,sBAAsBN,EAAOhB,kBAGnC,OAAlBiB,KAAKI,WACPJ,KAAKI,SAAW,aAES,OAAvBJ,KAAKjB,gBACPiB,KAAKjB,cAAgB,Y,CAK3BsB,qBAAAA,CAAsBtB,GACpB,MAAyB,aAAlBA,EAA+B,iBAAmB,U,CAG3DuB,MAAAA,GACE,MAAMC,EAAwB,cAAlBP,KAAKI,SAA2B,KAAO,KAInD,OAFAI,EAAAA,EAAAA,GAAUR,KAAKC,GAAInB,EAAckB,KAAKjB,cAAeiB,KAAKhB,OAAQgB,KAAKf,gBAGrEwB,EAAAA,EAAAA,GAACF,EAAG,CAAAG,IAAA,6CACFD,EAAAA,EAAAA,GAAA,QAAAC,IAAA,6C,iECjDD,MAAMC,EAAO,CAClBC,IAAK,0DACLC,OAAQ,aACRC,KAAM,CACJC,MAAO,OACPC,OAAQ,SACRC,MAAO,S,SAKKnB,IAId,GACEoB,SAASC,cAAc,cAAcR,EAAKC,UAC1CM,SAASC,cAAc,4CAEvB,OAGF,MAAMC,EAAOF,SAASG,cAAc,QACpCD,EAAKE,IAAM,aACXF,EAAKG,KAAOZ,EAAKC,IACjBM,SAASM,KAAKC,YAAYL,EAC5B,C","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-list/list-styles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-list/dc-ui-list.tsx","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/font.ts"],"sourcesContent":["import { getCss } from '../../utils';\r\nimport { TListOrderType, TListStyleType } from './list-utils';\r\n\r\nexport const createStyles = (\r\n  listOrderType: TListOrderType,\r\n  nested: boolean,\r\n  listStyleType: TListStyleType\r\n): string => {\r\n  const styles = getCss({\r\n    '@global': {\r\n      ':host': {\r\n        fontFamily: 'Bosch Sans',\r\n      },\r\n\r\n      'ul, ol': {\r\n        paddingLeft: '1.25em',\r\n        marginLeft: nested ? '0' : 0,\r\n        marginTop: nested ? '4px' : 0,\r\n        marginBottom: 0,\r\n\r\n        ...(listStyleType === 'none'\r\n          ? {\r\n              paddingLeft: '0',\r\n            }\r\n          : {}),\r\n      },\r\n\r\n      ul: {\r\n        listStyleType: 'square',\r\n      },\r\n\r\n      ol: {\r\n        ...(listOrderType === 'alphabetically'\r\n          ? {\r\n              listStyleType: 'lower-alpha',\r\n            }\r\n          : {}),\r\n      },\r\n    },\r\n  });\r\n\r\n  return styles;\r\n};\r\n","import { Component, Element, h, Prop } from '@stencil/core';\r\nimport { TListOrderType, TListType, TListStyleType } from './list-utils';\r\nimport { injectCSS, injectFont } from '../../utils';\r\nimport { createStyles } from './list-styles';\r\n\r\n@Component({\r\n  tag: 'dc-ui-list',\r\n  shadow: true,\r\n})\r\nexport class DcUiList {\r\n  @Element() el: HTMLElement;\r\n  @Prop() listType: TListType = null;\r\n  @Prop() listOrderType: TListOrderType = null;\r\n  @Prop() listStyleType: TListStyleType = 'default';\r\n  @Prop() nested = false;\r\n\r\n  componentWillLoad() {\r\n    injectFont();\r\n\r\n    const parent = this.el.parentElement.closest('dc-ui-list');\r\n    if (parent !== null) {\r\n      this.nested = true;\r\n      if (this.listType === null) {\r\n        this.listType = parent.listType;\r\n      }\r\n      if (this.listOrderType === null) {\r\n        this.listOrderType = this.oppositeListOrderType(parent.listOrderType);\r\n      }\r\n    } else {\r\n      if (this.listType === null) {\r\n        this.listType = 'unordered';\r\n      }\r\n      if (this.listOrderType === null) {\r\n        this.listOrderType = 'numbered';\r\n      }\r\n    }\r\n  }\r\n\r\n  oppositeListOrderType(listOrderType) {\r\n    return listOrderType === 'numbered' ? 'alphabetically' : 'numbered';\r\n  }\r\n\r\n  render() {\r\n    const Tag = this.listType === 'unordered' ? 'ul' : 'ol';\r\n\r\n    injectCSS(this.el, createStyles, this.listOrderType, this.nested, this.listStyleType);\r\n\r\n    return (\r\n      <Tag>\r\n        <slot></slot>\r\n      </Tag>\r\n    );\r\n  }\r\n}\r\n","export const font = {\r\n  url: 'https://dc-webtoolkit.azureedge.net/font/fontStyles.css',\r\n  family: 'Bosch Sans',\r\n  size: {\r\n    small: '1rem',\r\n    medium: '1.5rem',\r\n    large: '2rem',\r\n  },\r\n};\r\n\r\n// inject font into the document\r\nexport function injectFont() {\r\n  // console.log('injectFont -- disabled');\r\n\r\n  // check if the font is already injected\r\n  if (\r\n    document.querySelector(`link[href=\"${font.url}\"]`) ||\r\n    document.querySelector(`link[href*=\"nextgen-web-ui-toolkit.css\"]`)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  const link = document.createElement('link');\r\n  link.rel = 'stylesheet';\r\n  link.href = font.url;\r\n  document.head.appendChild(link);\r\n}\r\n"],"names":["createStyles","listOrderType","nested","listStyleType","getCss","fontFamily","Object","assign","paddingLeft","marginLeft","marginTop","marginBottom","ul","ol","DcUiList","componentWillLoad","injectFont","parent","this","el","parentElement","closest","listType","oppositeListOrderType","render","Tag","injectCSS","h","key","font","url","family","size","small","medium","large","document","querySelector","link","createElement","rel","href","head","appendChild"],"sourceRoot":""}
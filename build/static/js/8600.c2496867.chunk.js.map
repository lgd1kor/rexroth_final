{"version":3,"file":"static/js/8600.c2496867.chunk.js","mappings":"gJAAA,MCQaA,EAAU,M,iOAmCb,KAAAC,eAAiB,KACvBC,KAAKC,SAAU,CAAK,EAGd,KAAAC,aAAgBC,IACtB,MAAMC,EAAaD,EAAME,OAA4BJ,QACrDD,KAAKM,SAASC,KAAK,CAAEN,QAASG,IAC9BJ,KAAKQ,aAAaJ,EAAU,EAGtB,KAAAI,aAAgBP,I,MACtB,MAAMQ,EAAQR,EAAU,UAAOS,EAIjB,QAAdC,EAAAX,KAAKY,iBAAS,IAAAD,GAAAA,EAAEH,aAAaC,EAAO,GAAGT,KAAKC,UAAU,E,cAjD7B,E,eACC,E,gBACC,E,WACL,G,UACD,E,CAQvBY,iBAAAA,GACEb,KAAKc,iBAAmBd,KAAKC,O,CAG/Bc,kBAAAA,GACMf,KAAKC,UAAYD,KAAKc,mBACxBd,KAAKM,SAASC,KAAK,CAAEN,QAASD,KAAKC,UACnCD,KAAKc,iBAAmBd,KAAKC,Q,CAIjCe,sBAAAA,GACEhB,KAAKQ,aAAaR,KAAKC,Q,CAGzBgB,iBAAAA,GACEjB,KAAKD,iBAELC,KAAKY,UAAUJ,kBAAaE,GAC5BV,KAAKY,UAAUM,YAAY,CAAC,E,CAqB9BC,MAAAA,GACE,MAAMC,EAAYpB,KAAKqB,QAAUrB,KAAKsB,UAChCC,GAAaH,GAAapB,KAAKqB,MAAQrB,KAAKqB,MAAQ,KAE1D,OACEG,EAAAA,EAAAA,GAAA,SAAAC,IAAA,2CAAOC,MAAM,aACVN,IAAaI,EAAAA,EAAAA,GAAA,QAAAC,IAAA,2CAAMC,MAAM,mBAAmB1B,KAAKqB,QAClDG,EAAAA,EAAAA,GAAA,SAAAC,IAAA,2CACEE,KAAK,WACL1B,QAASD,KAAKC,QACd2B,SAAU5B,KAAK4B,SACfC,SAAU7B,KAAKE,aACf4B,KAAM9B,KAAK8B,KAAI,aACHP,KAEdC,EAAAA,EAAAA,GAAA,QAAAC,IAAA,2CAAMC,MAAM,qBACVF,EAAAA,EAAAA,GAAA,cAAAC,IAAA,2CACEM,MAAM,UACNC,GAAG,UACHC,KAAK,OACLH,KAAK,kBACPN,EAAAA,EAAAA,GAAA,cAAAC,IAAA,2CACEO,GAAG,WACHD,MAAM,UACNE,KAAK,OACLH,KAAK,c,gDDtFK,y7F","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-switch/dc-ui-switch.scss?tag=dc-ui-switch&encapsulation=shadow","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-switch/dc-ui-switch.tsx"],"sourcesContent":[":host {\r\n  --switch-icon-color-on: #{$color-white};\r\n  --switch-icon-color-off: #{$color-white};\r\n\r\n  --switch-enabled-background-on: #{$color-green-02};\r\n  --switch-enabled-background-off: #{$color-grey-05};\r\n\r\n  --switch-hover-background-on: #42682b;\r\n  --switch-hover-background-off: #{$color-grey-06};\r\n\r\n  --switch-disabled-background-on: #{$color-green-01};\r\n  --switch-disabled-background-off: #{$color-grey-02};\r\n\r\n  --switch-disabled-icon-color-on: #b9ccae;\r\n  --switch-disabled-icon-color-off: #{$color-grey-03};\r\n}\r\n\r\n:host {\r\n  display: inline-block;\r\n}\r\n\r\n.dc-switch {\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n\r\n  input {\r\n    position: absolute;\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  &-slider {\r\n    position: relative;\r\n    width: 48px;\r\n    height: 24px;\r\n    cursor: pointer;\r\n    background-color: var(--switch-enabled-background-off);\r\n    transition: background-color 0.4s;\r\n    border-radius: 34px;\r\n\r\n    &:before {\r\n      position: absolute;\r\n      content: '';\r\n      height: 18px;\r\n      width: 18px;\r\n      left: 3px;\r\n      bottom: 3px;\r\n      background-color: var(--switch-icon-color-off);\r\n      transition: 0.4s;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    #on-icon,\r\n    #off-icon {\r\n      fill: var(--switch-icon-color-off);\r\n      position: absolute;\r\n      top: 50%;\r\n      transition:\r\n        opacity 0.4s,\r\n        transform 0.4s;\r\n    }\r\n\r\n    #on-icon {\r\n      left: 6px;\r\n      opacity: 0;\r\n      transform: translate(-2px, -50%);\r\n    }\r\n\r\n    #off-icon {\r\n      right: 6px;\r\n      opacity: 1;\r\n      transform: translate(0, -50%);\r\n    }\r\n\r\n    &:hover {\r\n      background-color: var(--switch-hover-background-off);\r\n    }\r\n  }\r\n\r\n  input:checked + &-slider {\r\n    background-color: var(--switch-enabled-background-on);\r\n\r\n    &:before {\r\n      transform: translateX(24px);\r\n    }\r\n\r\n    #on-icon {\r\n      left: 6px;\r\n      opacity: 1;\r\n      transform: translate(0, -50%);\r\n    }\r\n\r\n    #off-icon {\r\n      right: 6px;\r\n      opacity: 0;\r\n      transform: translate(2px, -50%);\r\n    }\r\n\r\n    &:hover {\r\n      background-color: var(--switch-hover-background-on);\r\n    }\r\n  }\r\n\r\n  input:disabled + &-slider {\r\n    cursor: not-allowed;\r\n\r\n    background-color: var(--switch-disabled-background-off);\r\n\r\n    &:before {\r\n      background-color: var(--switch-disabled-icon-color-off);\r\n    }\r\n\r\n    #on-icon,\r\n    #off-icon {\r\n      fill: var(--switch-disabled-icon-color-off);\r\n    }\r\n  }\r\n\r\n  input:checked:disabled + &-slider {\r\n    background-color: var(--switch-disabled-background-on);\r\n\r\n    &:before {\r\n      background-color: var(--switch-disabled-icon-color-on);\r\n    }\r\n\r\n    #on-icon,\r\n    #off-icon {\r\n      fill: var(--switch-disabled-icon-color-on);\r\n    }\r\n  }\r\n\r\n  input:focus-visible + &-slider {\r\n    /* using 3px outline and offset -1px to fix subpixel issues */\r\n    outline: 3px solid $color-turquoise-03;\r\n    outline-offset: -1px;\r\n  }\r\n\r\n  &-label {\r\n    font-family: 'Bosch Sans';\r\n    font-size: 12px;\r\n    line-height: 12px;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    color: $color-grey-06;\r\n  }\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter, AttachInternals } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dc-ui-switch',\r\n  styleUrl: 'dc-ui-switch.scss',\r\n  formAssociated: true,\r\n  shadow: true,\r\n})\r\nexport class DcUiSwitch {\r\n  @Prop() checked: boolean = false;\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() hideLabel: boolean = false;\r\n  @Prop() label: string = '';\r\n  @Prop() name: string = '';\r\n\r\n  @Event() dcChange: EventEmitter<{ checked: boolean }>;\r\n\r\n  @AttachInternals() internals: ElementInternals;\r\n\r\n  private prevCheckedValue: boolean;\r\n\r\n  componentWillLoad() {\r\n    this.prevCheckedValue = this.checked;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.checked !== this.prevCheckedValue) {\r\n      this.dcChange.emit({ checked: this.checked });\r\n      this.prevCheckedValue = this.checked;\r\n    }\r\n  }\r\n\r\n  formAssociatedCallback() {\r\n    this.setFormValue(this.checked);\r\n  }\r\n\r\n  formResetCallback() {\r\n    this.clearSelection();\r\n    // Reset the form value and validity state\r\n    this.internals.setFormValue(undefined);\r\n    this.internals.setValidity({});\r\n  }\r\n\r\n  private clearSelection = () => {\r\n    this.checked = false;\r\n  };\r\n\r\n  private handleChange = (event: Event) => {\r\n    const isChecked = (event.target as HTMLInputElement).checked;\r\n    this.dcChange.emit({ checked: isChecked });\r\n    this.setFormValue(isChecked);\r\n  };\r\n\r\n  private setFormValue = (checked: boolean) => {\r\n    const value = checked ? 'on' : undefined;\r\n    // Set form value based on the checked state\r\n    // Here we also pass the state of the checkbox (2nd argument) as the state of the form control\r\n    // Details: https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/setFormValue\r\n    this.internals?.setFormValue(value, `${this.checked}`);\r\n  };\r\n\r\n  render() {\r\n    const showLabel = this.label && !this.hideLabel;\r\n    const ariaLabel = !showLabel && this.label ? this.label : null;\r\n\r\n    return (\r\n      <label class=\"dc-switch\">\r\n        {showLabel && <span class=\"dc-switch-label\">{this.label}</span>}\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={this.checked}\r\n          disabled={this.disabled}\r\n          onChange={this.handleChange}\r\n          name={this.name}\r\n          aria-label={ariaLabel}\r\n        />\r\n        <span class=\"dc-switch-slider\">\r\n          <dc-ui-icon\r\n            color=\"inherit\"\r\n            id=\"on-icon\"\r\n            size=\"tiny\"\r\n            name=\"dc_checkmark\"></dc-ui-icon>\r\n          <dc-ui-icon\r\n            id=\"off-icon\"\r\n            color=\"inherit\"\r\n            size=\"tiny\"\r\n            name=\"dc_close\"></dc-ui-icon>\r\n        </span>\r\n      </label>\r\n    );\r\n  }\r\n}\r\n"],"names":["DcUiSwitch","clearSelection","this","checked","handleChange","event","isChecked","target","dcChange","emit","setFormValue","value","undefined","_a","internals","componentWillLoad","prevCheckedValue","componentDidUpdate","formAssociatedCallback","formResetCallback","setValidity","render","showLabel","label","hideLabel","ariaLabel","h","key","class","type","disabled","onChange","name","color","id","size"],"sourceRoot":""}
{"ast":null,"code":"// fetchDataProducts.js\n\nexport const fetchdataproducts = result => {\n  const {\n    NN\n  } = result.index;\n  if (NN === 'CytroBox') {\n    const values = getCytroboxValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(computeCytroboxTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodesCytrobox(result.index.line.values);\n    setAllTypecodesCytrobox(typecodes);\n  } else if (NN === 'CytroPac') {\n    const values = getCytropacValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(computeCytropacTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodesCytropac(result.index.line.values);\n    setAllTypecodesCytropac(typecodes);\n  } else if (NN === 'WE 10.../H') {\n    const values = get4We10hValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(compute4We10hTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodes4We10h(result.index.line.values);\n    setAllTypecodes4We10h(typecodes);\n  } else if (NN === 'WEH/WH-1X') {\n    const values = get4WehValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(compute4WehTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodes4Weh(result.index.line.values);\n    setAllTypecodes4Weh(typecodes);\n  } else if (NN === 'Z3DREE 10') {\n    const values = getZ3dreValues(result);\n    setSelectedValues(values);\n    setTypecodeInfo(computeZ3dreTypecodeInfo(values));\n    const typecodes = generateAllPossibleTypecodesZ3dre(result.index.line.values);\n    setAllTypecodesZ3dre(typecodes);\n  }\n};","map":{"version":3,"names":["fetchdataproducts","result","NN","index","values","getCytroboxValues","setSelectedValues","setTypecodeInfo","computeCytroboxTypecodeInfo","typecodes","generateAllPossibleTypecodesCytrobox","line","setAllTypecodesCytrobox","getCytropacValues","computeCytropacTypecodeInfo","generateAllPossibleTypecodesCytropac","setAllTypecodesCytropac","get4We10hValues","compute4We10hTypecodeInfo","generateAllPossibleTypecodes4We10h","setAllTypecodes4We10h","get4WehValues","compute4WehTypecodeInfo","generateAllPossibleTypecodes4Weh","setAllTypecodes4Weh","getZ3dreValues","computeZ3dreTypecodeInfo","generateAllPossibleTypecodesZ3dre","setAllTypecodesZ3dre"],"sources":["C:/Users/LGD1KOR/Desktop/rexroth_products_with_versions/rexroth/src/FileToUpdate/AllProductsData.js"],"sourcesContent":["// fetchDataProducts.js\r\n\r\nexport const fetchdataproducts = (result) => {\r\n    const { NN } = result.index;\r\n  \r\n    if (NN === 'CytroBox') {\r\n      const values = getCytroboxValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(computeCytroboxTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodesCytrobox(result.index.line.values);\r\n      setAllTypecodesCytrobox(typecodes);\r\n    } else if (NN === 'CytroPac') {\r\n      const values = getCytropacValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(computeCytropacTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodesCytropac(result.index.line.values);\r\n      setAllTypecodesCytropac(typecodes);\r\n    } else if (NN === 'WE 10.../H') {\r\n      const values = get4We10hValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(compute4We10hTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodes4We10h(result.index.line.values);\r\n      setAllTypecodes4We10h(typecodes);\r\n    } else if (NN === 'WEH/WH-1X') {\r\n      const values = get4WehValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(compute4WehTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodes4Weh(result.index.line.values);\r\n      setAllTypecodes4Weh(typecodes);\r\n    } else if (NN === 'Z3DREE 10') {\r\n      const values = getZ3dreValues(result);\r\n      setSelectedValues(values);\r\n      setTypecodeInfo(computeZ3dreTypecodeInfo(values));\r\n      const typecodes = generateAllPossibleTypecodesZ3dre(result.index.line.values);\r\n      setAllTypecodesZ3dre(typecodes);\r\n    }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,iBAAiB,GAAIC,MAAM,IAAK;EACzC,MAAM;IAAEC;EAAG,CAAC,GAAGD,MAAM,CAACE,KAAK;EAE3B,IAAID,EAAE,KAAK,UAAU,EAAE;IACrB,MAAME,MAAM,GAAGC,iBAAiB,CAACJ,MAAM,CAAC;IACxCK,iBAAiB,CAACF,MAAM,CAAC;IACzBG,eAAe,CAACC,2BAA2B,CAACJ,MAAM,CAAC,CAAC;IACpD,MAAMK,SAAS,GAAGC,oCAAoC,CAACT,MAAM,CAACE,KAAK,CAACQ,IAAI,CAACP,MAAM,CAAC;IAChFQ,uBAAuB,CAACH,SAAS,CAAC;EACpC,CAAC,MAAM,IAAIP,EAAE,KAAK,UAAU,EAAE;IAC5B,MAAME,MAAM,GAAGS,iBAAiB,CAACZ,MAAM,CAAC;IACxCK,iBAAiB,CAACF,MAAM,CAAC;IACzBG,eAAe,CAACO,2BAA2B,CAACV,MAAM,CAAC,CAAC;IACpD,MAAMK,SAAS,GAAGM,oCAAoC,CAACd,MAAM,CAACE,KAAK,CAACQ,IAAI,CAACP,MAAM,CAAC;IAChFY,uBAAuB,CAACP,SAAS,CAAC;EACpC,CAAC,MAAM,IAAIP,EAAE,KAAK,YAAY,EAAE;IAC9B,MAAME,MAAM,GAAGa,eAAe,CAAChB,MAAM,CAAC;IACtCK,iBAAiB,CAACF,MAAM,CAAC;IACzBG,eAAe,CAACW,yBAAyB,CAACd,MAAM,CAAC,CAAC;IAClD,MAAMK,SAAS,GAAGU,kCAAkC,CAAClB,MAAM,CAACE,KAAK,CAACQ,IAAI,CAACP,MAAM,CAAC;IAC9EgB,qBAAqB,CAACX,SAAS,CAAC;EAClC,CAAC,MAAM,IAAIP,EAAE,KAAK,WAAW,EAAE;IAC7B,MAAME,MAAM,GAAGiB,aAAa,CAACpB,MAAM,CAAC;IACpCK,iBAAiB,CAACF,MAAM,CAAC;IACzBG,eAAe,CAACe,uBAAuB,CAAClB,MAAM,CAAC,CAAC;IAChD,MAAMK,SAAS,GAAGc,gCAAgC,CAACtB,MAAM,CAACE,KAAK,CAACQ,IAAI,CAACP,MAAM,CAAC;IAC5EoB,mBAAmB,CAACf,SAAS,CAAC;EAChC,CAAC,MAAM,IAAIP,EAAE,KAAK,WAAW,EAAE;IAC7B,MAAME,MAAM,GAAGqB,cAAc,CAACxB,MAAM,CAAC;IACrCK,iBAAiB,CAACF,MAAM,CAAC;IACzBG,eAAe,CAACmB,wBAAwB,CAACtB,MAAM,CAAC,CAAC;IACjD,MAAMK,SAAS,GAAGkB,iCAAiC,CAAC1B,MAAM,CAACE,KAAK,CAACQ,IAAI,CAACP,MAAM,CAAC;IAC7EwB,oBAAoB,CAACnB,SAAS,CAAC;EACjC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
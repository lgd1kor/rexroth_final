{"version":3,"file":"static/js/6291.7e35ace5.chunk.js","mappings":"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","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/variables/text-styles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/breakpointCustom.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/checkSlotContent.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/variables/color.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-dropdown-wrapper/dropdown-wrapper-styles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-dropdown-wrapper/dropdown-wrapper-utils.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-dropdown-wrapper/dc-ui-dropdown-wrapper.tsx","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/font.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/mediaQuery.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/slottedStyles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/common/state-message/state-message.tsx","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/styles/form-state-color-styles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/common/state-message/state-message-styles.ts"],"sourcesContent":["export const FULL_TEXT_STYLES = {\r\n  'h-superbig': {\r\n    lg: {\r\n      fontSize: '72px',\r\n      lineHeight: '90px',\r\n    },\r\n    md: {\r\n      fontSize: '56px',\r\n      lineHeight: '70px',\r\n    },\r\n    base: {\r\n      fontSize: '56px',\r\n      lineHeight: '70px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'h-big': {\r\n    lg: {\r\n      fontSize: '56px',\r\n      lineHeight: '70px',\r\n    },\r\n    md: {\r\n      fontSize: '42px',\r\n      lineHeight: '52px',\r\n    },\r\n    base: {\r\n      fontSize: '42px',\r\n      lineHeight: '52px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h1: {\r\n    lg: {\r\n      fontSize: '42px',\r\n      lineHeight: '52px',\r\n    },\r\n    md: {\r\n      fontSize: '36px',\r\n      lineHeight: '48px',\r\n    },\r\n    base: {\r\n      fontSize: '32px',\r\n      lineHeight: '40px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h2: {\r\n    lg: {\r\n      fontSize: '32px',\r\n      lineHeight: '40px',\r\n    },\r\n    base: {\r\n      fontSize: '28px',\r\n      lineHeight: '36px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h3: {\r\n    lg: {\r\n      fontSize: '28px',\r\n      lineHeight: '36px',\r\n    },\r\n    base: {\r\n      fontSize: '24px',\r\n      lineHeight: '36px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h4: {\r\n    base: {\r\n      fontSize: '20px',\r\n      lineHeight: '32px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h5: {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h6: {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'emphasized-text': {\r\n    base: {\r\n      fontSize: '28px',\r\n      lineHeight: '36px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'emphasized-additional-text': {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  'intro-text': {\r\n    base: {\r\n      fontSize: '20px',\r\n      lineHeight: '32px',\r\n    },\r\n  },\r\n  'text-line-spacing-big': {\r\n    base: {\r\n      fontSize: '18px',\r\n      lineHeight: '28px',\r\n    },\r\n  },\r\n  text: {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n    },\r\n  },\r\n  'strong-text': {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  'mid-size-text': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '24px',\r\n      letterSpacing: '0.16px',\r\n    },\r\n  },\r\n  'strong-mid-size-text': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '24px',\r\n      letterSpacing: '0.16px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  'small-text': {\r\n    base: {\r\n      fontSize: '12px',\r\n      lineHeight: '20px',\r\n      letterSpacing: '0.32px',\r\n    },\r\n  },\r\n  'strong-small-text': {\r\n    base: {\r\n      fontSize: '12px',\r\n      lineHeight: '20px',\r\n      letterSpacing: '0.32px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  'btn-small': {\r\n    base: {\r\n      fontSize: '0.75rem',\r\n      lineHeight: '1rem',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'btn-normal': {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '20px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'btn-large': {\r\n    base: {\r\n      fontSize: '1.25rem',\r\n      lineHeight: '1.375rem',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'link-small': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '16px',\r\n      letterSpacing: '0.16px',\r\n    },\r\n  },\r\n  'link-normal': {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n    },\r\n  },\r\n  'label-checkbox': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '16px',\r\n      letterSpacing: '0.16px',\r\n    },\r\n  },\r\n  'label-textarea': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '24px',\r\n      letterSpacing: '0.16px',\r\n      textTransform: 'uppercase',\r\n    },\r\n    focus: {\r\n      fontSize: '12px',\r\n      lineHeight: '13px',\r\n      letterSpacing: '0.32px',\r\n      textTransform: 'uppercase',\r\n    },\r\n  },\r\n  'label-input': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '24px',\r\n      letterSpacing: '0.16px',\r\n      textTransform: 'uppercase',\r\n    },\r\n    focus: {\r\n      fontSize: '12px',\r\n      letterSpacing: '0.32px',\r\n      lineHeight: '13px',\r\n      textTransform: 'uppercase',\r\n    },\r\n  },\r\n  'state-message': {\r\n    base: {\r\n      fontSize: '12px',\r\n      lineHeight: '13px',\r\n      letterSpacing: '0.32px',\r\n    },\r\n  },\r\n};\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport type { JssStyle, Styles } from 'jss';\r\nimport { TBreakpointNames, mediaQueryMin } from './mediaQuery';\r\nimport { FULL_TEXT_STYLES } from '../variables';\r\n\r\nexport const BREAKPOINTS = ['base', 'xs', 'sm', 'md', 'lg', 'xl'] as const;\r\nexport type BreakpointKey = (typeof BREAKPOINTS)[number];\r\nexport type BreakpointValues<T> = {\r\n  [key in BreakpointKey]?: T;\r\n} & {\r\n  base: T;\r\n};\r\n\r\n// string is needed in order to pass and parse objects via prop decorator\r\nexport type BreakpointCustomizable<T> = T | BreakpointValues<T> | string;\r\nexport type BreakpointValue = string | number | boolean;\r\n\r\nexport const parseJSON = (\r\n  prop: BreakpointCustomizable<BreakpointValue>\r\n): BreakpointValues<BreakpointValue> | BreakpointValue => {\r\n  if (typeof prop === 'string') {\r\n    try {\r\n      // prop is potentially JSON parsable string, e.g. \"{ base: 'block', l: 'inline' }\" or \"true\" or \"false\"\r\n      return JSON.parse(\r\n        prop\r\n          .replace(/'/g, '\"') // convert single quotes to double quotes\r\n          .replace(/[\\s\"]?([a-z]+)[\\s\"]?:([^//])/g, '\"$1\":$2') // wrap keys in double quotes if they don't have them but ignore potential urls\r\n      );\r\n    } catch {\r\n      // prop is string, e.g. \"block\" or \"inline\"\r\n      return prop;\r\n    }\r\n  } else {\r\n    // prop is object, e.g. { base: 'block', l: 'inline' } or number, e.g. 123 or boolean, e.g. true\r\n    return prop;\r\n  }\r\n};\r\n\r\n// do we need that ?\r\nexport const addImportantToRule = (value: any): string => `${value} !important`;\r\n\r\n// do we need that ?\r\nexport const addImportantToEachRule = (input: JssStyle): JssStyle => {\r\n  return Object.entries(input).reduce(\r\n    (result, [key, value]) =>\r\n      value === null\r\n        ? result\r\n        : ((result[key] =\r\n            typeof value === 'object'\r\n              ? addImportantToEachRule(value as JssStyle)\r\n              : addImportantToRule(value)),\r\n          result),\r\n    {} as JssStyle\r\n  );\r\n};\r\n\r\nexport type GetJssStyleFunction = (value?: any) => JssStyle;\r\nexport type GetJssStyleFunctionWithProp = (value: any, ...args: any[]) => JssStyle;\r\n\r\nexport const buildResponsiveStyles = <T>(\r\n  rawValue: BreakpointCustomizable<T>,\r\n  getJssStyle: GetJssStyleFunction\r\n): Styles => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n  const value = parseJSON(rawValue as any);\r\n\r\n  const returnValue =\r\n    typeof value === 'object'\r\n      ? Object.keys(value)\r\n          // base styles are applied on root object, responsive styles are nested within\r\n          // hence it is used as the initial object within reduce function\r\n          .filter((key) => key !== 'base')\r\n          .reduce(\r\n            (result, breakpointValue: TBreakpointNames) => ({\r\n              ...result,\r\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n              [mediaQueryMin(breakpointValue as any)]: getJssStyle(\r\n                value[breakpointValue]\r\n              ) as Styles,\r\n            }),\r\n            getJssStyle(value.base) as Styles\r\n          )\r\n      : (getJssStyle(value) as Styles);\r\n\r\n  return returnValue;\r\n};\r\n\r\nexport const buildResponsiveStylesWithProps = <T>(\r\n  rawValue: BreakpointCustomizable<T>,\r\n  getJssStyle: GetJssStyleFunctionWithProp,\r\n  extraProp: string,\r\n  ...args: any[]\r\n): Styles => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n  const value = parseJSON(rawValue as any);\r\n\r\n  const returnValue =\r\n    typeof value === 'object'\r\n      ? Object.keys(value)\r\n          // base styles are applied on root object, responsive styles are nested within\r\n          // hence it is used as the initial object within reduce function\r\n          .filter((key) => key !== 'base')\r\n          .reduce(\r\n            (result, breakpointValue: TBreakpointNames) => ({\r\n              ...result,\r\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n              [mediaQueryMin(breakpointValue as any)]: getJssStyle(\r\n                value[breakpointValue],\r\n                extraProp,\r\n                ...args\r\n              ) as Styles,\r\n            }),\r\n            getJssStyle(value.base, extraProp, ...args) as Styles\r\n          )\r\n      : (getJssStyle(value, extraProp, ...args) as Styles);\r\n  return returnValue;\r\n};\r\n\r\nexport const buildResponsiveTextStyles = (styleName: string) => {\r\n  const fontObject = FULL_TEXT_STYLES[styleName];\r\n  if (!fontObject) {\r\n    throw new Error(`Text style ${styleName} does not exist`);\r\n  }\r\n\r\n  let styles = {};\r\n\r\n  // itterate over fontObject\r\n  Object.keys(fontObject).forEach((key) => {\r\n    // check if key is 'base'\r\n    if (key === 'base') {\r\n      styles = {\r\n        ...styles,\r\n        ...fontObject[key],\r\n      };\r\n      return;\r\n    }\r\n\r\n    // get media query from object key\r\n    const mediaQuery = mediaQueryMin(key as any);\r\n\r\n    // add styles from fontObject to mediaQuery\r\n    styles = {\r\n      ...styles,\r\n      [mediaQuery]: {\r\n        ...fontObject[key],\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n};\r\n","// function to check the slot content. If more than one element is in the slot, select the element and delete the rest\r\nexport const checkSlotContent = (slot: HTMLElement, selector: string) => {\r\n  if (slot && slot.children.length > 1) {\r\n    const neededElement = slot.querySelector(selector);\r\n    if (neededElement) {\r\n      slot.innerHTML = '';\r\n      slot.appendChild(neededElement);\r\n    }\r\n  }\r\n};\r\n","export const color = {\r\n  focusColor: '#009cc2',\r\n\r\n  redBrand01: '#ed0007',\r\n  redBrand02: '#d50005',\r\n  redBrand03: '#a80003',\r\n\r\n  turquoise01: '#00c8f7',\r\n  turquoise02: '#00b9e5',\r\n  turquoise03: '#009cc2',\r\n  turquoise04: '#00738f',\r\n  turquoise05: '#004d61',\r\n  turquoise06: '#002936',\r\n\r\n  grey01: '#edf1f4',\r\n  grey02: '#cad6dd',\r\n  grey03: '#a3bac8',\r\n  grey04: '#99aebb',\r\n  grey05: '#7995a6',\r\n  grey06: '#506e81',\r\n  grey07: '#476273',\r\n  grey08: '#354956',\r\n  grey09: '#2d3e48',\r\n  grey10: '#1c272e',\r\n\r\n  green01: '#d9e8d0',\r\n  green02: '#528236',\r\n  green03: '#1a2a11',\r\n\r\n  yellow01: '#f9f3bc',\r\n  yellow02: '#ebd417',\r\n  yellow03: '#2a2604',\r\n\r\n  red01: '#f7bfc8',\r\n  red02: '#da1e28',\r\n  red03: '#54000e',\r\n\r\n  orange01: '#FBE8DA',\r\n  orange02: '#DC641E',\r\n\r\n  darkBlue01: '#d1dce3',\r\n  darkBlue02: '#002b49',\r\n  darkBlue03: '#00243e',\r\n\r\n  white: '#ffffff',\r\n  black: '#000000',\r\n};\r\n\r\nexport type TColor = keyof typeof color;\r\nexport type TBGColor = 'grey01' | 'turquoise01' | 'darkBlue02';\r\n","import {\r\n  addImportantToEachRule,\r\n  BreakpointCustomizable,\r\n  buildSlottedStyles,\r\n  color as colorUtils,\r\n  getCss,\r\n  TValidationState,\r\n  buildResponsiveStyles,\r\n  mergeDeep,\r\n} from '../../utils';\r\nimport { TDropdownLabelPosition } from './dropdown-wrapper-utils';\r\nimport { getStateMessageStyles } from '../common/state-message/state-message-styles';\r\n\r\n/**\r\n * Slotted styles (applied when using the *native select element*).\r\n *\r\n * @param el\r\n * @param useNativeSelectEl\r\n * @param labelPosition\r\n * @param validationstate\r\n */\r\nexport const getSlottedCss = (\r\n  el: HTMLElement,\r\n  useNativeSelectEl: boolean,\r\n  labelPosition: TDropdownLabelPosition,\r\n  validationstate: TValidationState\r\n): string => {\r\n  const nativeElTopPadding = labelPosition === 'default' ? 26 : 7;\r\n  const nativeElBottomPadding = labelPosition === 'default' ? 11 : 7;\r\n\r\n  return getCss(\r\n    buildSlottedStyles(\r\n      el,\r\n      addImportantToEachRule({\r\n        '& select': {\r\n          ...(useNativeSelectEl\r\n            ? {\r\n                appearance: 'none',\r\n                WebkitAppearance: 'none',\r\n                position: 'absolute',\r\n                inset: '0',\r\n                width: '100%',\r\n                margin: '0',\r\n                border: 'none',\r\n                background: 'none',\r\n                padding: `${nativeElTopPadding}px 48px ${nativeElBottomPadding}px 16px`,\r\n                fontFamily: 'Bosch Sans',\r\n                fontSize: '14px',\r\n                lineHeight: '16px',\r\n                letterSpacing: '0.16px',\r\n                color: colorUtils.darkBlue02,\r\n                cursor: 'pointer',\r\n              }\r\n            : {}),\r\n          '&:disabled': {\r\n            borderColor: colorUtils.grey02,\r\n            backgroundColor: colorUtils.grey02,\r\n            color: colorUtils.grey03,\r\n            cursor: 'not-allowed',\r\n          },\r\n          '&:focus':\r\n            validationstate === 'error'\r\n              ? {\r\n                  outline: `2px solid ${colorUtils.turquoise03}`,\r\n                  outlineOffset: '2px',\r\n                }\r\n              : {\r\n                  outline: 'none',\r\n                  borderColor: colorUtils.turquoise03,\r\n                  boxShadow: `inset 0 0 0 1px ${colorUtils.turquoise03}`,\r\n                },\r\n          '& option': {\r\n            fontFamily: '\"Bosch Sans\", sans-serif',\r\n          },\r\n        },\r\n      })\r\n    )\r\n  );\r\n};\r\n\r\n/**\r\n * Styles (for the custom dropdown element, and for the native select wrapper if using the native select element).\r\n *\r\n * @param labelPosition\r\n * @param disabled\r\n * @param useNativeSelectEl\r\n * @param validationstate\r\n * @param labelWidth\r\n * @param open\r\n */\r\nexport const createStyles = (\r\n  labelPosition: TDropdownLabelPosition,\r\n  disabled: boolean,\r\n  useNativeSelectEl: boolean,\r\n  validationstate: TValidationState,\r\n  labelWidth: BreakpointCustomizable<string>,\r\n  open: boolean\r\n): string => {\r\n  const verticalPadding = labelPosition === 'default' ? 10 : 7;\r\n\r\n  const styles = getCss({\r\n    '@global': {\r\n      '::slotted': addImportantToEachRule({\r\n        '&(select)': useNativeSelectEl\r\n          ? {}\r\n          : {\r\n              display: 'none',\r\n            },\r\n      }),\r\n\r\n      '.container': {\r\n        fontFamily: 'Bosch Sans',\r\n        fontSize: '14px',\r\n        lineHeight: '16px',\r\n        letterSpacing: '0.16px',\r\n        ...(labelPosition === 'left'\r\n          ? {\r\n              display: 'grid',\r\n              ...mergeDeep(\r\n                buildResponsiveStyles(labelWidth, (labelWidthResponsive: string) => ({\r\n                  gridTemplateColumns: `${labelWidthResponsive} minmax(0, 1fr)`,\r\n                }))\r\n              ),\r\n              gridTemplateRows: 'auto auto',\r\n              columnGap: '8px',\r\n            }\r\n          : {}),\r\n\r\n        '& label': {\r\n          display: 'block',\r\n          fontFamily: 'Bosch Sans',\r\n          fontSize: '12px',\r\n          lineHeight: '15px',\r\n          letterSpacing: '0.32px',\r\n          textTransform: 'uppercase',\r\n          color: disabled ? colorUtils.grey03 : colorUtils.grey06,\r\n          whiteSpace: 'nowrap',\r\n          ...(labelPosition === 'left'\r\n            ? {\r\n                alignSelf: 'center',\r\n              }\r\n            : labelPosition === 'above'\r\n            ? {\r\n                marginBottom: '8px',\r\n              }\r\n            : {\r\n                marginBottom: '1px',\r\n                pointerEvents: 'none',\r\n              }),\r\n        },\r\n\r\n        '& > *': {\r\n          maxWidth: '100%',\r\n        },\r\n      },\r\n\r\n      '.dropdown-head': {\r\n        position: 'relative',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        border: `1px solid ${colorUtils.grey05}`,\r\n        backgroundColor: colorUtils.white,\r\n        padding: `${verticalPadding}px 48px ${verticalPadding}px 16px`,\r\n        fontFamily: 'Bosch Sans',\r\n        fontSize: '14px',\r\n        lineHeight: '16px',\r\n        letterSpacing: '0.16px',\r\n        textAlign: 'left',\r\n        color: colorUtils.darkBlue02,\r\n        cursor: 'pointer',\r\n        userSelect: 'none',\r\n\r\n        '&:hover': {\r\n          borderColor: colorUtils.grey10,\r\n        },\r\n\r\n        '&:not(.disabled, :disabled):focus': {\r\n          outline: 'none',\r\n          borderColor: colorUtils.turquoise03,\r\n          boxShadow: `inset 0 0 0 1px ${colorUtils.turquoise03}`,\r\n        },\r\n\r\n        '&:not(.disabled, :disabled).error': {\r\n          outline: 'none',\r\n          borderColor: colorUtils.red02,\r\n          boxShadow: `inset 0 0 0 1px ${colorUtils.red02}`,\r\n        },\r\n\r\n        '&:not(.disabled, :disabled).error:focus': {\r\n          outline: `2px solid ${colorUtils.turquoise03}`,\r\n          outlineOffset: '1px',\r\n        },\r\n\r\n        '&.disabled, &:disabled': {\r\n          borderColor: colorUtils.grey02,\r\n          backgroundColor: colorUtils.grey02,\r\n          color: colorUtils.grey03,\r\n          cursor: 'not-allowed',\r\n        },\r\n      },\r\n\r\n      '.native-select-wrapper': {\r\n        height: labelPosition === 'default' ? '54px' : '32px',\r\n\r\n        '& label': {\r\n          position: 'relative',\r\n          zIndex: 1,\r\n        },\r\n      },\r\n\r\n      '.dropdown': {\r\n        position: 'relative',\r\n      },\r\n\r\n      '.dropdown-head-text': {\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n      },\r\n\r\n      '.arrow-icon': {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        right: '16px',\r\n        transform: `translateY(-50%) ${open ? 'rotateX(180deg)' : ''}`,\r\n        transition: 'transform 350ms',\r\n      },\r\n\r\n      'ul, li': {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyleType: 'none',\r\n      },\r\n\r\n      '.dropdown-list': useNativeSelectEl\r\n        ? {\r\n            display: 'none',\r\n          }\r\n        : {\r\n            visibility: 'hidden',\r\n            position: 'absolute',\r\n            top: '100%',\r\n            left: '0',\r\n            width: '100%',\r\n            maxHeight: labelPosition === 'default' ? '208px' : '196px',\r\n            overflowY: 'auto',\r\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)',\r\n            zIndex: '999',\r\n            pointerEvents: 'none',\r\n\r\n            '&.open': {\r\n              visibility: 'visible',\r\n              pointerEvents: 'unset',\r\n            },\r\n          },\r\n\r\n      '.dropdown-option': {\r\n        backgroundColor: colorUtils.white,\r\n        padding: `${labelPosition === 'default' ? 11 : 7}px 17px`,\r\n        color: colorUtils.darkBlue02,\r\n        cursor: 'pointer',\r\n\r\n        '&:hover': {\r\n          backgroundColor: colorUtils.grey01,\r\n        },\r\n\r\n        '&.active': {\r\n          boxShadow: `inset 0 0 0 2px ${colorUtils.turquoise03}`,\r\n        },\r\n\r\n        '& .checkmark-icon': {\r\n          display: 'none',\r\n        },\r\n      },\r\n\r\n      '.dropdown-list.has-optgroups .dropdown-option': {\r\n        paddingLeft: '32px',\r\n\r\n        '&[aria-selected=\"true\"]': {\r\n          position: 'relative',\r\n\r\n          '& .checkmark-icon': {\r\n            display: 'inline-flex',\r\n            position: 'absolute',\r\n            top: '12px',\r\n            left: '8px',\r\n          },\r\n        },\r\n      },\r\n\r\n      '.dropdown-optgroup-heading': {\r\n        backgroundColor: colorUtils.white,\r\n        padding: `${labelPosition === 'default' ? 11 : 7}px 17px`,\r\n        color: colorUtils.grey06,\r\n      },\r\n\r\n      '.message': {\r\n        gridColumnStart: '2',\r\n      },\r\n    },\r\n    ...getStateMessageStyles(validationstate),\r\n  });\r\n\r\n  return styles;\r\n};\r\n","import {DcUiDropdownWrapper} from \"./dc-ui-dropdown-wrapper\";\r\n\r\nexport const VALIDATION_STATE = ['none', 'error'] as const;\r\nexport type TValidationState = typeof VALIDATION_STATE[number];\r\n\r\nexport const DROPDOWN_LABEL_POSITION = ['default', 'left', 'above'] as const;\r\nexport type TDropdownLabelPosition = typeof DROPDOWN_LABEL_POSITION[number];\r\n\r\n\r\nexport const registeredDropdowns: DcUiDropdownWrapper[] = [];\r\n\r\n\r\n/**\r\n * Closes all dropdowns if the document is clicked.\r\n */\r\nexport const onDocumentClick = (): void => {\r\n  closeAllDropdowns();\r\n}\r\n\r\n\r\n/**\r\n * Closes all dropdowns if the Escape key is pressed.\r\n *\r\n * @param e\r\n */\r\nexport const onDocumentKeydown = (e: KeyboardEvent): void => {\r\n  if (e.key === 'Escape') {\r\n    closeAllDropdowns();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Adds event listeners to the document if they don't already exist.\r\n *\r\n * @param dropdown\r\n */\r\nexport const addDocumentEventListeners = (dropdown: DcUiDropdownWrapper): void => {\r\n  if (registeredDropdowns.length === 0) {\r\n    document.addEventListener('click', onDocumentClick);\r\n    document.addEventListener('keydown', onDocumentKeydown);\r\n  }\r\n  if (!registeredDropdowns.includes(dropdown)) {\r\n    registeredDropdowns.push(dropdown);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Removes event listeners from the document.\r\n *\r\n * @param dropdown\r\n */\r\nexport const removeDocumentEventListeners = (dropdown: DcUiDropdownWrapper): void => {\r\n  const index = registeredDropdowns.indexOf(dropdown);\r\n  if (index > -1) {\r\n    registeredDropdowns.splice(index, 1);\r\n  }\r\n  if (registeredDropdowns.length === 0) {\r\n    document.removeEventListener('click', onDocumentClick);\r\n    document.removeEventListener('keydown', onDocumentKeydown);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Closes all dropdowns.\r\n */\r\nexport const closeAllDropdowns = (): void => {\r\n  for (const dropdown of registeredDropdowns) {\r\n    closeDropdown(dropdown);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Closes all dropdowns except the given one.\r\n *\r\n * @param except\r\n */\r\nexport const closeOtherDropdowns = (except: DcUiDropdownWrapper): void => {\r\n  for (const dropdown of registeredDropdowns) {\r\n    if (dropdown !== except) {\r\n      closeDropdown(dropdown);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Closes a dropdown.\r\n *\r\n * @param dropdown\r\n */\r\nexport const closeDropdown = (dropdown: DcUiDropdownWrapper): void => {\r\n  dropdown.open = false;\r\n  Array.from(dropdown.listEl.children).forEach(optionEl => {\r\n    optionEl.classList.remove('active');\r\n  });\r\n}\r\n","import { Component, Host, h, Element, State, Prop } from '@stencil/core';\r\nimport {\r\n  attachSlottedCss,\r\n  BreakpointCustomizable,\r\n  checkSlotContent,\r\n  createUuid,\r\n  injectCSS,\r\n  injectFont,\r\n  observeOptions,\r\n  TValidationState,\r\n} from '../../utils';\r\nimport { createStyles, getSlottedCss } from './dropdown-wrapper-styles';\r\nimport {\r\n  closeOtherDropdowns,\r\n  addDocumentEventListeners,\r\n  removeDocumentEventListeners,\r\n  TDropdownLabelPosition,\r\n} from './dropdown-wrapper-utils';\r\nimport { StateMessage } from '../common/state-message/state-message';\r\n\r\n@Component({\r\n  tag: 'dc-ui-dropdown-wrapper',\r\n  shadow: true,\r\n})\r\nexport class DcUiDropdownWrapper {\r\n  @Element() el: HTMLElement;\r\n  @Prop() label = '';\r\n  @Prop() labelPosition: TDropdownLabelPosition = 'default';\r\n  @Prop() labelWidth?: BreakpointCustomizable<string> = '25%';\r\n  @Prop() disabled = false;\r\n  @Prop() validationstate: TValidationState = 'none';\r\n  @Prop() message = '';\r\n  @State() open = false;\r\n  @State() selectedOptionIndex: number = null;\r\n\r\n  nativeSelectEl: HTMLSelectElement;\r\n  dropdownEl: HTMLElement;\r\n  headEl: HTMLElement;\r\n  headTextEl: HTMLElement;\r\n  listEl: HTMLElement;\r\n  nativeSelectWrapperEl: HTMLElement;\r\n  selectObserver: MutationObserver;\r\n  useNativeSelect = false;\r\n  uuid: string;\r\n\r\n  componentWillLoad() {\r\n    injectFont();\r\n    checkSlotContent(this.el, 'select');\r\n    this.uuid = createUuid();\r\n\r\n    this.nativeSelectEl = this.el.querySelector('select');\r\n    if (!this.nativeSelectEl) {\r\n      console.warn('dropdown has no select element');\r\n      return;\r\n    }\r\n\r\n    // if on a mobile (touch) device, use the native element instead of the custom dropdown\r\n    // (can't check for maxTouchPoints because chrome reports 256 maxTouchPoints even on desktop)\r\n    // !!('ontouchstart' in window || window.navigator.maxTouchPoints > 0);\r\n    this.useNativeSelect = 'ontouchstart' in window;\r\n    if (this.useNativeSelect) {\r\n      return;\r\n    }\r\n\r\n    // if using the custom dropdown, synchronize it with the native element (in case of external changes)\r\n    this.nativeSelectEl.setAttribute('aria-hidden', 'true');\r\n    this.nativeSelectEl.addEventListener('change', () => {\r\n      this.updateSelectedOptionFromNativeSelect();\r\n    });\r\n\r\n    this.observeNativeSelectOptions();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (!this.nativeSelectEl) {\r\n      return;\r\n    }\r\n\r\n    if (this.useNativeSelect) {\r\n      attachSlottedCss(\r\n        this.el,\r\n        getSlottedCss(this.el, this.useNativeSelect, this.labelPosition, this.validationstate)\r\n      );\r\n      if (this.disabled) {\r\n        this.nativeSelectEl.setAttribute('disabled', 'true');\r\n      }\r\n      return;\r\n    }\r\n\r\n    // if using the custom dropdown, load the options from the native element\r\n    // and watch for external changes to them\r\n    this.loadOptions();\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    this.selectObserver = new MutationObserver((_mutations, _observer) => {\r\n      this.loadOptions();\r\n    });\r\n    this.selectObserver.observe(this.nativeSelectEl, {\r\n      attributes: false,\r\n      childList: true,\r\n      subtree: true,\r\n    });\r\n\r\n    addDocumentEventListeners(this);\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    this.observeNativeSelectOptions();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.useNativeSelect) {\r\n      return;\r\n    }\r\n    removeDocumentEventListeners(this);\r\n  }\r\n\r\n  loadOptions = (): void => {\r\n    if (!this.nativeSelectEl) {\r\n      return;\r\n    }\r\n\r\n    this.listEl.innerHTML = '';\r\n\r\n    const optGroups = this.nativeSelectEl.querySelectorAll('optgroup');\r\n    if (optGroups.length) {\r\n      this.listEl.classList.add('has-optgroups');\r\n      Array.from(optGroups).forEach((optGroup) => {\r\n        this.addOptGroup(optGroup);\r\n      });\r\n    } else {\r\n      const ul = document.createElement('ul');\r\n      ul.setAttribute('role', 'listbox');\r\n      ul.setAttribute('aria-labelledby', `${this.uuid}_label`);\r\n      this.listEl.appendChild(ul);\r\n      Array.from(this.nativeSelectEl.options).forEach((nativeOptionEl) => {\r\n        this.addOption(nativeOptionEl, ul);\r\n      });\r\n    }\r\n\r\n    this.updateSelectedOptionFromNativeSelect();\r\n  };\r\n\r\n  addOptGroup = (optGroup: HTMLOptGroupElement): void => {\r\n    const optGroupEl = document.createElement('ul');\r\n    optGroupEl.setAttribute('role', 'listbox');\r\n    optGroupEl.setAttribute('aria-labelledby', `${this.uuid}_label`);\r\n    this.listEl.appendChild(optGroupEl);\r\n    optGroupEl.setAttribute('role', 'group');\r\n\r\n    const optGroupHeadingEl = document.createElement('li');\r\n    optGroupEl.appendChild(optGroupHeadingEl);\r\n    optGroupHeadingEl.setAttribute('role', 'presentation');\r\n    optGroupHeadingEl.classList.add('dropdown-optgroup-heading');\r\n    optGroupHeadingEl.innerHTML = optGroup.label;\r\n\r\n    const index = this.listEl.children.length - 1;\r\n    optGroupHeadingEl.id = `${this.uuid}_optgroup-${index}`;\r\n    optGroupEl.setAttribute('aria-labelledby', optGroupHeadingEl.id);\r\n\r\n    Array.from(optGroup.children).forEach((nativeOptionEl) => {\r\n      this.addOption(nativeOptionEl as HTMLOptionElement, optGroupEl);\r\n    });\r\n  };\r\n\r\n  addOption = (nativeOptionEl: HTMLOptionElement, parent: HTMLUListElement): void => {\r\n    const index = this.listEl.querySelectorAll('.dropdown-option').length;\r\n    nativeOptionEl.setAttribute(`data-${this.uuid}-index`, `${index}`);\r\n\r\n    const optionEl = document.createElement('li');\r\n    optionEl.classList.add('dropdown-option');\r\n    optionEl.innerHTML = nativeOptionEl.innerHTML;\r\n    optionEl.id = `${this.uuid}_option-${index}`;\r\n    optionEl.setAttribute(`data-${this.uuid}-index`, `${index}`);\r\n    optionEl.setAttribute('role', 'option');\r\n    optionEl.setAttribute('aria-selected', 'false');\r\n\r\n    const icon = document.createElement('dc-ui-icon');\r\n    icon.classList.add('checkmark-icon');\r\n    icon.setAttribute('name', 'dc_checkmark');\r\n    icon.setAttribute('size', 'tiny');\r\n    icon.setAttribute('color', 'darkBlue02');\r\n    optionEl.appendChild(icon);\r\n\r\n    optionEl.addEventListener('click', () => {\r\n      this.selectOption(optionEl);\r\n    });\r\n\r\n    parent.appendChild(optionEl);\r\n  };\r\n\r\n  private observeNativeSelectOptions = (): void => {\r\n    observeOptions(this.nativeSelectEl, () => {\r\n      this.loadOptions();\r\n    });\r\n  };\r\n\r\n  private updateSelectedOptionFromNativeSelect = (): void => {\r\n    const selectedNativeOptionEl = this.nativeSelectEl.querySelector('option:checked');\r\n    if (selectedNativeOptionEl) {\r\n      const index = +selectedNativeOptionEl.getAttribute(`data-${this.uuid}-index`);\r\n      const selectedOptionEl = this.optionElByIndex(index);\r\n      this.selectOption(selectedOptionEl, false);\r\n    }\r\n  };\r\n\r\n  private selectOption = (optionEl: HTMLElement, fireEvent = true): void => {\r\n    Array.from(this.listEl.querySelectorAll('.dropdown-option')).forEach((otherOptionEl) => {\r\n      otherOptionEl.setAttribute('aria-selected', 'false');\r\n    });\r\n    optionEl.setAttribute('aria-selected', 'true');\r\n    optionEl.scrollIntoView({ block: 'nearest', inline: 'nearest' });\r\n\r\n    this.headTextEl.innerHTML = optionEl.textContent;\r\n    this.selectedOptionIndex = +optionEl.getAttribute(`data-${this.uuid}-index`);\r\n    this.nativeSelectEl.value = this.nativeOptionElByIndex(this.selectedOptionIndex).value;\r\n\r\n    if (fireEvent) {\r\n      this.nativeSelectEl.dispatchEvent(new Event('change', { bubbles: true })); // bubbles: true is required for the event to be caught in react\r\n    }\r\n  };\r\n\r\n  private onHeadKeydown = (e: KeyboardEvent): void => {\r\n    // if the dropdown is opened via keyboard, add a border to the currently selected option\r\n    if (['SpaceBar', 'Enter', ' '].includes(e.key)) {\r\n      this.optionElByIndex(this.selectedOptionIndex).classList.add('active');\r\n      return;\r\n    }\r\n\r\n    // if navigating with the arrow keys, select the next/previous option (if it exists) and add a border to it\r\n    if (!['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const offset = ['ArrowDown', 'ArrowRight'].includes(e.key) ? 1 : -1;\r\n    const nextIndex = this.selectedOptionIndex + offset;\r\n    const nextOptionEl = this.optionElByIndex(nextIndex);\r\n    if (nextOptionEl) {\r\n      Array.from(this.listEl.querySelectorAll('.dropdown-option')).forEach((optionEl) => {\r\n        optionEl.classList.remove('active');\r\n      });\r\n      nextOptionEl.classList.add('active');\r\n      this.selectOption(nextOptionEl);\r\n    }\r\n  };\r\n\r\n  private onHeadClick = (e: MouseEvent): void => {\r\n    e.stopPropagation();\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    closeOtherDropdowns(this);\r\n    if (!this.useNativeSelect) {\r\n      this.open = !this.open;\r\n    }\r\n  };\r\n\r\n  private optionElByIndex = (index: number): HTMLElement => {\r\n    return this.listEl.querySelector(`[data-${this.uuid}-index=\"${index}\"]`);\r\n  };\r\n\r\n  private nativeOptionElByIndex = (index: number): HTMLOptionElement => {\r\n    return this.nativeSelectEl.querySelector(`option[data-${this.uuid}-index=\"${index}\"]`);\r\n  };\r\n\r\n  render() {\r\n    injectCSS(\r\n      this.el,\r\n      createStyles,\r\n      this.labelPosition,\r\n      this.disabled,\r\n      this.useNativeSelect,\r\n      this.validationstate,\r\n      this.labelWidth,\r\n      this.open\r\n    );\r\n\r\n    const arrowIconColor = this.disabled ? 'grey03' : 'darkBlue02';\r\n\r\n    const label = (\r\n      <label\r\n        id={`${this.uuid}_label`}\r\n        aria-hidden={this.labelPosition === 'default' ? 'true' : 'false'}>\r\n        {this.label}\r\n      </label>\r\n    );\r\n\r\n    return (\r\n      <Host data-uuid={this.uuid}>\r\n        {!this.useNativeSelect && <slot></slot>}\r\n\r\n        <div class=\"container\">\r\n          {this.labelPosition !== 'default' && label}\r\n\r\n          {this.useNativeSelect ? (\r\n            <div\r\n              ref={(el) => (this.nativeSelectWrapperEl = el)}\r\n              class={{\r\n                'native-select-wrapper': true,\r\n                'dropdown-head': true,\r\n                disabled: this.disabled,\r\n                error: this.validationstate === 'error',\r\n              }}>\r\n              {this.labelPosition === 'default' && label}\r\n              <slot></slot>\r\n              <dc-ui-icon\r\n                class=\"arrow-icon\"\r\n                name=\"dc_down\"\r\n                size=\"tiny\"\r\n                color={arrowIconColor}></dc-ui-icon>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              class=\"dropdown\"\r\n              ref={(el) => (this.dropdownEl = el)}>\r\n              <button\r\n                ref={(el) => (this.headEl = el)}\r\n                class={{\r\n                  'dropdown-head': true,\r\n                  disabled: this.disabled,\r\n                  error: this.validationstate === 'error',\r\n                }}\r\n                tabindex={this.disabled ? '-1' : '0'}\r\n                role=\"combobox\"\r\n                aria-controls={`${this.uuid}_list`}\r\n                aria-expanded={this.open ? 'true' : 'false'}\r\n                aria-haspopup=\"listbox\"\r\n                aria-labelledby={`${this.uuid}_label`}\r\n                aria-activedescendant={`${this.uuid}_option-${this.selectedOptionIndex}`}\r\n                aria-live={this.open ? 'off' : 'polite'}\r\n                onClick={this.onHeadClick}\r\n                onKeyDown={this.onHeadKeydown}>\r\n                {this.labelPosition === 'default' && label}\r\n                <span\r\n                  ref={(el) => (this.headTextEl = el)}\r\n                  class=\"dropdown-head-text\"\r\n                  tabindex=\"-1\"></span>\r\n                <dc-ui-icon\r\n                  class=\"arrow-icon\"\r\n                  name=\"dc_down\"\r\n                  size=\"tiny\"\r\n                  color={arrowIconColor}></dc-ui-icon>\r\n              </button>\r\n\r\n              <div\r\n                id={`${this.uuid}_list`}\r\n                ref={(el) => (this.listEl = el)}\r\n                tabindex=\"-1\"\r\n                class={{\r\n                  'dropdown-list': true,\r\n                  open: this.open,\r\n                }}></div>\r\n            </div>\r\n          )}\r\n\r\n          {this.validationstate !== 'none' && (\r\n            <StateMessage\r\n              state={this.validationstate}\r\n              message={this.message}></StateMessage>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","export const font = {\r\n  url: 'https://dc-webtoolkit.azureedge.net/font/fontStyles.css',\r\n  family: 'Bosch Sans',\r\n  size: {\r\n    small: '1rem',\r\n    medium: '1.5rem',\r\n    large: '2rem',\r\n  },\r\n};\r\n\r\n// inject font into the document\r\nexport function injectFont() {\r\n  // console.log('injectFont -- disabled');\r\n\r\n  // check if the font is already injected\r\n  if (\r\n    document.querySelector(`link[href=\"${font.url}\"]`) ||\r\n    document.querySelector(`link[href*=\"nextgen-web-ui-toolkit.css\"]`)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  const link = document.createElement('link');\r\n  link.rel = 'stylesheet';\r\n  link.href = font.url;\r\n  document.head.appendChild(link);\r\n}\r\n","export type TBreakpointNames = 'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\r\nexport const breakpoints: { [key in TBreakpointNames]: number } = {\r\n  xxs: 0,\r\n  xs: 480,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n  xxl: 1920,\r\n};\r\n\r\ntype BPKey<K extends TBreakpointNames> = Extract<TBreakpointNames, K>;\r\n\r\nexport function mediaQueryMin(min: BPKey<'xxs'>): '@media(min-width:0px)';\r\nexport function mediaQueryMin(min: BPKey<'xs'>): `@media(min-width:480px)`;\r\nexport function mediaQueryMin(min: BPKey<'sm'>): '@media(min-width:576px)';\r\nexport function mediaQueryMin(min: BPKey<'md'>): '@media(min-width:768px)';\r\nexport function mediaQueryMin(min: BPKey<'lg'>): '@media(min-width:992px)';\r\nexport function mediaQueryMin(min: BPKey<'xl'>): '@media(min-width:1200px)';\r\nexport function mediaQueryMin(min: BPKey<'xxl'>): '@media(min-width:1920px)';\r\nexport function mediaQueryMin(min: TBreakpointNames): string {\r\n  return `@media(min-width:${breakpoints[min]}px)`;\r\n}\r\n\r\nexport function mediaQueryMax(max: BPKey<'xs'>): '@media(max-width:479px)';\r\nexport function mediaQueryMax(max: BPKey<'sm'>): '@media(max-width:575px)';\r\nexport function mediaQueryMax(max: BPKey<'md'>): '@media(max-width:767px)';\r\nexport function mediaQueryMax(max: BPKey<'lg'>): '@media(max-width:991px)';\r\nexport function mediaQueryMax(max: BPKey<'xl'>): '@media(max-width:1199px)';\r\nexport function mediaQueryMax(max: BPKey<'xxl'>): '@media(max-width:1919px)';\r\nexport function mediaQueryMax(max: Exclude<TBreakpointNames, 'xxs'>): string {\r\n  return `@media(max-width:${breakpoints[max] - 1}px)`;\r\n}\r\n","type HTMLElementOrDocument = HTMLElement | Document;\r\n\r\nconst slottedStyleTagId = 'dc-ui-slotted-styles';\r\n\r\nexport const getNodeToPrependTo = (rootNode: HTMLElementOrDocument): HTMLElement => {\r\n  return rootNode === document ? rootNode.head : (rootNode as HTMLElement);\r\n};\r\n\r\n/**\r\n * Adds an inheritable style for slotted content.\r\n * @param host\r\n * @param slottedStyles\r\n * @returns void\r\n */\r\nexport const attachSlottedCss = (host: HTMLElement, slottedStyles: string): void => {\r\n  const css = slottedStyles;\r\n  const rootNode = host.getRootNode() as HTMLElementOrDocument;\r\n\r\n  // isConnected check is needed because component may be removed from DOM in \"parallel\" and therefore\r\n  // the style doesn't matter and could produce validation errors because it is appended as a child\r\n  if (!rootNode.isConnected) {\r\n    return;\r\n  }\r\n\r\n  let style = document.getElementById(slottedStyleTagId);\r\n  if (!style) {\r\n    style = document.createElement('style');\r\n    style.id = slottedStyleTagId;\r\n\r\n    const prependTo = getNodeToPrependTo(rootNode);\r\n    const charsetTag = prependTo.querySelector('meta[charset]');\r\n\r\n    if (charsetTag !== null) {\r\n      prependTo.insertBefore(style, charsetTag.nextSibling);\r\n    } else if (prependTo.childNodes.length > 0) {\r\n      prependTo.insertBefore(style, prependTo.firstChild);\r\n    } else {\r\n      prependTo.appendChild(style);\r\n    }\r\n  }\r\n\r\n  style.appendChild(document.createTextNode(css));\r\n  style.normalize(); // merge text nodes\r\n};\r\n","import { FunctionalComponent, h } from '@stencil/core';\r\nimport { TValidationState } from '../../../utils';\r\n\r\ntype StateMessageProps = {\r\n  message?: string;\r\n  state: TValidationState;\r\n};\r\n\r\nexport const StateMessage: FunctionalComponent<StateMessageProps> = ({ message, state }) => {\r\n  return (\r\n    <span class=\"message\">\r\n      {state === 'error' && (\r\n        <dc-ui-icon\r\n          name=\"dc_status_error\"\r\n          color=\"red02\"\r\n          size=\"tiny\"></dc-ui-icon>\r\n      )}\r\n      {message}\r\n    </span>\r\n  );\r\n};\r\n","import { TValidationState, color } from '../utils';\r\n\r\ntype TFormStateColorStyles = {\r\n  formStateColor: string | undefined;\r\n};\r\n\r\nconst formStateColors = {\r\n  error: color.red02,\r\n};\r\n\r\nexport const getFormStateColor = (state: TValidationState): TFormStateColorStyles => {\r\n  return { formStateColor: formStateColors[state] };\r\n};\r\n","import { Styles } from 'jss';\r\nimport { FULL_TEXT_STYLES, TValidationState } from '../../../utils';\r\nimport { getFormStateColor } from '../../../styles/form-state-color-styles';\r\n\r\nexport const getStateMessageStyles = (state: TValidationState): Styles<'message'> => {\r\n  return {\r\n    message: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      gap: '8px',\r\n      marginTop: '5px',\r\n      color: getFormStateColor(state).formStateColor,\r\n      ...FULL_TEXT_STYLES['state-message'].base,\r\n    },\r\n  };\r\n};\r\n"],"names":["FULL_TEXT_STYLES","lg","fontSize","lineHeight","md","base","fontWeight","h1","h2","h3","h4","h5","h6","text","letterSpacing","textTransform","focus","parseJSON","prop","JSON","parse","replace","_a","addImportantToEachRule","input","Object","entries","reduce","result","_ref","key","value","addImportantToRule","buildResponsiveStyles","rawValue","getJssStyle","keys","filter","breakpointValue","assign","mediaQueryMin","buildResponsiveStylesWithProps","extraProp","_len","arguments","length","args","Array","_key","buildResponsiveTextStyles","styleName","fontObject","Error","styles","forEach","mediaQuery","checkSlotContent","slot","selector","children","neededElement","querySelector","innerHTML","appendChild","color","focusColor","redBrand01","redBrand02","redBrand03","turquoise01","turquoise02","turquoise03","turquoise04","turquoise05","turquoise06","grey01","grey02","grey03","grey04","grey05","grey06","grey07","grey08","grey09","grey10","green01","green02","green03","yellow01","yellow02","yellow03","red01","red02","red03","orange01","orange02","darkBlue01","darkBlue02","darkBlue03","white","black","createStyles","labelPosition","disabled","useNativeSelectEl","validationstate","labelWidth","open","verticalPadding","getCss","display","fontFamily","mergeDeep","labelWidthResponsive","gridTemplateColumns","gridTemplateRows","columnGap","whiteSpace","alignSelf","marginBottom","pointerEvents","maxWidth","position","width","boxSizing","border","backgroundColor","padding","textAlign","cursor","userSelect","borderColor","outline","boxShadow","outlineOffset","height","zIndex","overflow","textOverflow","top","right","transform","transition","margin","listStyleType","visibility","left","maxHeight","overflowY","paddingLeft","gridColumnStart","getStateMessageStyles","registeredDropdowns","onDocumentClick","closeAllDropdowns","onDocumentKeydown","e","dropdown","closeDropdown","from","listEl","optionEl","classList","remove","DcUiDropdownWrapper","useNativeSelect","loadOptions","this","nativeSelectEl","optGroups","querySelectorAll","add","optGroup","addOptGroup","ul","document","createElement","setAttribute","uuid","options","nativeOptionEl","addOption","updateSelectedOptionFromNativeSelect","optGroupEl","optGroupHeadingEl","label","index","id","parent","icon","addEventListener","selectOption","observeNativeSelectOptions","observeOptions","selectedNativeOptionEl","getAttribute","selectedOptionEl","optionElByIndex","fireEvent","undefined","_this","otherOptionEl","scrollIntoView","block","inline","headTextEl","textContent","selectedOptionIndex","nativeOptionElByIndex","dispatchEvent","Event","bubbles","onHeadKeydown","includes","preventDefault","offset","nextIndex","nextOptionEl","onHeadClick","stopPropagation","except","closeOtherDropdowns","componentWillLoad","injectFont","el","createUuid","window","console","warn","componentDidLoad","attachSlottedCss","getSlottedCss","nativeElTopPadding","nativeElBottomPadding","buildSlottedStyles","appearance","WebkitAppearance","inset","background","selectObserver","MutationObserver","_mutations","_observer","observe","attributes","childList","subtree","push","connectedCallback","disconnectedCallback","indexOf","splice","removeEventListener","removeDocumentEventListeners","render","injectCSS","arrowIconColor","h","Host","class","ref","nativeSelectWrapperEl","error","name","size","dropdownEl","headEl","tabindex","role","onClick","onKeyDown","StateMessage","state","message","font","url","family","small","medium","large","link","rel","href","head","breakpoints","xxs","xs","sm","xl","xxl","min","mediaQueryMax","max","slottedStyleTagId","host","slottedStyles","css","rootNode","getRootNode","isConnected","style","getElementById","prependTo","getNodeToPrependTo","charsetTag","insertBefore","nextSibling","childNodes","firstChild","createTextNode","normalize","formStateColors","getFormStateColor","formStateColor","alignItems","gap","marginTop"],"sourceRoot":""}
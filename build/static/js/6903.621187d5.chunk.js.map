{"version":3,"file":"static/js/6903.621187d5.chunk.js","mappings":"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","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/variables/text-styles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/breakpointCustom.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-flex/flex-styles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-flex/dc-ui-flex.tsx","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/mediaQuery.ts"],"sourcesContent":["export const FULL_TEXT_STYLES = {\r\n  'h-superbig': {\r\n    lg: {\r\n      fontSize: '72px',\r\n      lineHeight: '90px',\r\n    },\r\n    md: {\r\n      fontSize: '56px',\r\n      lineHeight: '70px',\r\n    },\r\n    base: {\r\n      fontSize: '56px',\r\n      lineHeight: '70px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'h-big': {\r\n    lg: {\r\n      fontSize: '56px',\r\n      lineHeight: '70px',\r\n    },\r\n    md: {\r\n      fontSize: '42px',\r\n      lineHeight: '52px',\r\n    },\r\n    base: {\r\n      fontSize: '42px',\r\n      lineHeight: '52px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h1: {\r\n    lg: {\r\n      fontSize: '42px',\r\n      lineHeight: '52px',\r\n    },\r\n    md: {\r\n      fontSize: '36px',\r\n      lineHeight: '48px',\r\n    },\r\n    base: {\r\n      fontSize: '32px',\r\n      lineHeight: '40px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h2: {\r\n    lg: {\r\n      fontSize: '32px',\r\n      lineHeight: '40px',\r\n    },\r\n    base: {\r\n      fontSize: '28px',\r\n      lineHeight: '36px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h3: {\r\n    lg: {\r\n      fontSize: '28px',\r\n      lineHeight: '36px',\r\n    },\r\n    base: {\r\n      fontSize: '24px',\r\n      lineHeight: '36px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h4: {\r\n    base: {\r\n      fontSize: '20px',\r\n      lineHeight: '32px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h5: {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  h6: {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'emphasized-text': {\r\n    base: {\r\n      fontSize: '28px',\r\n      lineHeight: '36px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'emphasized-additional-text': {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  'intro-text': {\r\n    base: {\r\n      fontSize: '20px',\r\n      lineHeight: '32px',\r\n    },\r\n  },\r\n  'text-line-spacing-big': {\r\n    base: {\r\n      fontSize: '18px',\r\n      lineHeight: '28px',\r\n    },\r\n  },\r\n  text: {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n    },\r\n  },\r\n  'strong-text': {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  'mid-size-text': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '24px',\r\n      letterSpacing: '0.16px',\r\n    },\r\n  },\r\n  'strong-mid-size-text': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '24px',\r\n      letterSpacing: '0.16px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  'small-text': {\r\n    base: {\r\n      fontSize: '12px',\r\n      lineHeight: '20px',\r\n      letterSpacing: '0.32px',\r\n    },\r\n  },\r\n  'strong-small-text': {\r\n    base: {\r\n      fontSize: '12px',\r\n      lineHeight: '20px',\r\n      letterSpacing: '0.32px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  'btn-small': {\r\n    base: {\r\n      fontSize: '0.75rem',\r\n      lineHeight: '1rem',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'btn-normal': {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '20px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'btn-large': {\r\n    base: {\r\n      fontSize: '1.25rem',\r\n      lineHeight: '1.375rem',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  'link-small': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '16px',\r\n      letterSpacing: '0.16px',\r\n    },\r\n  },\r\n  'link-normal': {\r\n    base: {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n    },\r\n  },\r\n  'label-checkbox': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '16px',\r\n      letterSpacing: '0.16px',\r\n    },\r\n  },\r\n  'label-textarea': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '24px',\r\n      letterSpacing: '0.16px',\r\n      textTransform: 'uppercase',\r\n    },\r\n    focus: {\r\n      fontSize: '12px',\r\n      lineHeight: '13px',\r\n      letterSpacing: '0.32px',\r\n      textTransform: 'uppercase',\r\n    },\r\n  },\r\n  'label-input': {\r\n    base: {\r\n      fontSize: '14px',\r\n      lineHeight: '24px',\r\n      letterSpacing: '0.16px',\r\n      textTransform: 'uppercase',\r\n    },\r\n    focus: {\r\n      fontSize: '12px',\r\n      letterSpacing: '0.32px',\r\n      lineHeight: '13px',\r\n      textTransform: 'uppercase',\r\n    },\r\n  },\r\n  'state-message': {\r\n    base: {\r\n      fontSize: '12px',\r\n      lineHeight: '13px',\r\n      letterSpacing: '0.32px',\r\n    },\r\n  },\r\n};\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport type { JssStyle, Styles } from 'jss';\r\nimport { TBreakpointNames, mediaQueryMin } from './mediaQuery';\r\nimport { FULL_TEXT_STYLES } from '../variables';\r\n\r\nexport const BREAKPOINTS = ['base', 'xs', 'sm', 'md', 'lg', 'xl'] as const;\r\nexport type BreakpointKey = (typeof BREAKPOINTS)[number];\r\nexport type BreakpointValues<T> = {\r\n  [key in BreakpointKey]?: T;\r\n} & {\r\n  base: T;\r\n};\r\n\r\n// string is needed in order to pass and parse objects via prop decorator\r\nexport type BreakpointCustomizable<T> = T | BreakpointValues<T> | string;\r\nexport type BreakpointValue = string | number | boolean;\r\n\r\nexport const parseJSON = (\r\n  prop: BreakpointCustomizable<BreakpointValue>\r\n): BreakpointValues<BreakpointValue> | BreakpointValue => {\r\n  if (typeof prop === 'string') {\r\n    try {\r\n      // prop is potentially JSON parsable string, e.g. \"{ base: 'block', l: 'inline' }\" or \"true\" or \"false\"\r\n      return JSON.parse(\r\n        prop\r\n          .replace(/'/g, '\"') // convert single quotes to double quotes\r\n          .replace(/[\\s\"]?([a-z]+)[\\s\"]?:([^//])/g, '\"$1\":$2') // wrap keys in double quotes if they don't have them but ignore potential urls\r\n      );\r\n    } catch {\r\n      // prop is string, e.g. \"block\" or \"inline\"\r\n      return prop;\r\n    }\r\n  } else {\r\n    // prop is object, e.g. { base: 'block', l: 'inline' } or number, e.g. 123 or boolean, e.g. true\r\n    return prop;\r\n  }\r\n};\r\n\r\n// do we need that ?\r\nexport const addImportantToRule = (value: any): string => `${value} !important`;\r\n\r\n// do we need that ?\r\nexport const addImportantToEachRule = (input: JssStyle): JssStyle => {\r\n  return Object.entries(input).reduce(\r\n    (result, [key, value]) =>\r\n      value === null\r\n        ? result\r\n        : ((result[key] =\r\n            typeof value === 'object'\r\n              ? addImportantToEachRule(value as JssStyle)\r\n              : addImportantToRule(value)),\r\n          result),\r\n    {} as JssStyle\r\n  );\r\n};\r\n\r\nexport type GetJssStyleFunction = (value?: any) => JssStyle;\r\nexport type GetJssStyleFunctionWithProp = (value: any, ...args: any[]) => JssStyle;\r\n\r\nexport const buildResponsiveStyles = <T>(\r\n  rawValue: BreakpointCustomizable<T>,\r\n  getJssStyle: GetJssStyleFunction\r\n): Styles => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n  const value = parseJSON(rawValue as any);\r\n\r\n  const returnValue =\r\n    typeof value === 'object'\r\n      ? Object.keys(value)\r\n          // base styles are applied on root object, responsive styles are nested within\r\n          // hence it is used as the initial object within reduce function\r\n          .filter((key) => key !== 'base')\r\n          .reduce(\r\n            (result, breakpointValue: TBreakpointNames) => ({\r\n              ...result,\r\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n              [mediaQueryMin(breakpointValue as any)]: getJssStyle(\r\n                value[breakpointValue]\r\n              ) as Styles,\r\n            }),\r\n            getJssStyle(value.base) as Styles\r\n          )\r\n      : (getJssStyle(value) as Styles);\r\n\r\n  return returnValue;\r\n};\r\n\r\nexport const buildResponsiveStylesWithProps = <T>(\r\n  rawValue: BreakpointCustomizable<T>,\r\n  getJssStyle: GetJssStyleFunctionWithProp,\r\n  extraProp: string,\r\n  ...args: any[]\r\n): Styles => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n  const value = parseJSON(rawValue as any);\r\n\r\n  const returnValue =\r\n    typeof value === 'object'\r\n      ? Object.keys(value)\r\n          // base styles are applied on root object, responsive styles are nested within\r\n          // hence it is used as the initial object within reduce function\r\n          .filter((key) => key !== 'base')\r\n          .reduce(\r\n            (result, breakpointValue: TBreakpointNames) => ({\r\n              ...result,\r\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n              [mediaQueryMin(breakpointValue as any)]: getJssStyle(\r\n                value[breakpointValue],\r\n                extraProp,\r\n                ...args\r\n              ) as Styles,\r\n            }),\r\n            getJssStyle(value.base, extraProp, ...args) as Styles\r\n          )\r\n      : (getJssStyle(value, extraProp, ...args) as Styles);\r\n  return returnValue;\r\n};\r\n\r\nexport const buildResponsiveTextStyles = (styleName: string) => {\r\n  const fontObject = FULL_TEXT_STYLES[styleName];\r\n  if (!fontObject) {\r\n    throw new Error(`Text style ${styleName} does not exist`);\r\n  }\r\n\r\n  let styles = {};\r\n\r\n  // itterate over fontObject\r\n  Object.keys(fontObject).forEach((key) => {\r\n    // check if key is 'base'\r\n    if (key === 'base') {\r\n      styles = {\r\n        ...styles,\r\n        ...fontObject[key],\r\n      };\r\n      return;\r\n    }\r\n\r\n    // get media query from object key\r\n    const mediaQuery = mediaQueryMin(key as any);\r\n\r\n    // add styles from fontObject to mediaQuery\r\n    styles = {\r\n      ...styles,\r\n      [mediaQuery]: {\r\n        ...fontObject[key],\r\n      },\r\n    };\r\n  });\r\n\r\n  return styles;\r\n};\r\n","import { getCss, buildResponsiveStyles, mergeDeep } from '../../utils';\r\nimport {\r\n  TFlexDirection,\r\n  FlexDirectionType,\r\n  TFlexWrap,\r\n  FlexWrapType,\r\n  TFlexGutterSize,\r\n  FlexGutterSizeType,\r\n  TFlexAlignContent,\r\n  TFlexAlignItem,\r\n  TFlexJustifyContent,\r\n  FlexAlignContentType,\r\n  FlexAlignItemType,\r\n  TFlexInline,\r\n  FlexInlineType,\r\n} from './flex-utils';\r\n\r\nexport const createStyles = (\r\n  inline: TFlexInline,\r\n  direction: TFlexDirection,\r\n  wrap: TFlexWrap,\r\n  gutter: TFlexGutterSize,\r\n  alignContent: TFlexAlignContent,\r\n  alignItems: TFlexAlignItem,\r\n  justifyContent: TFlexJustifyContent\r\n): string => {\r\n  return getCss({\r\n    '@global': {\r\n      ':host': mergeDeep(\r\n        buildResponsiveStyles(inline, (inlineResponsive: FlexInlineType) => ({\r\n          display: inlineResponsive ? 'inline-flex' : 'flex',\r\n        })),\r\n        buildResponsiveStyles(direction, (flexDirectionResponsive: FlexDirectionType) => ({\r\n          flexDirection: flexDirectionResponsive,\r\n        })),\r\n        buildResponsiveStyles(wrap, (flexWrapResponsive: FlexWrapType) => ({\r\n          flexWrap: flexWrapResponsive,\r\n        })),\r\n        buildResponsiveStyles(gutter, (gutterResponsive: FlexGutterSizeType) => ({\r\n          gap: `${gutterResponsive}px`,\r\n        })),\r\n        buildResponsiveStyles(alignContent, (alignContentResponsive: FlexAlignContentType) => ({\r\n          alignContent: alignContentResponsive,\r\n        })),\r\n        buildResponsiveStyles(alignItems, (alignItemsResponsive: FlexAlignItemType) => ({\r\n          alignItems: alignItemsResponsive,\r\n        })),\r\n        buildResponsiveStyles(justifyContent, (justifyContentResponsive: FlexAlignContentType) => ({\r\n          justifyContent: justifyContentResponsive,\r\n        }))\r\n      ),\r\n    },\r\n  });\r\n};\r\n","import { Component, Element, h, Prop } from '@stencil/core';\r\nimport { injectCSS } from '../../utils';\r\nimport { createStyles } from './flex-styles';\r\nimport {\r\n  TFlexAlignContent,\r\n  TFlexAlignItem,\r\n  TFlexDirection,\r\n  TFlexJustifyContent,\r\n  TFlexGutterSize,\r\n  TFlexWrap,\r\n  TFlexInline,\r\n} from './flex-utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-flex',\r\n  shadow: true,\r\n})\r\nexport class DcUiFlex {\r\n  /** Host element */\r\n  @Element() host!: HTMLElement;\r\n  /** Defines the direction of the main and cross axis */\r\n  @Prop() direction?: TFlexDirection = 'row';\r\n  /** Wrapping behavior of items */\r\n  @Prop() wrap?: TFlexWrap = 'nowrap';\r\n  /** Defines the gutter size */\r\n  @Prop() gutter?: TFlexGutterSize = 0;\r\n  /** This aligns a flex container's individual lines when there is extra space in the cross-axis, similar to how 'justifyContent' aligns individual items along the main axis. */\r\n  @Prop() alignContent?: TFlexAlignContent = 'stretch';\r\n  /** Defines how the flex items are aligned along the cross axis. */\r\n  @Prop() alignItems?: TFlexAlignItem = 'stretch';\r\n  /** Defines how the flex items are aligned along the main axis. */\r\n  @Prop() justifyContent?: TFlexJustifyContent = 'flex-start';\r\n  /** Defines the flex containers content flow if 2 or more containers are siblings of each other. */\r\n  @Prop() inline?: TFlexInline = false;\r\n\r\n  render() {\r\n    injectCSS(\r\n      this.host,\r\n      createStyles,\r\n      this.inline,\r\n      this.direction,\r\n      this.wrap,\r\n      this.gutter,\r\n      this.alignContent,\r\n      this.alignItems,\r\n      this.justifyContent\r\n    );\r\n\r\n    return <slot />;\r\n  }\r\n}\r\n","export type TBreakpointNames = 'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\r\nexport const breakpoints: { [key in TBreakpointNames]: number } = {\r\n  xxs: 0,\r\n  xs: 480,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n  xxl: 1920,\r\n};\r\n\r\ntype BPKey<K extends TBreakpointNames> = Extract<TBreakpointNames, K>;\r\n\r\nexport function mediaQueryMin(min: BPKey<'xxs'>): '@media(min-width:0px)';\r\nexport function mediaQueryMin(min: BPKey<'xs'>): `@media(min-width:480px)`;\r\nexport function mediaQueryMin(min: BPKey<'sm'>): '@media(min-width:576px)';\r\nexport function mediaQueryMin(min: BPKey<'md'>): '@media(min-width:768px)';\r\nexport function mediaQueryMin(min: BPKey<'lg'>): '@media(min-width:992px)';\r\nexport function mediaQueryMin(min: BPKey<'xl'>): '@media(min-width:1200px)';\r\nexport function mediaQueryMin(min: BPKey<'xxl'>): '@media(min-width:1920px)';\r\nexport function mediaQueryMin(min: TBreakpointNames): string {\r\n  return `@media(min-width:${breakpoints[min]}px)`;\r\n}\r\n\r\nexport function mediaQueryMax(max: BPKey<'xs'>): '@media(max-width:479px)';\r\nexport function mediaQueryMax(max: BPKey<'sm'>): '@media(max-width:575px)';\r\nexport function mediaQueryMax(max: BPKey<'md'>): '@media(max-width:767px)';\r\nexport function mediaQueryMax(max: BPKey<'lg'>): '@media(max-width:991px)';\r\nexport function mediaQueryMax(max: BPKey<'xl'>): '@media(max-width:1199px)';\r\nexport function mediaQueryMax(max: BPKey<'xxl'>): '@media(max-width:1919px)';\r\nexport function mediaQueryMax(max: Exclude<TBreakpointNames, 'xxs'>): string {\r\n  return `@media(max-width:${breakpoints[max] - 1}px)`;\r\n}\r\n"],"names":["FULL_TEXT_STYLES","lg","fontSize","lineHeight","md","base","fontWeight","h1","h2","h3","h4","h5","h6","text","letterSpacing","textTransform","focus","parseJSON","prop","JSON","parse","replace","_a","addImportantToEachRule","input","Object","entries","reduce","result","_ref","key","value","addImportantToRule","buildResponsiveStyles","rawValue","getJssStyle","keys","filter","breakpointValue","assign","mediaQueryMin","buildResponsiveStylesWithProps","extraProp","_len","arguments","length","args","Array","_key","buildResponsiveTextStyles","styleName","fontObject","Error","styles","forEach","mediaQuery","createStyles","inline","direction","wrap","gutter","alignContent","alignItems","justifyContent","getCss","mergeDeep","inlineResponsive","display","flexDirectionResponsive","flexDirection","flexWrapResponsive","flexWrap","gutterResponsive","gap","alignContentResponsive","alignItemsResponsive","justifyContentResponsive","DcUiFlex","render","injectCSS","this","host","h","breakpoints","xxs","xs","sm","xl","xxl","min","mediaQueryMax","max"],"sourceRoot":""}
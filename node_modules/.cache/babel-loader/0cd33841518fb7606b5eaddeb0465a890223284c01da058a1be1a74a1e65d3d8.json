{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LGD1KOR\\\\Desktop\\\\react\\\\my-app\\\\src\\\\Preview2D\\\\Preview2DApi.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { defineCustomElements } from '@boschrexroth/nextgen-web-ui-toolkit-react';\n// defineCustomElements();\n\n// const Preview2DApi = ({ filepath }) => {\n//     const [data, setData] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [selectedImage, setSelectedImage] = useState(\"\");\n//     const [imageLoading, setImageLoading] = useState(false);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const params = {\n//                     apikey: 'e66120f9d9624823884cac1bf290ea88',\n//                     path: filepath\n//                 };\n//                 const queryString = new URLSearchParams(params).toString();\n//                 const url = `https://webapi.partcommunity.com/service/derivationviews?${queryString}`;\n//                 const response = await fetch(url);\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! status: ${response.status}`);\n//                 }\n//                 const result = await response.json();\n//                 setData(result);\n//                 if (result.views.length > 0) {\n//                     const filteredViews = result.views.filter(view =>\n//                         ['Front', 'Back', 'Left', 'Right', 'Top', 'Bottom', '3 projection views (EU)'].includes(view.desc)\n//                     );\n//                     if (filteredViews.length > 0) {\n//                         // Set \"3 projection views (US)\" as the default selection\n//                         const defaultView = filteredViews.find(view => view.desc === '3 projection views (EU)');\n//                         if (defaultView) {\n//                             setSelectedImage(defaultView.imageUrl);\n//                             setImageLoading(true);\n//                         } else {\n//                             setSelectedImage(filteredViews[0].imageUrl);\n//                             setImageLoading(true);\n//                         }\n//                     }\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching the data', error);\n//                 setError(error.message);\n//             }\n//         };\n\n//         fetchData();\n//     }, [filepath]);\n\n//     const handleSelectionChange = (event) => {\n//         setSelectedImage(event.target.value);\n//         setImageLoading(true);\n//     };\n\n//     const handleImageLoad = () => {\n//         setImageLoading(false);\n//     };\n\n//     if (error) {\n//         return <div>Error: {error}</div>;\n//     }\n\n//     if (!data) {\n//         return <div>Loading...</div>;\n//     }\n\n//     // Filter views to include only the specified ones\n//     const filteredViews = data.views.filter(view =>\n//         ['Front', 'Back', 'Left', 'Right', 'Top', 'Bottom', '3 projection views (EU)'].includes(view.desc)\n//     );\n\n//     return (\n//         <div>\n//             <div style={{ width: '95%' }}>\n//                 <dc-ui-dropdown-wrapper label=\"Views:\" label-position=\"default\">\n//                 <select onChange={handleSelectionChange} value={selectedImage}>\n//                     {filteredViews.map((item, index) => (\n//                         <option key={index} value={item.imageUrl}>\n//                             {item.desc}\n//                         </option>\n//                     ))}\n//                 </select>\n//                 </dc-ui-dropdown-wrapper>\n//             </div>\n//             <br />\n//             {selectedImage && (\n//                 <div style={{ width: '90%', height: '47vh', border: '2px solid rgba(0, 0, 0, 0.6)', padding: '2%' }}>\n//                     {imageLoading && (\n//                         <div>\n//                             <center style={{ paddingTop: '35%' }}>\n//                                 <dc-ui-progress-icon size=\"large\" message=\"Loading image...\"></dc-ui-progress-icon>\n//                             </center>\n//                         </div>\n//                     )}\n//                     <img\n//                         src={`https://webapi.partcommunity.com${selectedImage}`}\n//                         onLoad={handleImageLoad}\n//                         style={{ width: '100%', height: '48vh', display: imageLoading ? 'none' : 'block' }}\n//                         alt=\"Selected view\"\n//                     />\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Preview2DApi;\nimport React, { useState, useEffect } from \"react\";\nimport { defineCustomElements } from '@boschrexroth/nextgen-web-ui-toolkit-react';\nimport './Preview2DApi.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndefineCustomElements();\nconst Preview2DApi = ({\n  filepath\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(\"\");\n  const [imageLoading, setImageLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const params = {\n          apikey: 'e66120f9d9624823884cac1bf290ea88',\n          path: filepath\n        };\n        const queryString = new URLSearchParams(params).toString();\n        const url = `https://webapi.partcommunity.com/service/derivationviews?${queryString}`;\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result);\n        if (result.views.length > 0) {\n          const filteredViews = result.views.filter(view => ['Front', 'Back', 'Left', 'Right', 'Top', 'Bottom', '3 projection views (EU)'].includes(view.desc));\n          if (filteredViews.length > 0) {\n            // Set \"3 projection views (US)\" as the default selection\n            const defaultView = filteredViews.find(view => view.desc === '3 projection views (EU)');\n            if (defaultView) {\n              setSelectedImage(defaultView.imageUrl);\n              setImageLoading(true);\n            } else {\n              setSelectedImage(filteredViews[0].imageUrl);\n              setImageLoading(true);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching the data', error);\n        setError(error.message);\n      }\n    };\n    fetchData();\n  }, [filepath]);\n  const handleSelectionChange = event => {\n    setSelectedImage(event.target.value);\n    setImageLoading(true);\n  };\n  const handleImageLoad = () => {\n    setImageLoading(false);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 16\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Filter views to include only the specified ones\n  const filteredViews = data.views.filter(view => ['Front', 'Back', 'Left', 'Right', 'Top', 'Bottom', '3 projection views (EU)'].includes(view.desc));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"dc-ui-dropdown-wrapper\", {\n        label: \"Views:\",\n        \"label-position\": \"default\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleSelectionChange,\n          value: selectedImage,\n          children: filteredViews.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.imageUrl,\n            children: item.desc\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: [imageLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"image-loading\",\n          children: /*#__PURE__*/_jsxDEV(\"dc-ui-progress-icon\", {\n            size: \"large\",\n            message: \"Loading image...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://webapi.partcommunity.com${selectedImage}`,\n        onLoad: handleImageLoad,\n        className: imageLoading ? 'image' : 'image image-loaded',\n        alt: \"Selected view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n_s(Preview2DApi, \"ssKlozmnLXxsKEBuJi9AGIgdsdk=\");\n_c = Preview2DApi;\nexport default Preview2DApi;\nvar _c;\n$RefreshReg$(_c, \"Preview2DApi\");","map":{"version":3,"names":["React","useState","useEffect","defineCustomElements","jsxDEV","_jsxDEV","Preview2DApi","filepath","_s","data","setData","error","setError","selectedImage","setSelectedImage","imageLoading","setImageLoading","fetchData","params","apikey","path","queryString","URLSearchParams","toString","url","response","fetch","ok","Error","status","result","json","views","length","filteredViews","filter","view","includes","desc","defaultView","find","imageUrl","console","message","handleSelectionChange","event","target","value","handleImageLoad","children","fileName","_jsxFileName","lineNumber","columnNumber","className","label","onChange","map","item","index","size","src","onLoad","alt","_c","$RefreshReg$"],"sources":["C:/Users/LGD1KOR/Desktop/react/my-app/src/Preview2D/Preview2DApi.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { defineCustomElements } from '@boschrexroth/nextgen-web-ui-toolkit-react';\r\n// defineCustomElements();\r\n\r\n// const Preview2DApi = ({ filepath }) => {\r\n//     const [data, setData] = useState(null);\r\n//     const [error, setError] = useState(null);\r\n//     const [selectedImage, setSelectedImage] = useState(\"\");\r\n//     const [imageLoading, setImageLoading] = useState(false);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             try {\r\n//                 const params = {\r\n//                     apikey: 'e66120f9d9624823884cac1bf290ea88',\r\n//                     path: filepath\r\n//                 };\r\n//                 const queryString = new URLSearchParams(params).toString();\r\n//                 const url = `https://webapi.partcommunity.com/service/derivationviews?${queryString}`;\r\n//                 const response = await fetch(url);\r\n//                 if (!response.ok) {\r\n//                     throw new Error(`HTTP error! status: ${response.status}`);\r\n//                 }\r\n//                 const result = await response.json();\r\n//                 setData(result);\r\n//                 if (result.views.length > 0) {\r\n//                     const filteredViews = result.views.filter(view =>\r\n//                         ['Front', 'Back', 'Left', 'Right', 'Top', 'Bottom', '3 projection views (EU)'].includes(view.desc)\r\n//                     );\r\n//                     if (filteredViews.length > 0) {\r\n//                         // Set \"3 projection views (US)\" as the default selection\r\n//                         const defaultView = filteredViews.find(view => view.desc === '3 projection views (EU)');\r\n//                         if (defaultView) {\r\n//                             setSelectedImage(defaultView.imageUrl);\r\n//                             setImageLoading(true);\r\n//                         } else {\r\n//                             setSelectedImage(filteredViews[0].imageUrl);\r\n//                             setImageLoading(true);\r\n//                         }\r\n//                     }\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching the data', error);\r\n//                 setError(error.message);\r\n//             }\r\n//         };\r\n\r\n//         fetchData();\r\n//     }, [filepath]);\r\n\r\n//     const handleSelectionChange = (event) => {\r\n//         setSelectedImage(event.target.value);\r\n//         setImageLoading(true);\r\n//     };\r\n\r\n//     const handleImageLoad = () => {\r\n//         setImageLoading(false);\r\n//     };\r\n\r\n//     if (error) {\r\n//         return <div>Error: {error}</div>;\r\n//     }\r\n\r\n//     if (!data) {\r\n//         return <div>Loading...</div>;\r\n//     }\r\n\r\n//     // Filter views to include only the specified ones\r\n//     const filteredViews = data.views.filter(view =>\r\n//         ['Front', 'Back', 'Left', 'Right', 'Top', 'Bottom', '3 projection views (EU)'].includes(view.desc)\r\n//     );\r\n\r\n//     return (\r\n//         <div>\r\n//             <div style={{ width: '95%' }}>\r\n//                 <dc-ui-dropdown-wrapper label=\"Views:\" label-position=\"default\">\r\n//                 <select onChange={handleSelectionChange} value={selectedImage}>\r\n//                     {filteredViews.map((item, index) => (\r\n//                         <option key={index} value={item.imageUrl}>\r\n//                             {item.desc}\r\n//                         </option>\r\n//                     ))}\r\n//                 </select>\r\n//                 </dc-ui-dropdown-wrapper>\r\n//             </div>\r\n//             <br />\r\n//             {selectedImage && (\r\n//                 <div style={{ width: '90%', height: '47vh', border: '2px solid rgba(0, 0, 0, 0.6)', padding: '2%' }}>\r\n//                     {imageLoading && (\r\n//                         <div>\r\n//                             <center style={{ paddingTop: '35%' }}>\r\n//                                 <dc-ui-progress-icon size=\"large\" message=\"Loading image...\"></dc-ui-progress-icon>\r\n//                             </center>\r\n//                         </div>\r\n//                     )}\r\n//                     <img\r\n//                         src={`https://webapi.partcommunity.com${selectedImage}`}\r\n//                         onLoad={handleImageLoad}\r\n//                         style={{ width: '100%', height: '48vh', display: imageLoading ? 'none' : 'block' }}\r\n//                         alt=\"Selected view\"\r\n//                     />\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Preview2DApi;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { defineCustomElements } from '@boschrexroth/nextgen-web-ui-toolkit-react';\r\nimport './Preview2DApi.css';\r\n\r\ndefineCustomElements();\r\n\r\nconst Preview2DApi = ({ filepath }) => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [selectedImage, setSelectedImage] = useState(\"\");\r\n    const [imageLoading, setImageLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const params = {\r\n                    apikey: 'e66120f9d9624823884cac1bf290ea88',\r\n                    path: filepath\r\n                };\r\n                const queryString = new URLSearchParams(params).toString();\r\n                const url = `https://webapi.partcommunity.com/service/derivationviews?${queryString}`;\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const result = await response.json();\r\n                setData(result);\r\n                if (result.views.length > 0) {\r\n                    const filteredViews = result.views.filter(view =>\r\n                        ['Front', 'Back', 'Left', 'Right', 'Top', 'Bottom', '3 projection views (EU)'].includes(view.desc)\r\n                    );\r\n                    if (filteredViews.length > 0) {\r\n                        // Set \"3 projection views (US)\" as the default selection\r\n                        const defaultView = filteredViews.find(view => view.desc === '3 projection views (EU)');\r\n                        if (defaultView) {\r\n                            setSelectedImage(defaultView.imageUrl);\r\n                            setImageLoading(true);\r\n                        } else {\r\n                            setSelectedImage(filteredViews[0].imageUrl);\r\n                            setImageLoading(true);\r\n                        }\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching the data', error);\r\n                setError(error.message);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [filepath]);\r\n\r\n    const handleSelectionChange = (event) => {\r\n        setSelectedImage(event.target.value);\r\n        setImageLoading(true);\r\n    };\r\n\r\n    const handleImageLoad = () => {\r\n        setImageLoading(false);\r\n    };\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    if (!data) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // Filter views to include only the specified ones\r\n    const filteredViews = data.views.filter(view =>\r\n        ['Front', 'Back', 'Left', 'Right', 'Top', 'Bottom', '3 projection views (EU)'].includes(view.desc)\r\n    );\r\n\r\n    return (\r\n        <div className=\"preview-container\">\r\n            <div className=\"dropdown-wrapper\">\r\n                <dc-ui-dropdown-wrapper label=\"Views:\" label-position=\"default\">\r\n                    <select onChange={handleSelectionChange} value={selectedImage}>\r\n                        {filteredViews.map((item, index) => (\r\n                            <option key={index} value={item.imageUrl}>\r\n                                {item.desc}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </dc-ui-dropdown-wrapper>\r\n            </div>\r\n            <br />\r\n            {selectedImage && (\r\n                <div className=\"image-container\">\r\n                    {imageLoading && (\r\n                        <div>\r\n                            <center className=\"image-loading\">\r\n                                <dc-ui-progress-icon size=\"large\" message=\"Loading image...\"></dc-ui-progress-icon>\r\n                            </center>\r\n                        </div>\r\n                    )}\r\n                    <img\r\n                        src={`https://webapi.partcommunity.com${selectedImage}`}\r\n                        onLoad={handleImageLoad}\r\n                        className={imageLoading ? 'image' : 'image image-loaded'}\r\n                        alt=\"Selected view\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview2DApi;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
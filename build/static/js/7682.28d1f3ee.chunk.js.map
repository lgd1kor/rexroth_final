{"version":3,"file":"static/js/7682.28d1f3ee.chunk.js","mappings":"iJAAA,MCSaA,EAAW,M,6CAEH,G,aACgB,Q,kBACb,E,aACL,E,eACG,G,cACD,G,mBACI,E,iBACD,E,cACJ,C,CAKlBC,iBAAAA,GACMC,KAAKC,cACPC,YAAW,KACTF,KAAKG,YAAY,GACG,IAAnBH,KAAKI,Y,CAIZC,mBAAAA,GACEL,KAAKM,aAAeN,KAAKO,GAAGC,UAAUC,M,CAGxCN,UAAAA,GACEH,KAAKU,UAAUC,MAAMC,QAAU,IAC/BZ,KAAKO,GAAGI,MAAME,OAAS,GAAGb,KAAKO,GAAGO,iBAElCd,KAAKU,UAAUK,iBAAiB,iBAAiB,KAC/Cf,KAAKO,GAAGI,MAAME,OAAS,IACvBb,KAAKO,GAAGQ,iBAAiB,iBAAiB,KACxCf,KAAKO,GAAGS,QAAQ,GAChB,G,CAINC,QAAAA,GACE,MAAO,CACLC,MAAO,kBACPC,KAAM,wBACNC,QAAS,oBACTC,KAAM,iBACNC,QAAS,oBACTC,QAAS,qBACTvB,KAAKwB,Q,CAGTC,MAAAA,GACE,MAAMC,EAAmB,CACvB,iBAAiB,EACjB,CAAC,kBAAkB1B,KAAKwB,YAAY,EACpC,yBAA0BxB,KAAK2B,QAC/B,yBAA0B3B,KAAK4B,OAC/B,6BAA8B5B,KAAK6B,aAGrC,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,6CACHF,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CACEC,MAAOP,EACPQ,IAAM3B,GAAQP,KAAKU,UAAYH,IAC7BP,KAAK4B,SACLE,EAAAA,EAAAA,GAAA,cAAAE,IAAA,2CACEC,MAAM,sBACNE,KAAMnC,KAAKiB,WACXmB,MAAM,YAGTpC,KAAK6B,cACJC,EAAAA,EAAAA,GAAA,UAAAE,IAAA,2CACEC,MAAM,yBACNI,QAASA,IAAMrC,KAAKG,eACpB2B,EAAAA,EAAAA,GAAA,cAAAE,IAAA,2CACEG,KAAK,WACLG,KAAK,OACLF,MAAM,cAIZN,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CAAKC,MAAM,0BACRjC,KAAKuC,WAAavC,KAAK2B,UACtBG,EAAAA,EAAAA,GAAA,QAAAE,IAAA,2CAAMC,MAAM,2BAA2BjC,KAAKuC,UAG7CvC,KAAKM,aACJwB,EAAAA,EAAAA,GAAA,QAAAE,IAAA,2CAAMC,MAAM,wBACVH,EAAAA,EAAAA,GAAA,QAAAE,IAAA,8CAGHhC,KAAKwC,WAAaxC,KAAKyC,WACtBX,EAAAA,EAAAA,GAAA,KAAAE,IAAA,2CACEC,MAAM,sBACNS,KAAM1C,KAAKyC,UACVzC,KAAKwC,a,wCDzGC,2vF","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-callout/dc-ui-callout.scss?tag=dc-ui-callout&encapsulation=shadow","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-callout/dc-ui-callout.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  transition: height 0.25s ease;\r\n}\r\n\r\n.dc-ui-callout {\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: [icon-start] auto [icon-end] 16px [content-start] 1fr [content-end];\r\n  row-gap: 8px;\r\n  padding: 12px 16px;\r\n  transition: opacity 0.25s ease;\r\n\r\n  // Variants\r\n  &--error {\r\n    background-color: $color-red-01;\r\n\r\n    .dc-ui-callout__icon {\r\n      fill: $color-red-02;\r\n    }\r\n\r\n    .dc-ui-callout__link {\r\n      &:hover {\r\n        color: $color-red-03;\r\n      }\r\n    }\r\n  }\r\n\r\n  &--warning {\r\n    background-color: $color-orange-01;\r\n\r\n    .dc-ui-callout__icon {\r\n      fill: $color-orange-02;\r\n    }\r\n\r\n    .dc-ui-callout__link {\r\n      &:hover {\r\n        color: $color-yellow-03;\r\n      }\r\n    }\r\n  }\r\n\r\n  &--hint,\r\n  &--info {\r\n    background-color: $color-dark-blue-01;\r\n\r\n    .dc-ui-callout__icon {\r\n      fill: $color-dark-blue-02;\r\n    }\r\n\r\n    .dc-ui-callout__link {\r\n      &:hover {\r\n        color: $color-grey-10;\r\n      }\r\n    }\r\n  }\r\n\r\n  &--confirm,\r\n  &--success {\r\n    background-color: $color-green-01;\r\n\r\n    .dc-ui-callout__icon {\r\n      fill: $color-green-02;\r\n    }\r\n\r\n    .dc-ui-callout__link {\r\n      &:hover {\r\n        color: $color-green-03;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Compact modifier\r\n  &--compact {\r\n    .dc-ui-callout__content {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      gap: 1rem;\r\n      justify-content: start;\r\n    }\r\n\r\n    // link\r\n    .dc-ui-callout__link {\r\n      margin-top: 0;\r\n    }\r\n  }\r\n\r\n  // No icon modifier\r\n  &--no-icon {\r\n    grid-template-columns: [content-start] 1fr [content-end];\r\n  }\r\n\r\n  // Dismissible modifier\r\n  &--dismissible {\r\n    .dc-ui-callout__dismiss {\r\n      position: absolute;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      top: 12px;\r\n      right: 16px;\r\n      appearance: none;\r\n      border: none;\r\n      background: none;\r\n      padding: 0;\r\n      cursor: pointer;\r\n\r\n      &:focus-visible {\r\n        outline: 2px solid $color-turquoise-02;\r\n        outline-offset: 2px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__icon {\r\n    grid-column: icon;\r\n  }\r\n\r\n  &__content {\r\n    grid-column: content;\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    flex: 1;\r\n    min-width: 0;\r\n  }\r\n\r\n  &__headline {\r\n    @include font-style('h6');\r\n    color: $color-black;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  &__text {\r\n    @include font-style('mid-size-text');\r\n    color: $color-black;\r\n  }\r\n\r\n  &__link {\r\n    justify-self: start;\r\n    margin-top: 8px;\r\n    @include font-style('mid-size-text');\r\n    text-decoration: underline;\r\n    color: $color-black;\r\n\r\n    &:focus-visible {\r\n      outline: 2px solid $color-turquoise-02;\r\n      outline-offset: 2px;\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Element } from '@stencil/core';\r\nimport { TIcon } from '../../svg/icons';\r\nimport { TCalloutVariant } from './callout-utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-callout',\r\n  styleUrl: 'dc-ui-callout.scss',\r\n  shadow: true,\r\n})\r\nexport class DcUiCallout {\r\n  @Element() el: HTMLElement;\r\n  @Prop() headline = '';\r\n  @Prop() variant: TCalloutVariant = 'error';\r\n  @Prop() dismissible = false;\r\n  @Prop() noIcon = false;\r\n  @Prop() linkLabel = '';\r\n  @Prop() linkHref = '';\r\n  @Prop() shouldRemove = false;\r\n  @Prop() removeDelay = 3;\r\n  @Prop() compact = false;\r\n\r\n  private container: HTMLDivElement;\r\n  private slotFilled: boolean;\r\n\r\n  componentWillLoad() {\r\n    if (this.shouldRemove) {\r\n      setTimeout(() => {\r\n        this.removeSelf();\r\n      }, this.removeDelay * 1000);\r\n    }\r\n  }\r\n\r\n  componentWillRender() {\r\n    this.slotFilled = !!this.el.innerHTML.trim();\r\n  }\r\n\r\n  removeSelf() {\r\n    this.container.style.opacity = '0';\r\n    this.el.style.height = `${this.el.offsetHeight}px`;\r\n\r\n    this.container.addEventListener('transitionend', () => {\r\n      this.el.style.height = '0';\r\n      this.el.addEventListener('transitionend', () => {\r\n        this.el.remove();\r\n      });\r\n    });\r\n  }\r\n\r\n  iconName(): TIcon {\r\n    return {\r\n      error: 'dc_status_error' as TIcon,\r\n      info: 'dc_status_information' as TIcon,\r\n      confirm: 'dc_status_success' as TIcon,\r\n      hint: 'dc_status_hint' as TIcon,\r\n      warning: 'dc_status_warning' as TIcon,\r\n      success: 'dc_status_success' as TIcon,\r\n    }[this.variant];\r\n  }\r\n\r\n  render() {\r\n    const containerClasses = {\r\n      'dc-ui-callout': true,\r\n      [`dc-ui-callout--${this.variant}`]: true,\r\n      'dc-ui-callout--compact': this.compact,\r\n      'dc-ui-callout--no-icon': this.noIcon,\r\n      'dc-ui-callout--dismissible': this.dismissible,\r\n    };\r\n\r\n    return (\r\n      <Host>\r\n        <div\r\n          class={containerClasses}\r\n          ref={(el) => (this.container = el)}>\r\n          {!this.noIcon && (\r\n            <dc-ui-icon\r\n              class=\"dc-ui-callout__icon\"\r\n              name={this.iconName()}\r\n              color=\"inherit\"></dc-ui-icon>\r\n          )}\r\n\r\n          {this.dismissible && (\r\n            <button\r\n              class=\"dc-ui-callout__dismiss\"\r\n              onClick={() => this.removeSelf()}>\r\n              <dc-ui-icon\r\n                name=\"dc_close\"\r\n                size=\"tiny\"\r\n                color=\"inherit\"></dc-ui-icon>\r\n            </button>\r\n          )}\r\n\r\n          <div class=\"dc-ui-callout__content\">\r\n            {this.headline && !this.compact && (\r\n              <span class=\"dc-ui-callout__headline\">{this.headline}</span>\r\n            )}\r\n\r\n            {this.slotFilled && (\r\n              <span class=\"dc-ui-callout__text\">\r\n                <slot></slot>\r\n              </span>\r\n            )}\r\n            {this.linkLabel && this.linkHref && (\r\n              <a\r\n                class=\"dc-ui-callout__link\"\r\n                href={this.linkHref}>\r\n                {this.linkLabel}\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"names":["DcUiCallout","componentWillLoad","this","shouldRemove","setTimeout","removeSelf","removeDelay","componentWillRender","slotFilled","el","innerHTML","trim","container","style","opacity","height","offsetHeight","addEventListener","remove","iconName","error","info","confirm","hint","warning","success","variant","render","containerClasses","compact","noIcon","dismissible","h","Host","key","class","ref","name","color","onClick","size","headline","linkLabel","linkHref","href"],"sourceRoot":""}
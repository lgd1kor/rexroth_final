{"version":3,"file":"static/js/6418.17d509b0.chunk.js","mappings":"gKAAA,MCQaA,EAAwB,M,+BAQ3B,KAAAC,QAAS,EACT,KAAAC,KAAe,EASN,KAAAC,6BAA+B,KACvC,CACL,0BAA0B,EAC1B,iCAAiD,WAAfC,KAAKC,MACvC,mCAAmD,aAAfD,KAAKC,MACzC,mCAAmD,aAAfD,KAAKC,MACzC,gCAA0D,UAAzBD,KAAKE,gBACtC,+BAAgCF,KAAKH,SAIxB,KAAAM,kBAAoB,IACH,UAAzBH,KAAKE,gBAA8B,WAAa,e,WA3BjC,gB,UACA,G,WACA,U,qBACoB,M,CAO5C,oBAAME,GAEJ,OADAJ,KAAKC,MAAQ,UACNI,QAAQC,SAAQ,E,CAkBzBC,iBAAAA,GACMP,KAAKQ,GAAGC,aAENT,KAAKQ,KAAOR,KAAKQ,GAAGC,WAAWC,mBACjCV,KAAKH,QAAS,GAEhBG,KAAKF,KAAOa,MAAMC,KAAKZ,KAAKQ,GAAGC,WAAWI,UAAUC,QAAQd,KAAKQ,IAAM,E,CAI3EO,MAAAA,GACE,MAAMC,GACJC,EAAAA,EAAAA,GAAA,QAAAC,IAAA,2CAAMC,MAAM,iCACgB,UAAzBnB,KAAKE,iBAA8C,aAAfF,KAAKC,OACxCgB,EAAAA,EAAAA,GAAA,cAAYG,KAAMpB,KAAKG,sBAEvBH,KAAKF,MAKX,OACEmB,EAAAA,EAAAA,GAAA,MAAAC,IAAA,2CACEC,MAAOnB,KAAKD,+BAA8B,eACb,WAAfC,KAAKC,MAAqB,OAAS,MAChDD,KAAKqB,MACJJ,EAAAA,EAAAA,GAAA,KACEE,MAAM,+BACNE,KAAMrB,KAAKqB,MACVL,GACDC,EAAAA,EAAAA,GAAA,QAAME,MAAM,qCAAqCnB,KAAKsB,SAGxDL,EAAAA,EAAAA,GAAA,QAAME,MAAM,gCACTH,GACDC,EAAAA,EAAAA,GAAA,QAAME,MAAM,qCAAqCnB,KAAKsB,Q,wCD5E9B,2lF","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-process-indicator/dc-ui-process-indicator-step/dc-ui-process-indicator-step.scss?tag=dc-ui-process-indicator-step&encapsulation=shadow","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-process-indicator/dc-ui-process-indicator-step/dc-ui-process-indicator-step.tsx"],"sourcesContent":[":host {\r\n  --state-message-color: #{$color-red-02};\r\n  --state-outline-color: #{$color-turquoise-03};\r\n\r\n  font-family: 'Bosch Sans';\r\n  font-size: 14px;\r\n}\r\n\r\n.process-indicator-step {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0;\r\n  position: relative;\r\n  color: $color-dark-blue-02;\r\n  background-color: $color-white;\r\n\r\n  .process-indicator-step-number {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-width: 32px;\r\n    height: 32px;\r\n    border-radius: 20px;\r\n    border: 2px solid $color-dark-blue-02;\r\n    background-color: transparent;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .process-indicator-step-label {\r\n    display: flex;\r\n    align-items: center;\r\n    color: $color-dark-blue-02;\r\n    text-transform: uppercase;\r\n    white-space: nowrap;\r\n    text-decoration: none;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  &:not(:is(.process-indicator-step--active, .vertical)) {\r\n    .process-indicator-step-label {\r\n      @include media-max(md) {\r\n        gap: 0;\r\n      }\r\n    }\r\n\r\n    .process-indicator-step-label-text {\r\n      @include media-max(md) {\r\n        @include screen-reader-only;\r\n      }\r\n    }\r\n  }\r\n\r\n  a.process-indicator-step-label {\r\n    &:hover {\r\n      text-decoration: underline;\r\n      color: $color-turquoise-04;\r\n    }\r\n\r\n    &:focus-visible {\r\n      outline: 2px solid $color-turquoise-04;\r\n    }\r\n  }\r\n\r\n  span.process-indicator-step-label {\r\n    text-decoration: none;\r\n  }\r\n\r\n  &--active,\r\n  &--complete {\r\n    .process-indicator-step-number {\r\n      background-color: $color-dark-blue-02;\r\n      color: $color-white;\r\n    }\r\n  }\r\n\r\n  &--active {\r\n    & > .process-indicator-step-label {\r\n      > span.process-indicator-step-label-text {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n  }\r\n\r\n  &--disabled {\r\n    pointer-events: none;\r\n\r\n    .process-indicator-step-number {\r\n      color: $color-grey-03;\r\n      border-color: $color-grey-03;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  &--error {\r\n    & > .process-indicator-step-number {\r\n      color: $color-red-02;\r\n      border-color: $color-red-02;\r\n    }\r\n  }\r\n\r\n  &--incomplete {\r\n    & > .process-indicator-step-number {\r\n      color: $color-dark-blue-02;\r\n    }\r\n  }\r\n\r\n  &--disabled {\r\n    pointer-events: none;\r\n\r\n    & > .process-indicator-step-number {\r\n      color: $color-grey-03;\r\n      border-color: $color-grey-03;\r\n    }\r\n  }\r\n\r\n  &--error {\r\n    .process-indicator-step-number {\r\n      color: $color-red-02;\r\n      border-color: $color-red-02;\r\n      background-color: $color-white;\r\n    }\r\n  }\r\n}\r\n","import { Component, h, Method, Element, Prop } from '@stencil/core';\r\nimport { TValidationState } from '../../dc-ui-dropdown-wrapper/dropdown-wrapper-utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-process-indicator-step',\r\n  styleUrl: 'dc-ui-process-indicator-step.scss',\r\n  shadow: true,\r\n})\r\nexport class DcUiProcessIndicatorStep {\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() label: string = 'Default label';\r\n  @Prop() href?: string = '';\r\n  @Prop() state: string = 'default';\r\n  @Prop() validationstate: TValidationState = 'none';\r\n\r\n  private isLast = false;\r\n  private step: number = 1;\r\n\r\n  //Resets the step and sets it in an initial state\r\n  @Method()\r\n  async resetStepState() {\r\n    this.state = 'default';\r\n    return Promise.resolve(true);\r\n  }\r\n\r\n  private readonly getProcessIndicatorStepClass = () => {\r\n    return {\r\n      'process-indicator-step': true,\r\n      'process-indicator-step--active': this.state === 'active',\r\n      'process-indicator-step--complete': this.state === 'complete',\r\n      'process-indicator-step--disabled': this.state === 'disabled',\r\n      'process-indicator-step--error': this.validationstate === 'error',\r\n      'process-indicator-step--last': this.isLast,\r\n    };\r\n  };\r\n\r\n  private readonly getStepnumberIcon = () => {\r\n    return this.validationstate === 'error' ? 'dc_alert' : 'dc_checkmark';\r\n  };\r\n\r\n  componentWillLoad() {\r\n    if (this.el.parentNode) {\r\n      //Check if it's last step\r\n      if (this.el === this.el.parentNode.lastElementChild) {\r\n        this.isLast = true;\r\n      }\r\n      this.step = Array.from(this.el.parentNode.children).indexOf(this.el) + 1;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const stepIcon = (\r\n      <span class=\"process-indicator-step-number\">\r\n        {this.validationstate === 'error' || this.state === 'complete' ? (\r\n          <dc-ui-icon name={this.getStepnumberIcon()} />\r\n        ) : (\r\n          this.step\r\n        )}\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <li\r\n        class={this.getProcessIndicatorStepClass()}\r\n        aria-current={this.state === 'active' ? 'step' : null}>\r\n        {this.href ? (\r\n          <a\r\n            class=\"process-indicator-step-label\"\r\n            href={this.href}>\r\n            {stepIcon}\r\n            <span class=\"process-indicator-step-label-text\">{this.label}</span>\r\n          </a>\r\n        ) : (\r\n          <span class=\"process-indicator-step-label\">\r\n            {stepIcon}\r\n            <span class=\"process-indicator-step-label-text\">{this.label}</span>\r\n          </span>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n"],"names":["DcUiProcessIndicatorStep","isLast","step","getProcessIndicatorStepClass","this","state","validationstate","getStepnumberIcon","resetStepState","Promise","resolve","componentWillLoad","el","parentNode","lastElementChild","Array","from","children","indexOf","render","stepIcon","h","key","class","name","href","label"],"sourceRoot":""}
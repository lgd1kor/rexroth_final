{"version":3,"file":"static/js/6392.1627946e.chunk.js","mappings":"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","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/breakPointChecker.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-header/dc-ui-header-language/dc-ui-header-language.scss?tag=dc-ui-header-language&encapsulation=shadow","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-header/dc-ui-header-language/dc-ui-header-language.tsx","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/mediaQuery.ts"],"sourcesContent":["import { TBreakpointNames, breakpoints } from '../../utils';\r\n\r\nexport const getCurrentBreakpoint = (): TBreakpointNames => {\r\n  let currentBreakpoint: TBreakpointNames;\r\n  const width = window.innerWidth;\r\n\r\n  if (width < breakpoints.xs) {\r\n    currentBreakpoint = 'xxs';\r\n  } else if (width < breakpoints.sm) {\r\n    currentBreakpoint = 'xs';\r\n  } else if (width < breakpoints.md) {\r\n    currentBreakpoint = 'sm';\r\n  } else if (width < breakpoints.lg) {\r\n    currentBreakpoint = 'md';\r\n  } else if (width < breakpoints.xl) {\r\n    currentBreakpoint = 'lg';\r\n  } else if (width < breakpoints.xxl) {\r\n    currentBreakpoint = 'xl';\r\n  } else {\r\n    currentBreakpoint = 'xxl';\r\n  }\r\n\r\n  return currentBreakpoint;\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is equal to or larger than the specified breakpoint.\r\n *\r\n * @param {TBreakpointNames} breakpoint - The breakpoint to check against.\r\n * @returns {boolean} - True if the current breakpoint is equal to or larger than the specified breakpoint, false otherwise.\r\n */\r\nexport const isBreakpointEqualOrLarger = (breakpoint: TBreakpointNames): boolean => {\r\n  return window.innerWidth >= breakpoints[breakpoint];\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is equal to or smaller than the specified breakpoint.\r\n *\r\n * @param {TBreakpointNames} breakpoint - The breakpoint to check against.\r\n * @returns {boolean} - True if the current breakpoint is equal to or smaller than the specified breakpoint, false otherwise.\r\n */\r\nexport const isBreakpointEqualOrSmaller = (breakpoint: TBreakpointNames): boolean => {\r\n  return window.innerWidth <= breakpoints[breakpoint];\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is between the specified breakpoints.\r\n *\r\n * @param {TBreakpointNames} min - The start breakpoint.\r\n * @param {TBreakpointNames} max - The end breakpoint.\r\n * @returns {boolean} - True if the current breakpoint is between the specified breakpoints, false otherwise.\r\n */\r\nexport const isBreakpointBetween = (min: TBreakpointNames, max: TBreakpointNames): boolean => {\r\n  return window.innerWidth >= breakpoints[min] && window.innerWidth < breakpoints[max];\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is strictly larger than the specified breakpoint.\r\n *\r\n * @param {TBreakpointNames} breakpoint - The breakpoint to check against.\r\n * @returns {boolean} - True if the current breakpoint is larger than the specified breakpoint, false otherwise.\r\n */\r\nexport const isBreakpointLarger = (breakpoint: TBreakpointNames): boolean => {\r\n  return window.innerWidth > breakpoints[breakpoint];\r\n};\r\n\r\n/**\r\n * Helper function to check if the current breakpoint is strictly smaller than the specified breakpoint.\r\n *\r\n * @param {TBreakpointNames} breakpoint - The breakpoint to check against.\r\n * @returns {boolean} - True if the current breakpoint is smaller than the specified breakpoint, false otherwise.\r\n */\r\nexport const isBreakpointSmaller = (breakpoint: TBreakpointNames): boolean => {\r\n  return window.innerWidth < breakpoints[breakpoint];\r\n};\r\n","@include dialogAnimation(dialog, true);\r\n\r\n@include media-min('xl') {\r\n  @include dialogAnimation(dialog, false);\r\n}\r\n\r\ndialog {\r\n  position: fixed;\r\n  top: var(--header-height);\r\n  margin-top: 0;\r\n  width: 100%;\r\n  max-width: var(--header-max-width);\r\n  box-sizing: border-box;\r\n  border: none;\r\n  background-color: $color-grey-01;\r\n  box-shadow: 0px 20px 20px 0px rgba(80, 110, 129, 0.25);\r\n  padding: 0;\r\n  height: fit-content;\r\n  overflow: visible;\r\n\r\n  @include media-max('xl') {\r\n    height: auto;\r\n\r\n    &[open] {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  &::backdrop {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.dialog-body {\r\n  flex: 1;\r\n  padding-block: 24px 64px;\r\n}\r\n\r\n.dialog-content {\r\n  box-sizing: border-box;\r\n  max-width: 1200px;\r\n  padding: 0 15px;\r\n  margin-inline: auto;\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-auto-flow: row;\r\n  grid-template-rows: [btn-back-start] auto [btn-back-end] 32px [title-start] auto [title-end] 32px [content-start] auto [content-end];\r\n\r\n  @include media-min('xl') {\r\n    grid-template-rows: [btn-close-start] auto [btn-close-end] 16px [title-start] auto [title-end] 32px [content-start] auto [content-end];\r\n  }\r\n}\r\n\r\n#close-icon {\r\n  grid-area: btn-close;\r\n  grid-column: 1 / -1;\r\n  margin-left: auto;\r\n}\r\n\r\n.title-wrapper {\r\n  grid-area: title;\r\n  grid-column: 1 / -1;\r\n}\r\n\r\n.content-wrapper {\r\n  grid-area: content;\r\n  grid-column: 1 / -1;\r\n  display: grid;\r\n  grid-auto-flow: dense;\r\n  grid-template-columns: 1fr;\r\n  gap: 24px;\r\n\r\n  @include media-min('xl') {\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  }\r\n}\r\n\r\n.back-button {\r\n  grid-area: btn-back;\r\n  grid-column: 1 / -1;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  appearance: none;\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  @include font-style('mid-size-text');\r\n  color: $color-dark-blue-02;\r\n  width: fit-content;\r\n}\r\n","import { Component, h, Element, Method, Prop, State } from '@stencil/core';\r\nimport { isBreakpointEqualOrSmaller } from '../../../utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-header-language',\r\n  styleUrl: 'dc-ui-header-language.scss',\r\n  shadow: true,\r\n})\r\nexport class DcUiHeaderLanguage {\r\n  @Element() el: HTMLElement;\r\n  @Prop() headline?: string;\r\n  @Prop() noBackdropClick?: false;\r\n  @Prop() backButtonLabel?: string;\r\n\r\n  private dialog: HTMLDialogElement;\r\n  @State() isMobile: boolean = false;\r\n\r\n  private readonly updateIsMobile = () => {\r\n    this.isMobile = isBreakpointEqualOrSmaller('xl');\r\n  };\r\n\r\n  // method to open the modal\r\n  @Method() open(): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      document.body.style.overflow = 'hidden';\r\n      this.dialog.showModal();\r\n      resolve(true);\r\n    });\r\n  }\r\n\r\n  // method to close the modal\r\n  @Method() close(): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      document.body.style.overflow = '';\r\n      this.dialog.close();\r\n      resolve(true);\r\n    });\r\n  }\r\n\r\n  @Method() toggle(): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      if (this.dialog.open) {\r\n        this.close();\r\n      } else {\r\n        this.open();\r\n      }\r\n      resolve(true);\r\n    });\r\n  }\r\n\r\n  private readonly onBackdropClick = (e: MouseEvent) => {\r\n    if (!this.noBackdropClick && e.target === this.dialog) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  componentDidLoad() {\r\n    this.dialog.addEventListener('click', this.onBackdropClick);\r\n    this.updateIsMobile();\r\n    window.addEventListener('resize', this.updateIsMobile);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.dialog.removeEventListener('click', this.onBackdropClick);\r\n    window.removeEventListener('resize', this.updateIsMobile);\r\n  }\r\n\r\n  private readonly iconClickHandler = () => {\r\n    this.close();\r\n  };\r\n\r\n  render() {\r\n    const backButton = (\r\n      <button\r\n        autofocus\r\n        class=\"back-button\"\r\n        onClick={this.iconClickHandler}>\r\n        <dc-ui-icon\r\n          size=\"tiny\"\r\n          name=\"dc_backward_left\"></dc-ui-icon>\r\n        {this.backButtonLabel}\r\n      </button>\r\n    );\r\n\r\n    const closeButton = (\r\n      <dc-ui-button\r\n        autofocus\r\n        variant=\"link\"\r\n        icon=\"dc_close\"\r\n        hide-label=\"true\"\r\n        id=\"close-icon\"\r\n        size=\"small\"\r\n        onClick={this.iconClickHandler}>\r\n        Close Modal\r\n      </dc-ui-button>\r\n    );\r\n\r\n    return (\r\n      <dialog\r\n        class=\"language-dialog\"\r\n        ref={(el) => (this.dialog = el)}>\r\n        <div class=\"dialog-body\">\r\n          <div class=\"dialog-content\">\r\n            {this.isMobile ? (this.backButtonLabel ? backButton : closeButton) : closeButton}\r\n\r\n            <div class=\"title-wrapper\">\r\n              {this.headline && (\r\n                <dc-ui-text\r\n                  variant=\"h3\"\r\n                  color=\"darkBlue02\">\r\n                  {this.headline}\r\n                </dc-ui-text>\r\n              )}\r\n              <slot name=\"title\" />\r\n            </div>\r\n\r\n            <div class=\"content-wrapper\">\r\n              <slot name=\"content\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </dialog>\r\n    );\r\n  }\r\n}\r\n","export type TBreakpointNames = 'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\r\nexport const breakpoints: { [key in TBreakpointNames]: number } = {\r\n  xxs: 0,\r\n  xs: 480,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n  xxl: 1920,\r\n};\r\n\r\ntype BPKey<K extends TBreakpointNames> = Extract<TBreakpointNames, K>;\r\n\r\nexport function mediaQueryMin(min: BPKey<'xxs'>): '@media(min-width:0px)';\r\nexport function mediaQueryMin(min: BPKey<'xs'>): `@media(min-width:480px)`;\r\nexport function mediaQueryMin(min: BPKey<'sm'>): '@media(min-width:576px)';\r\nexport function mediaQueryMin(min: BPKey<'md'>): '@media(min-width:768px)';\r\nexport function mediaQueryMin(min: BPKey<'lg'>): '@media(min-width:992px)';\r\nexport function mediaQueryMin(min: BPKey<'xl'>): '@media(min-width:1200px)';\r\nexport function mediaQueryMin(min: BPKey<'xxl'>): '@media(min-width:1920px)';\r\nexport function mediaQueryMin(min: TBreakpointNames): string {\r\n  return `@media(min-width:${breakpoints[min]}px)`;\r\n}\r\n\r\nexport function mediaQueryMax(max: BPKey<'xs'>): '@media(max-width:479px)';\r\nexport function mediaQueryMax(max: BPKey<'sm'>): '@media(max-width:575px)';\r\nexport function mediaQueryMax(max: BPKey<'md'>): '@media(max-width:767px)';\r\nexport function mediaQueryMax(max: BPKey<'lg'>): '@media(max-width:991px)';\r\nexport function mediaQueryMax(max: BPKey<'xl'>): '@media(max-width:1199px)';\r\nexport function mediaQueryMax(max: BPKey<'xxl'>): '@media(max-width:1919px)';\r\nexport function mediaQueryMax(max: Exclude<TBreakpointNames, 'xxs'>): string {\r\n  return `@media(max-width:${breakpoints[max] - 1}px)`;\r\n}\r\n"],"names":["getCurrentBreakpoint","currentBreakpoint","width","window","innerWidth","breakpoints","xs","sm","md","lg","xl","xxl","isBreakpointEqualOrLarger","breakpoint","isBreakpointEqualOrSmaller","isBreakpointSmaller","DcUiHeaderLanguage","updateIsMobile","this","isMobile","onBackdropClick","e","noBackdropClick","target","dialog","close","iconClickHandler","open","Promise","resolve","document","body","style","overflow","showModal","toggle","componentDidLoad","addEventListener","disconnectedCallback","removeEventListener","render","backButton","h","key","autofocus","class","onClick","size","name","backButtonLabel","closeButton","variant","icon","id","ref","el","headline","color","xxs","mediaQueryMin","min","mediaQueryMax","max"],"sourceRoot":""}
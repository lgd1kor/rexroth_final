{"ast":null,"code":"import { r as registerInstance, h, a as Host, g as getElement } from './index-80864cdc.js';\nimport { c as checkSlotContent } from './checkSlotContent-8b411a76.js';\nimport { i as injectFont } from './font-80789c7f.js';\nimport { g as getCss, b as buildSlottedStyles, m as mergeDeep, a as observeOptions, c as createUuid, i as injectCSS } from './observeOptions-74693e66.js';\nimport { a as attachSlottedCss } from './slottedStyles-730e59ae.js';\nimport { c as addImportantToEachRule, b as buildResponsiveStyles } from './breakpointCustom-9d1b1283.js';\nimport { c as color } from './color-4d62bb24.js';\nimport { g as getStateMessageStyles, S as StateMessage } from './state-message-46b67a81.js';\nimport './mediaQuery-8afb3804.js';\nimport './text-styles-cd2dc550.js';\n\n/**\n * Slotted styles (applied when using the *native select element*).\n *\n * @param el\n * @param useNativeSelectEl\n * @param labelPosition\n * @param validationstate\n */\nconst getSlottedCss = (el, useNativeSelectEl, labelPosition, validationstate) => {\n  const nativeElTopPadding = labelPosition === 'default' ? 26 : 7;\n  const nativeElBottomPadding = labelPosition === 'default' ? 11 : 7;\n  return getCss(buildSlottedStyles(el, addImportantToEachRule({\n    '& select': Object.assign(Object.assign({}, useNativeSelectEl ? {\n      appearance: 'none',\n      WebkitAppearance: 'none',\n      position: 'absolute',\n      inset: '0',\n      width: '100%',\n      margin: '0',\n      border: 'none',\n      background: 'none',\n      padding: `${nativeElTopPadding}px 48px ${nativeElBottomPadding}px 16px`,\n      fontFamily: 'Bosch Sans',\n      fontSize: '14px',\n      lineHeight: '16px',\n      letterSpacing: '0.16px',\n      color: color.darkBlue02,\n      cursor: 'pointer'\n    } : {}), {\n      '&:disabled': {\n        borderColor: color.grey02,\n        backgroundColor: color.grey02,\n        color: color.grey03,\n        cursor: 'not-allowed'\n      },\n      '&:focus': validationstate === 'error' ? {\n        outline: `2px solid ${color.turquoise03}`,\n        outlineOffset: '2px'\n      } : {\n        outline: 'none',\n        borderColor: color.turquoise03,\n        boxShadow: `inset 0 0 0 1px ${color.turquoise03}`\n      },\n      '& option': {\n        fontFamily: '\"Bosch Sans\", sans-serif'\n      }\n    })\n  })));\n};\n/**\n * Styles (for the custom dropdown element, and for the native select wrapper if using the native select element).\n *\n * @param labelPosition\n * @param disabled\n * @param useNativeSelectEl\n * @param validationstate\n * @param labelWidth\n * @param open\n */\nconst createStyles = (labelPosition, disabled, useNativeSelectEl, validationstate, labelWidth, open) => {\n  const verticalPadding = labelPosition === 'default' ? 10 : 7;\n  const styles = getCss(Object.assign({\n    '@global': {\n      '::slotted': addImportantToEachRule({\n        '&(select)': useNativeSelectEl ? {} : {\n          display: 'none'\n        }\n      }),\n      '.container': Object.assign(Object.assign({\n        fontFamily: 'Bosch Sans',\n        fontSize: '14px',\n        lineHeight: '16px',\n        letterSpacing: '0.16px'\n      }, labelPosition === 'left' ? Object.assign(Object.assign({\n        display: 'grid'\n      }, mergeDeep(buildResponsiveStyles(labelWidth, labelWidthResponsive => ({\n        gridTemplateColumns: `${labelWidthResponsive} minmax(0, 1fr)`\n      })))), {\n        gridTemplateRows: 'auto auto',\n        columnGap: '8px'\n      }) : {}), {\n        '& label': Object.assign({\n          display: 'block',\n          fontFamily: 'Bosch Sans',\n          fontSize: '12px',\n          lineHeight: '15px',\n          letterSpacing: '0.32px',\n          textTransform: 'uppercase',\n          color: disabled ? color.grey03 : color.grey06,\n          whiteSpace: 'nowrap'\n        }, labelPosition === 'left' ? {\n          alignSelf: 'center'\n        } : labelPosition === 'above' ? {\n          marginBottom: '8px'\n        } : {\n          marginBottom: '1px',\n          pointerEvents: 'none'\n        }),\n        '& > *': {\n          maxWidth: '100%'\n        }\n      }),\n      '.dropdown-head': {\n        position: 'relative',\n        width: '100%',\n        boxSizing: 'border-box',\n        border: `1px solid ${color.grey05}`,\n        backgroundColor: color.white,\n        padding: `${verticalPadding}px 48px ${verticalPadding}px 16px`,\n        fontFamily: 'Bosch Sans',\n        fontSize: '14px',\n        lineHeight: '16px',\n        letterSpacing: '0.16px',\n        textAlign: 'left',\n        color: color.darkBlue02,\n        cursor: 'pointer',\n        userSelect: 'none',\n        '&:hover': {\n          borderColor: color.grey10\n        },\n        '&:not(.disabled, :disabled):focus': {\n          outline: 'none',\n          borderColor: color.turquoise03,\n          boxShadow: `inset 0 0 0 1px ${color.turquoise03}`\n        },\n        '&:not(.disabled, :disabled).error': {\n          outline: 'none',\n          borderColor: color.red02,\n          boxShadow: `inset 0 0 0 1px ${color.red02}`\n        },\n        '&:not(.disabled, :disabled).error:focus': {\n          outline: `2px solid ${color.turquoise03}`,\n          outlineOffset: '1px'\n        },\n        '&.disabled, &:disabled': {\n          borderColor: color.grey02,\n          backgroundColor: color.grey02,\n          color: color.grey03,\n          cursor: 'not-allowed'\n        }\n      },\n      '.native-select-wrapper': {\n        height: labelPosition === 'default' ? '54px' : '32px',\n        '& label': {\n          position: 'relative',\n          zIndex: 1\n        }\n      },\n      '.dropdown': {\n        position: 'relative'\n      },\n      '.dropdown-head-text': {\n        display: 'block',\n        maxWidth: '100%',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      '.arrow-icon': {\n        position: 'absolute',\n        top: '50%',\n        right: '16px',\n        transform: `translateY(-50%) ${open ? 'rotateX(180deg)' : ''}`,\n        transition: 'transform 350ms'\n      },\n      'ul, li': {\n        margin: '0',\n        padding: '0',\n        listStyleType: 'none'\n      },\n      '.dropdown-list': useNativeSelectEl ? {\n        display: 'none'\n      } : {\n        visibility: 'hidden',\n        position: 'absolute',\n        top: '100%',\n        left: '0',\n        width: '100%',\n        maxHeight: labelPosition === 'default' ? '208px' : '196px',\n        overflowY: 'auto',\n        boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)',\n        zIndex: '999',\n        pointerEvents: 'none',\n        '&.open': {\n          visibility: 'visible',\n          pointerEvents: 'unset'\n        }\n      },\n      '.dropdown-option': {\n        backgroundColor: color.white,\n        padding: `${labelPosition === 'default' ? 11 : 7}px 17px`,\n        color: color.darkBlue02,\n        cursor: 'pointer',\n        '&:hover': {\n          backgroundColor: color.grey01\n        },\n        '&.active': {\n          boxShadow: `inset 0 0 0 2px ${color.turquoise03}`\n        },\n        '& .checkmark-icon': {\n          display: 'none'\n        }\n      },\n      '.dropdown-list.has-optgroups .dropdown-option': {\n        paddingLeft: '32px',\n        '&[aria-selected=\"true\"]': {\n          position: 'relative',\n          '& .checkmark-icon': {\n            display: 'inline-flex',\n            position: 'absolute',\n            top: '12px',\n            left: '8px'\n          }\n        }\n      },\n      '.dropdown-optgroup-heading': {\n        backgroundColor: color.white,\n        padding: `${labelPosition === 'default' ? 11 : 7}px 17px`,\n        color: color.grey06\n      },\n      '.message': {\n        gridColumnStart: '2'\n      }\n    }\n  }, getStateMessageStyles(validationstate)));\n  return styles;\n};\nconst registeredDropdowns = [];\n/**\n * Closes all dropdowns if the document is clicked.\n */\nconst onDocumentClick = () => {\n  closeAllDropdowns();\n};\n/**\n * Closes all dropdowns if the Escape key is pressed.\n *\n * @param e\n */\nconst onDocumentKeydown = e => {\n  if (e.key === 'Escape') {\n    closeAllDropdowns();\n  }\n};\n/**\n * Adds event listeners to the document if they don't already exist.\n *\n * @param dropdown\n */\nconst addDocumentEventListeners = dropdown => {\n  if (registeredDropdowns.length === 0) {\n    document.addEventListener('click', onDocumentClick);\n    document.addEventListener('keydown', onDocumentKeydown);\n  }\n  if (!registeredDropdowns.includes(dropdown)) {\n    registeredDropdowns.push(dropdown);\n  }\n};\n/**\n * Removes event listeners from the document.\n *\n * @param dropdown\n */\nconst removeDocumentEventListeners = dropdown => {\n  const index = registeredDropdowns.indexOf(dropdown);\n  if (index > -1) {\n    registeredDropdowns.splice(index, 1);\n  }\n  if (registeredDropdowns.length === 0) {\n    document.removeEventListener('click', onDocumentClick);\n    document.removeEventListener('keydown', onDocumentKeydown);\n  }\n};\n/**\n * Closes all dropdowns.\n */\nconst closeAllDropdowns = () => {\n  for (const dropdown of registeredDropdowns) {\n    closeDropdown(dropdown);\n  }\n};\n/**\n * Closes all dropdowns except the given one.\n *\n * @param except\n */\nconst closeOtherDropdowns = except => {\n  for (const dropdown of registeredDropdowns) {\n    if (dropdown !== except) {\n      closeDropdown(dropdown);\n    }\n  }\n};\n/**\n * Closes a dropdown.\n *\n * @param dropdown\n */\nconst closeDropdown = dropdown => {\n  dropdown.open = false;\n  Array.from(dropdown.listEl.children).forEach(optionEl => {\n    optionEl.classList.remove('active');\n  });\n};\nconst DcUiDropdownWrapper = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.useNativeSelect = false;\n    this.loadOptions = () => {\n      if (!this.nativeSelectEl) {\n        return;\n      }\n      this.listEl.innerHTML = '';\n      const optGroups = this.nativeSelectEl.querySelectorAll('optgroup');\n      if (optGroups.length) {\n        this.listEl.classList.add('has-optgroups');\n        Array.from(optGroups).forEach(optGroup => {\n          this.addOptGroup(optGroup);\n        });\n      } else {\n        const ul = document.createElement('ul');\n        ul.setAttribute('role', 'listbox');\n        ul.setAttribute('aria-labelledby', `${this.uuid}_label`);\n        this.listEl.appendChild(ul);\n        Array.from(this.nativeSelectEl.options).forEach(nativeOptionEl => {\n          this.addOption(nativeOptionEl, ul);\n        });\n      }\n      this.updateSelectedOptionFromNativeSelect();\n    };\n    this.addOptGroup = optGroup => {\n      const optGroupEl = document.createElement('ul');\n      optGroupEl.setAttribute('role', 'listbox');\n      optGroupEl.setAttribute('aria-labelledby', `${this.uuid}_label`);\n      this.listEl.appendChild(optGroupEl);\n      optGroupEl.setAttribute('role', 'group');\n      const optGroupHeadingEl = document.createElement('li');\n      optGroupEl.appendChild(optGroupHeadingEl);\n      optGroupHeadingEl.setAttribute('role', 'presentation');\n      optGroupHeadingEl.classList.add('dropdown-optgroup-heading');\n      optGroupHeadingEl.innerHTML = optGroup.label;\n      const index = this.listEl.children.length - 1;\n      optGroupHeadingEl.id = `${this.uuid}_optgroup-${index}`;\n      optGroupEl.setAttribute('aria-labelledby', optGroupHeadingEl.id);\n      Array.from(optGroup.children).forEach(nativeOptionEl => {\n        this.addOption(nativeOptionEl, optGroupEl);\n      });\n    };\n    this.addOption = (nativeOptionEl, parent) => {\n      const index = this.listEl.querySelectorAll('.dropdown-option').length;\n      nativeOptionEl.setAttribute(`data-${this.uuid}-index`, `${index}`);\n      const optionEl = document.createElement('li');\n      optionEl.classList.add('dropdown-option');\n      optionEl.innerHTML = nativeOptionEl.innerHTML;\n      optionEl.id = `${this.uuid}_option-${index}`;\n      optionEl.setAttribute(`data-${this.uuid}-index`, `${index}`);\n      optionEl.setAttribute('role', 'option');\n      optionEl.setAttribute('aria-selected', 'false');\n      const icon = document.createElement('dc-ui-icon');\n      icon.classList.add('checkmark-icon');\n      icon.setAttribute('name', 'dc_checkmark');\n      icon.setAttribute('size', 'tiny');\n      icon.setAttribute('color', 'darkBlue02');\n      optionEl.appendChild(icon);\n      optionEl.addEventListener('click', () => {\n        this.selectOption(optionEl);\n      });\n      parent.appendChild(optionEl);\n    };\n    this.observeNativeSelectOptions = () => {\n      observeOptions(this.nativeSelectEl, () => {\n        this.loadOptions();\n      });\n    };\n    this.updateSelectedOptionFromNativeSelect = () => {\n      const selectedNativeOptionEl = this.nativeSelectEl.querySelector('option:checked');\n      if (selectedNativeOptionEl) {\n        const index = +selectedNativeOptionEl.getAttribute(`data-${this.uuid}-index`);\n        const selectedOptionEl = this.optionElByIndex(index);\n        this.selectOption(selectedOptionEl, false);\n      }\n    };\n    this.selectOption = (optionEl, fireEvent = true) => {\n      Array.from(this.listEl.querySelectorAll('.dropdown-option')).forEach(otherOptionEl => {\n        otherOptionEl.setAttribute('aria-selected', 'false');\n      });\n      optionEl.setAttribute('aria-selected', 'true');\n      optionEl.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest'\n      });\n      this.headTextEl.innerHTML = optionEl.textContent;\n      this.selectedOptionIndex = +optionEl.getAttribute(`data-${this.uuid}-index`);\n      this.nativeSelectEl.value = this.nativeOptionElByIndex(this.selectedOptionIndex).value;\n      if (fireEvent) {\n        this.nativeSelectEl.dispatchEvent(new Event('change', {\n          bubbles: true\n        })); // bubbles: true is required for the event to be caught in react\n      }\n    };\n    this.onHeadKeydown = e => {\n      // if the dropdown is opened via keyboard, add a border to the currently selected option\n      if (['SpaceBar', 'Enter', ' '].includes(e.key)) {\n        this.optionElByIndex(this.selectedOptionIndex).classList.add('active');\n        return;\n      }\n      // if navigating with the arrow keys, select the next/previous option (if it exists) and add a border to it\n      if (!['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n        return;\n      }\n      e.preventDefault();\n      const offset = ['ArrowDown', 'ArrowRight'].includes(e.key) ? 1 : -1;\n      const nextIndex = this.selectedOptionIndex + offset;\n      const nextOptionEl = this.optionElByIndex(nextIndex);\n      if (nextOptionEl) {\n        Array.from(this.listEl.querySelectorAll('.dropdown-option')).forEach(optionEl => {\n          optionEl.classList.remove('active');\n        });\n        nextOptionEl.classList.add('active');\n        this.selectOption(nextOptionEl);\n      }\n    };\n    this.onHeadClick = e => {\n      e.stopPropagation();\n      if (this.disabled) {\n        return;\n      }\n      closeOtherDropdowns(this);\n      if (!this.useNativeSelect) {\n        this.open = !this.open;\n      }\n    };\n    this.optionElByIndex = index => {\n      return this.listEl.querySelector(`[data-${this.uuid}-index=\"${index}\"]`);\n    };\n    this.nativeOptionElByIndex = index => {\n      return this.nativeSelectEl.querySelector(`option[data-${this.uuid}-index=\"${index}\"]`);\n    };\n    this.label = '';\n    this.labelPosition = 'default';\n    this.labelWidth = '25%';\n    this.disabled = false;\n    this.validationstate = 'none';\n    this.message = '';\n    this.open = false;\n    this.selectedOptionIndex = null;\n  }\n  componentWillLoad() {\n    injectFont();\n    checkSlotContent(this.el, 'select');\n    this.uuid = createUuid();\n    this.nativeSelectEl = this.el.querySelector('select');\n    if (!this.nativeSelectEl) {\n      console.warn('dropdown has no select element');\n      return;\n    }\n    // if on a mobile (touch) device, use the native element instead of the custom dropdown\n    // (can't check for maxTouchPoints because chrome reports 256 maxTouchPoints even on desktop)\n    // !!('ontouchstart' in window || window.navigator.maxTouchPoints > 0);\n    this.useNativeSelect = 'ontouchstart' in window;\n    if (this.useNativeSelect) {\n      return;\n    }\n    // if using the custom dropdown, synchronize it with the native element (in case of external changes)\n    this.nativeSelectEl.setAttribute('aria-hidden', 'true');\n    this.nativeSelectEl.addEventListener('change', () => {\n      this.updateSelectedOptionFromNativeSelect();\n    });\n    this.observeNativeSelectOptions();\n  }\n  componentDidLoad() {\n    if (!this.nativeSelectEl) {\n      return;\n    }\n    if (this.useNativeSelect) {\n      attachSlottedCss(this.el, getSlottedCss(this.el, this.useNativeSelect, this.labelPosition, this.validationstate));\n      if (this.disabled) {\n        this.nativeSelectEl.setAttribute('disabled', 'true');\n      }\n      return;\n    }\n    // if using the custom dropdown, load the options from the native element\n    // and watch for external changes to them\n    this.loadOptions();\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    this.selectObserver = new MutationObserver((_mutations, _observer) => {\n      this.loadOptions();\n    });\n    this.selectObserver.observe(this.nativeSelectEl, {\n      attributes: false,\n      childList: true,\n      subtree: true\n    });\n    addDocumentEventListeners(this);\n  }\n  connectedCallback() {\n    this.observeNativeSelectOptions();\n  }\n  disconnectedCallback() {\n    if (this.useNativeSelect) {\n      return;\n    }\n    removeDocumentEventListeners(this);\n  }\n  render() {\n    injectCSS(this.el, createStyles, this.labelPosition, this.disabled, this.useNativeSelect, this.validationstate, this.labelWidth, this.open);\n    const arrowIconColor = this.disabled ? 'grey03' : 'darkBlue02';\n    const label = h(\"label\", {\n      key: '288e7eb185d39c95e275d39ea0450979ed9f9e58',\n      id: `${this.uuid}_label`,\n      \"aria-hidden\": this.labelPosition === 'default' ? 'true' : 'false'\n    }, this.label);\n    return h(Host, {\n      key: '399185ab4d7d2d8bd128032b186a94ec252157ab',\n      \"data-uuid\": this.uuid\n    }, !this.useNativeSelect && h(\"slot\", {\n      key: '5a99763743abcf22c6b83c5b522e1f125d062cb7'\n    }), h(\"div\", {\n      key: 'be247677ad91a8f8d2b9cd1215b745e459cfbf25',\n      class: \"container\"\n    }, this.labelPosition !== 'default' && label, this.useNativeSelect ? h(\"div\", {\n      ref: el => this.nativeSelectWrapperEl = el,\n      class: {\n        'native-select-wrapper': true,\n        'dropdown-head': true,\n        disabled: this.disabled,\n        error: this.validationstate === 'error'\n      }\n    }, this.labelPosition === 'default' && label, h(\"slot\", null), h(\"dc-ui-icon\", {\n      class: \"arrow-icon\",\n      name: \"dc_down\",\n      size: \"tiny\",\n      color: arrowIconColor\n    })) : h(\"div\", {\n      class: \"dropdown\",\n      ref: el => this.dropdownEl = el\n    }, h(\"button\", {\n      ref: el => this.headEl = el,\n      class: {\n        'dropdown-head': true,\n        disabled: this.disabled,\n        error: this.validationstate === 'error'\n      },\n      tabindex: this.disabled ? '-1' : '0',\n      role: \"combobox\",\n      \"aria-controls\": `${this.uuid}_list`,\n      \"aria-expanded\": this.open ? 'true' : 'false',\n      \"aria-haspopup\": \"listbox\",\n      \"aria-labelledby\": `${this.uuid}_label`,\n      \"aria-activedescendant\": `${this.uuid}_option-${this.selectedOptionIndex}`,\n      \"aria-live\": this.open ? 'off' : 'polite',\n      onClick: this.onHeadClick,\n      onKeyDown: this.onHeadKeydown\n    }, this.labelPosition === 'default' && label, h(\"span\", {\n      ref: el => this.headTextEl = el,\n      class: \"dropdown-head-text\",\n      tabindex: \"-1\"\n    }), h(\"dc-ui-icon\", {\n      class: \"arrow-icon\",\n      name: \"dc_down\",\n      size: \"tiny\",\n      color: arrowIconColor\n    })), h(\"div\", {\n      id: `${this.uuid}_list`,\n      ref: el => this.listEl = el,\n      tabindex: \"-1\",\n      class: {\n        'dropdown-list': true,\n        open: this.open\n      }\n    })), this.validationstate !== 'none' && h(StateMessage, {\n      key: 'f4125f015e741fe73442b5773b1093c8e360e7c3',\n      state: this.validationstate,\n      message: this.message\n    })));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nexport { DcUiDropdownWrapper as dc_ui_dropdown_wrapper };","map":{"version":3,"names":["getSlottedCss","el","useNativeSelectEl","labelPosition","validationstate","nativeElTopPadding","nativeElBottomPadding","getCss","buildSlottedStyles","addImportantToEachRule","Object","assign","appearance","WebkitAppearance","position","inset","width","margin","border","background","padding","fontFamily","fontSize","lineHeight","letterSpacing","color","darkBlue02","cursor","borderColor","grey02","backgroundColor","grey03","outline","turquoise03","outlineOffset","boxShadow","createStyles","disabled","labelWidth","open","verticalPadding","styles","display","mergeDeep","buildResponsiveStyles","labelWidthResponsive","gridTemplateColumns","gridTemplateRows","columnGap","textTransform","grey06","whiteSpace","alignSelf","marginBottom","pointerEvents","maxWidth","boxSizing","grey05","white","textAlign","userSelect","grey10","red02","height","zIndex","overflow","textOverflow","top","right","transform","transition","listStyleType","visibility","left","maxHeight","overflowY","grey01","paddingLeft","gridColumnStart","getStateMessageStyles","registeredDropdowns","onDocumentClick","closeAllDropdowns","onDocumentKeydown","e","key","addDocumentEventListeners","dropdown","length","document","addEventListener","includes","push","removeDocumentEventListeners","index","indexOf","splice","removeEventListener","closeDropdown","closeOtherDropdowns","except","Array","from","listEl","children","forEach","optionEl","classList","remove","DcUiDropdownWrapper","useNativeSelect","loadOptions","nativeSelectEl","innerHTML","optGroups","querySelectorAll","add","optGroup","addOptGroup","ul","createElement","setAttribute","uuid","appendChild","options","nativeOptionEl","addOption","updateSelectedOptionFromNativeSelect","optGroupEl","optGroupHeadingEl","label","id","parent","icon","selectOption","observeNativeSelectOptions","observeOptions","selectedNativeOptionEl","querySelector","getAttribute","selectedOptionEl","optionElByIndex","fireEvent","otherOptionEl","scrollIntoView","block","inline","headTextEl","textContent","selectedOptionIndex","value","nativeOptionElByIndex","dispatchEvent","Event","bubbles","onHeadKeydown","preventDefault","offset","nextIndex","nextOptionEl","onHeadClick","stopPropagation","componentWillLoad","injectFont","checkSlotContent","createUuid","console","warn","window","componentDidLoad","attachSlottedCss","selectObserver","MutationObserver","_mutations","_observer","observe","attributes","childList","subtree","connectedCallback","disconnectedCallback","render","injectCSS","arrowIconColor","h","Host","class","ref","nativeSelectWrapperEl","error","name","size","dropdownEl","headEl","tabindex","role","onClick","onKeyDown","StateMessage","state","message"],"sources":["C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_v1\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-dropdown-wrapper\\dropdown-wrapper-styles.ts","C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_v1\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-dropdown-wrapper\\dropdown-wrapper-utils.ts","C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_v1\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-dropdown-wrapper\\dc-ui-dropdown-wrapper.tsx"],"sourcesContent":["import {\r\n  addImportantToEachRule,\r\n  BreakpointCustomizable,\r\n  buildSlottedStyles,\r\n  color as colorUtils,\r\n  getCss,\r\n  TValidationState,\r\n  buildResponsiveStyles,\r\n  mergeDeep,\r\n} from '../../utils';\r\nimport { TDropdownLabelPosition } from './dropdown-wrapper-utils';\r\nimport { getStateMessageStyles } from '../common/state-message/state-message-styles';\r\n\r\n/**\r\n * Slotted styles (applied when using the *native select element*).\r\n *\r\n * @param el\r\n * @param useNativeSelectEl\r\n * @param labelPosition\r\n * @param validationstate\r\n */\r\nexport const getSlottedCss = (\r\n  el: HTMLElement,\r\n  useNativeSelectEl: boolean,\r\n  labelPosition: TDropdownLabelPosition,\r\n  validationstate: TValidationState\r\n): string => {\r\n  const nativeElTopPadding = labelPosition === 'default' ? 26 : 7;\r\n  const nativeElBottomPadding = labelPosition === 'default' ? 11 : 7;\r\n\r\n  return getCss(\r\n    buildSlottedStyles(\r\n      el,\r\n      addImportantToEachRule({\r\n        '& select': {\r\n          ...(useNativeSelectEl\r\n            ? {\r\n                appearance: 'none',\r\n                WebkitAppearance: 'none',\r\n                position: 'absolute',\r\n                inset: '0',\r\n                width: '100%',\r\n                margin: '0',\r\n                border: 'none',\r\n                background: 'none',\r\n                padding: `${nativeElTopPadding}px 48px ${nativeElBottomPadding}px 16px`,\r\n                fontFamily: 'Bosch Sans',\r\n                fontSize: '14px',\r\n                lineHeight: '16px',\r\n                letterSpacing: '0.16px',\r\n                color: colorUtils.darkBlue02,\r\n                cursor: 'pointer',\r\n              }\r\n            : {}),\r\n          '&:disabled': {\r\n            borderColor: colorUtils.grey02,\r\n            backgroundColor: colorUtils.grey02,\r\n            color: colorUtils.grey03,\r\n            cursor: 'not-allowed',\r\n          },\r\n          '&:focus':\r\n            validationstate === 'error'\r\n              ? {\r\n                  outline: `2px solid ${colorUtils.turquoise03}`,\r\n                  outlineOffset: '2px',\r\n                }\r\n              : {\r\n                  outline: 'none',\r\n                  borderColor: colorUtils.turquoise03,\r\n                  boxShadow: `inset 0 0 0 1px ${colorUtils.turquoise03}`,\r\n                },\r\n          '& option': {\r\n            fontFamily: '\"Bosch Sans\", sans-serif',\r\n          },\r\n        },\r\n      })\r\n    )\r\n  );\r\n};\r\n\r\n/**\r\n * Styles (for the custom dropdown element, and for the native select wrapper if using the native select element).\r\n *\r\n * @param labelPosition\r\n * @param disabled\r\n * @param useNativeSelectEl\r\n * @param validationstate\r\n * @param labelWidth\r\n * @param open\r\n */\r\nexport const createStyles = (\r\n  labelPosition: TDropdownLabelPosition,\r\n  disabled: boolean,\r\n  useNativeSelectEl: boolean,\r\n  validationstate: TValidationState,\r\n  labelWidth: BreakpointCustomizable<string>,\r\n  open: boolean\r\n): string => {\r\n  const verticalPadding = labelPosition === 'default' ? 10 : 7;\r\n\r\n  const styles = getCss({\r\n    '@global': {\r\n      '::slotted': addImportantToEachRule({\r\n        '&(select)': useNativeSelectEl\r\n          ? {}\r\n          : {\r\n              display: 'none',\r\n            },\r\n      }),\r\n\r\n      '.container': {\r\n        fontFamily: 'Bosch Sans',\r\n        fontSize: '14px',\r\n        lineHeight: '16px',\r\n        letterSpacing: '0.16px',\r\n        ...(labelPosition === 'left'\r\n          ? {\r\n              display: 'grid',\r\n              ...mergeDeep(\r\n                buildResponsiveStyles(labelWidth, (labelWidthResponsive: string) => ({\r\n                  gridTemplateColumns: `${labelWidthResponsive} minmax(0, 1fr)`,\r\n                }))\r\n              ),\r\n              gridTemplateRows: 'auto auto',\r\n              columnGap: '8px',\r\n            }\r\n          : {}),\r\n\r\n        '& label': {\r\n          display: 'block',\r\n          fontFamily: 'Bosch Sans',\r\n          fontSize: '12px',\r\n          lineHeight: '15px',\r\n          letterSpacing: '0.32px',\r\n          textTransform: 'uppercase',\r\n          color: disabled ? colorUtils.grey03 : colorUtils.grey06,\r\n          whiteSpace: 'nowrap',\r\n          ...(labelPosition === 'left'\r\n            ? {\r\n                alignSelf: 'center',\r\n              }\r\n            : labelPosition === 'above'\r\n            ? {\r\n                marginBottom: '8px',\r\n              }\r\n            : {\r\n                marginBottom: '1px',\r\n                pointerEvents: 'none',\r\n              }),\r\n        },\r\n\r\n        '& > *': {\r\n          maxWidth: '100%',\r\n        },\r\n      },\r\n\r\n      '.dropdown-head': {\r\n        position: 'relative',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        border: `1px solid ${colorUtils.grey05}`,\r\n        backgroundColor: colorUtils.white,\r\n        padding: `${verticalPadding}px 48px ${verticalPadding}px 16px`,\r\n        fontFamily: 'Bosch Sans',\r\n        fontSize: '14px',\r\n        lineHeight: '16px',\r\n        letterSpacing: '0.16px',\r\n        textAlign: 'left',\r\n        color: colorUtils.darkBlue02,\r\n        cursor: 'pointer',\r\n        userSelect: 'none',\r\n\r\n        '&:hover': {\r\n          borderColor: colorUtils.grey10,\r\n        },\r\n\r\n        '&:not(.disabled, :disabled):focus': {\r\n          outline: 'none',\r\n          borderColor: colorUtils.turquoise03,\r\n          boxShadow: `inset 0 0 0 1px ${colorUtils.turquoise03}`,\r\n        },\r\n\r\n        '&:not(.disabled, :disabled).error': {\r\n          outline: 'none',\r\n          borderColor: colorUtils.red02,\r\n          boxShadow: `inset 0 0 0 1px ${colorUtils.red02}`,\r\n        },\r\n\r\n        '&:not(.disabled, :disabled).error:focus': {\r\n          outline: `2px solid ${colorUtils.turquoise03}`,\r\n          outlineOffset: '1px',\r\n        },\r\n\r\n        '&.disabled, &:disabled': {\r\n          borderColor: colorUtils.grey02,\r\n          backgroundColor: colorUtils.grey02,\r\n          color: colorUtils.grey03,\r\n          cursor: 'not-allowed',\r\n        },\r\n      },\r\n\r\n      '.native-select-wrapper': {\r\n        height: labelPosition === 'default' ? '54px' : '32px',\r\n\r\n        '& label': {\r\n          position: 'relative',\r\n          zIndex: 1,\r\n        },\r\n      },\r\n\r\n      '.dropdown': {\r\n        position: 'relative',\r\n      },\r\n\r\n      '.dropdown-head-text': {\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n      },\r\n\r\n      '.arrow-icon': {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        right: '16px',\r\n        transform: `translateY(-50%) ${open ? 'rotateX(180deg)' : ''}`,\r\n        transition: 'transform 350ms',\r\n      },\r\n\r\n      'ul, li': {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyleType: 'none',\r\n      },\r\n\r\n      '.dropdown-list': useNativeSelectEl\r\n        ? {\r\n            display: 'none',\r\n          }\r\n        : {\r\n            visibility: 'hidden',\r\n            position: 'absolute',\r\n            top: '100%',\r\n            left: '0',\r\n            width: '100%',\r\n            maxHeight: labelPosition === 'default' ? '208px' : '196px',\r\n            overflowY: 'auto',\r\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)',\r\n            zIndex: '999',\r\n            pointerEvents: 'none',\r\n\r\n            '&.open': {\r\n              visibility: 'visible',\r\n              pointerEvents: 'unset',\r\n            },\r\n          },\r\n\r\n      '.dropdown-option': {\r\n        backgroundColor: colorUtils.white,\r\n        padding: `${labelPosition === 'default' ? 11 : 7}px 17px`,\r\n        color: colorUtils.darkBlue02,\r\n        cursor: 'pointer',\r\n\r\n        '&:hover': {\r\n          backgroundColor: colorUtils.grey01,\r\n        },\r\n\r\n        '&.active': {\r\n          boxShadow: `inset 0 0 0 2px ${colorUtils.turquoise03}`,\r\n        },\r\n\r\n        '& .checkmark-icon': {\r\n          display: 'none',\r\n        },\r\n      },\r\n\r\n      '.dropdown-list.has-optgroups .dropdown-option': {\r\n        paddingLeft: '32px',\r\n\r\n        '&[aria-selected=\"true\"]': {\r\n          position: 'relative',\r\n\r\n          '& .checkmark-icon': {\r\n            display: 'inline-flex',\r\n            position: 'absolute',\r\n            top: '12px',\r\n            left: '8px',\r\n          },\r\n        },\r\n      },\r\n\r\n      '.dropdown-optgroup-heading': {\r\n        backgroundColor: colorUtils.white,\r\n        padding: `${labelPosition === 'default' ? 11 : 7}px 17px`,\r\n        color: colorUtils.grey06,\r\n      },\r\n\r\n      '.message': {\r\n        gridColumnStart: '2',\r\n      },\r\n    },\r\n    ...getStateMessageStyles(validationstate),\r\n  });\r\n\r\n  return styles;\r\n};\r\n","import {DcUiDropdownWrapper} from \"./dc-ui-dropdown-wrapper\";\r\n\r\nexport const VALIDATION_STATE = ['none', 'error'] as const;\r\nexport type TValidationState = typeof VALIDATION_STATE[number];\r\n\r\nexport const DROPDOWN_LABEL_POSITION = ['default', 'left', 'above'] as const;\r\nexport type TDropdownLabelPosition = typeof DROPDOWN_LABEL_POSITION[number];\r\n\r\n\r\nexport const registeredDropdowns: DcUiDropdownWrapper[] = [];\r\n\r\n\r\n/**\r\n * Closes all dropdowns if the document is clicked.\r\n */\r\nexport const onDocumentClick = (): void => {\r\n  closeAllDropdowns();\r\n}\r\n\r\n\r\n/**\r\n * Closes all dropdowns if the Escape key is pressed.\r\n *\r\n * @param e\r\n */\r\nexport const onDocumentKeydown = (e: KeyboardEvent): void => {\r\n  if (e.key === 'Escape') {\r\n    closeAllDropdowns();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Adds event listeners to the document if they don't already exist.\r\n *\r\n * @param dropdown\r\n */\r\nexport const addDocumentEventListeners = (dropdown: DcUiDropdownWrapper): void => {\r\n  if (registeredDropdowns.length === 0) {\r\n    document.addEventListener('click', onDocumentClick);\r\n    document.addEventListener('keydown', onDocumentKeydown);\r\n  }\r\n  if (!registeredDropdowns.includes(dropdown)) {\r\n    registeredDropdowns.push(dropdown);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Removes event listeners from the document.\r\n *\r\n * @param dropdown\r\n */\r\nexport const removeDocumentEventListeners = (dropdown: DcUiDropdownWrapper): void => {\r\n  const index = registeredDropdowns.indexOf(dropdown);\r\n  if (index > -1) {\r\n    registeredDropdowns.splice(index, 1);\r\n  }\r\n  if (registeredDropdowns.length === 0) {\r\n    document.removeEventListener('click', onDocumentClick);\r\n    document.removeEventListener('keydown', onDocumentKeydown);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Closes all dropdowns.\r\n */\r\nexport const closeAllDropdowns = (): void => {\r\n  for (const dropdown of registeredDropdowns) {\r\n    closeDropdown(dropdown);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Closes all dropdowns except the given one.\r\n *\r\n * @param except\r\n */\r\nexport const closeOtherDropdowns = (except: DcUiDropdownWrapper): void => {\r\n  for (const dropdown of registeredDropdowns) {\r\n    if (dropdown !== except) {\r\n      closeDropdown(dropdown);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Closes a dropdown.\r\n *\r\n * @param dropdown\r\n */\r\nexport const closeDropdown = (dropdown: DcUiDropdownWrapper): void => {\r\n  dropdown.open = false;\r\n  Array.from(dropdown.listEl.children).forEach(optionEl => {\r\n    optionEl.classList.remove('active');\r\n  });\r\n}\r\n","import { Component, Host, h, Element, State, Prop } from '@stencil/core';\r\nimport {\r\n  attachSlottedCss,\r\n  BreakpointCustomizable,\r\n  checkSlotContent,\r\n  createUuid,\r\n  injectCSS,\r\n  injectFont,\r\n  observeOptions,\r\n  TValidationState,\r\n} from '../../utils';\r\nimport { createStyles, getSlottedCss } from './dropdown-wrapper-styles';\r\nimport {\r\n  closeOtherDropdowns,\r\n  addDocumentEventListeners,\r\n  removeDocumentEventListeners,\r\n  TDropdownLabelPosition,\r\n} from './dropdown-wrapper-utils';\r\nimport { StateMessage } from '../common/state-message/state-message';\r\n\r\n@Component({\r\n  tag: 'dc-ui-dropdown-wrapper',\r\n  shadow: true,\r\n})\r\nexport class DcUiDropdownWrapper {\r\n  @Element() el: HTMLElement;\r\n  @Prop() label = '';\r\n  @Prop() labelPosition: TDropdownLabelPosition = 'default';\r\n  @Prop() labelWidth?: BreakpointCustomizable<string> = '25%';\r\n  @Prop() disabled = false;\r\n  @Prop() validationstate: TValidationState = 'none';\r\n  @Prop() message = '';\r\n  @State() open = false;\r\n  @State() selectedOptionIndex: number = null;\r\n\r\n  nativeSelectEl: HTMLSelectElement;\r\n  dropdownEl: HTMLElement;\r\n  headEl: HTMLElement;\r\n  headTextEl: HTMLElement;\r\n  listEl: HTMLElement;\r\n  nativeSelectWrapperEl: HTMLElement;\r\n  selectObserver: MutationObserver;\r\n  useNativeSelect = false;\r\n  uuid: string;\r\n\r\n  componentWillLoad() {\r\n    injectFont();\r\n    checkSlotContent(this.el, 'select');\r\n    this.uuid = createUuid();\r\n\r\n    this.nativeSelectEl = this.el.querySelector('select');\r\n    if (!this.nativeSelectEl) {\r\n      console.warn('dropdown has no select element');\r\n      return;\r\n    }\r\n\r\n    // if on a mobile (touch) device, use the native element instead of the custom dropdown\r\n    // (can't check for maxTouchPoints because chrome reports 256 maxTouchPoints even on desktop)\r\n    // !!('ontouchstart' in window || window.navigator.maxTouchPoints > 0);\r\n    this.useNativeSelect = 'ontouchstart' in window;\r\n    if (this.useNativeSelect) {\r\n      return;\r\n    }\r\n\r\n    // if using the custom dropdown, synchronize it with the native element (in case of external changes)\r\n    this.nativeSelectEl.setAttribute('aria-hidden', 'true');\r\n    this.nativeSelectEl.addEventListener('change', () => {\r\n      this.updateSelectedOptionFromNativeSelect();\r\n    });\r\n\r\n    this.observeNativeSelectOptions();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (!this.nativeSelectEl) {\r\n      return;\r\n    }\r\n\r\n    if (this.useNativeSelect) {\r\n      attachSlottedCss(\r\n        this.el,\r\n        getSlottedCss(this.el, this.useNativeSelect, this.labelPosition, this.validationstate)\r\n      );\r\n      if (this.disabled) {\r\n        this.nativeSelectEl.setAttribute('disabled', 'true');\r\n      }\r\n      return;\r\n    }\r\n\r\n    // if using the custom dropdown, load the options from the native element\r\n    // and watch for external changes to them\r\n    this.loadOptions();\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    this.selectObserver = new MutationObserver((_mutations, _observer) => {\r\n      this.loadOptions();\r\n    });\r\n    this.selectObserver.observe(this.nativeSelectEl, {\r\n      attributes: false,\r\n      childList: true,\r\n      subtree: true,\r\n    });\r\n\r\n    addDocumentEventListeners(this);\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    this.observeNativeSelectOptions();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.useNativeSelect) {\r\n      return;\r\n    }\r\n    removeDocumentEventListeners(this);\r\n  }\r\n\r\n  loadOptions = (): void => {\r\n    if (!this.nativeSelectEl) {\r\n      return;\r\n    }\r\n\r\n    this.listEl.innerHTML = '';\r\n\r\n    const optGroups = this.nativeSelectEl.querySelectorAll('optgroup');\r\n    if (optGroups.length) {\r\n      this.listEl.classList.add('has-optgroups');\r\n      Array.from(optGroups).forEach((optGroup) => {\r\n        this.addOptGroup(optGroup);\r\n      });\r\n    } else {\r\n      const ul = document.createElement('ul');\r\n      ul.setAttribute('role', 'listbox');\r\n      ul.setAttribute('aria-labelledby', `${this.uuid}_label`);\r\n      this.listEl.appendChild(ul);\r\n      Array.from(this.nativeSelectEl.options).forEach((nativeOptionEl) => {\r\n        this.addOption(nativeOptionEl, ul);\r\n      });\r\n    }\r\n\r\n    this.updateSelectedOptionFromNativeSelect();\r\n  };\r\n\r\n  addOptGroup = (optGroup: HTMLOptGroupElement): void => {\r\n    const optGroupEl = document.createElement('ul');\r\n    optGroupEl.setAttribute('role', 'listbox');\r\n    optGroupEl.setAttribute('aria-labelledby', `${this.uuid}_label`);\r\n    this.listEl.appendChild(optGroupEl);\r\n    optGroupEl.setAttribute('role', 'group');\r\n\r\n    const optGroupHeadingEl = document.createElement('li');\r\n    optGroupEl.appendChild(optGroupHeadingEl);\r\n    optGroupHeadingEl.setAttribute('role', 'presentation');\r\n    optGroupHeadingEl.classList.add('dropdown-optgroup-heading');\r\n    optGroupHeadingEl.innerHTML = optGroup.label;\r\n\r\n    const index = this.listEl.children.length - 1;\r\n    optGroupHeadingEl.id = `${this.uuid}_optgroup-${index}`;\r\n    optGroupEl.setAttribute('aria-labelledby', optGroupHeadingEl.id);\r\n\r\n    Array.from(optGroup.children).forEach((nativeOptionEl) => {\r\n      this.addOption(nativeOptionEl as HTMLOptionElement, optGroupEl);\r\n    });\r\n  };\r\n\r\n  addOption = (nativeOptionEl: HTMLOptionElement, parent: HTMLUListElement): void => {\r\n    const index = this.listEl.querySelectorAll('.dropdown-option').length;\r\n    nativeOptionEl.setAttribute(`data-${this.uuid}-index`, `${index}`);\r\n\r\n    const optionEl = document.createElement('li');\r\n    optionEl.classList.add('dropdown-option');\r\n    optionEl.innerHTML = nativeOptionEl.innerHTML;\r\n    optionEl.id = `${this.uuid}_option-${index}`;\r\n    optionEl.setAttribute(`data-${this.uuid}-index`, `${index}`);\r\n    optionEl.setAttribute('role', 'option');\r\n    optionEl.setAttribute('aria-selected', 'false');\r\n\r\n    const icon = document.createElement('dc-ui-icon');\r\n    icon.classList.add('checkmark-icon');\r\n    icon.setAttribute('name', 'dc_checkmark');\r\n    icon.setAttribute('size', 'tiny');\r\n    icon.setAttribute('color', 'darkBlue02');\r\n    optionEl.appendChild(icon);\r\n\r\n    optionEl.addEventListener('click', () => {\r\n      this.selectOption(optionEl);\r\n    });\r\n\r\n    parent.appendChild(optionEl);\r\n  };\r\n\r\n  private observeNativeSelectOptions = (): void => {\r\n    observeOptions(this.nativeSelectEl, () => {\r\n      this.loadOptions();\r\n    });\r\n  };\r\n\r\n  private updateSelectedOptionFromNativeSelect = (): void => {\r\n    const selectedNativeOptionEl = this.nativeSelectEl.querySelector('option:checked');\r\n    if (selectedNativeOptionEl) {\r\n      const index = +selectedNativeOptionEl.getAttribute(`data-${this.uuid}-index`);\r\n      const selectedOptionEl = this.optionElByIndex(index);\r\n      this.selectOption(selectedOptionEl, false);\r\n    }\r\n  };\r\n\r\n  private selectOption = (optionEl: HTMLElement, fireEvent = true): void => {\r\n    Array.from(this.listEl.querySelectorAll('.dropdown-option')).forEach((otherOptionEl) => {\r\n      otherOptionEl.setAttribute('aria-selected', 'false');\r\n    });\r\n    optionEl.setAttribute('aria-selected', 'true');\r\n    optionEl.scrollIntoView({ block: 'nearest', inline: 'nearest' });\r\n\r\n    this.headTextEl.innerHTML = optionEl.textContent;\r\n    this.selectedOptionIndex = +optionEl.getAttribute(`data-${this.uuid}-index`);\r\n    this.nativeSelectEl.value = this.nativeOptionElByIndex(this.selectedOptionIndex).value;\r\n\r\n    if (fireEvent) {\r\n      this.nativeSelectEl.dispatchEvent(new Event('change', { bubbles: true })); // bubbles: true is required for the event to be caught in react\r\n    }\r\n  };\r\n\r\n  private onHeadKeydown = (e: KeyboardEvent): void => {\r\n    // if the dropdown is opened via keyboard, add a border to the currently selected option\r\n    if (['SpaceBar', 'Enter', ' '].includes(e.key)) {\r\n      this.optionElByIndex(this.selectedOptionIndex).classList.add('active');\r\n      return;\r\n    }\r\n\r\n    // if navigating with the arrow keys, select the next/previous option (if it exists) and add a border to it\r\n    if (!['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const offset = ['ArrowDown', 'ArrowRight'].includes(e.key) ? 1 : -1;\r\n    const nextIndex = this.selectedOptionIndex + offset;\r\n    const nextOptionEl = this.optionElByIndex(nextIndex);\r\n    if (nextOptionEl) {\r\n      Array.from(this.listEl.querySelectorAll('.dropdown-option')).forEach((optionEl) => {\r\n        optionEl.classList.remove('active');\r\n      });\r\n      nextOptionEl.classList.add('active');\r\n      this.selectOption(nextOptionEl);\r\n    }\r\n  };\r\n\r\n  private onHeadClick = (e: MouseEvent): void => {\r\n    e.stopPropagation();\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    closeOtherDropdowns(this);\r\n    if (!this.useNativeSelect) {\r\n      this.open = !this.open;\r\n    }\r\n  };\r\n\r\n  private optionElByIndex = (index: number): HTMLElement => {\r\n    return this.listEl.querySelector(`[data-${this.uuid}-index=\"${index}\"]`);\r\n  };\r\n\r\n  private nativeOptionElByIndex = (index: number): HTMLOptionElement => {\r\n    return this.nativeSelectEl.querySelector(`option[data-${this.uuid}-index=\"${index}\"]`);\r\n  };\r\n\r\n  render() {\r\n    injectCSS(\r\n      this.el,\r\n      createStyles,\r\n      this.labelPosition,\r\n      this.disabled,\r\n      this.useNativeSelect,\r\n      this.validationstate,\r\n      this.labelWidth,\r\n      this.open\r\n    );\r\n\r\n    const arrowIconColor = this.disabled ? 'grey03' : 'darkBlue02';\r\n\r\n    const label = (\r\n      <label\r\n        id={`${this.uuid}_label`}\r\n        aria-hidden={this.labelPosition === 'default' ? 'true' : 'false'}>\r\n        {this.label}\r\n      </label>\r\n    );\r\n\r\n    return (\r\n      <Host data-uuid={this.uuid}>\r\n        {!this.useNativeSelect && <slot></slot>}\r\n\r\n        <div class=\"container\">\r\n          {this.labelPosition !== 'default' && label}\r\n\r\n          {this.useNativeSelect ? (\r\n            <div\r\n              ref={(el) => (this.nativeSelectWrapperEl = el)}\r\n              class={{\r\n                'native-select-wrapper': true,\r\n                'dropdown-head': true,\r\n                disabled: this.disabled,\r\n                error: this.validationstate === 'error',\r\n              }}>\r\n              {this.labelPosition === 'default' && label}\r\n              <slot></slot>\r\n              <dc-ui-icon\r\n                class=\"arrow-icon\"\r\n                name=\"dc_down\"\r\n                size=\"tiny\"\r\n                color={arrowIconColor}></dc-ui-icon>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              class=\"dropdown\"\r\n              ref={(el) => (this.dropdownEl = el)}>\r\n              <button\r\n                ref={(el) => (this.headEl = el)}\r\n                class={{\r\n                  'dropdown-head': true,\r\n                  disabled: this.disabled,\r\n                  error: this.validationstate === 'error',\r\n                }}\r\n                tabindex={this.disabled ? '-1' : '0'}\r\n                role=\"combobox\"\r\n                aria-controls={`${this.uuid}_list`}\r\n                aria-expanded={this.open ? 'true' : 'false'}\r\n                aria-haspopup=\"listbox\"\r\n                aria-labelledby={`${this.uuid}_label`}\r\n                aria-activedescendant={`${this.uuid}_option-${this.selectedOptionIndex}`}\r\n                aria-live={this.open ? 'off' : 'polite'}\r\n                onClick={this.onHeadClick}\r\n                onKeyDown={this.onHeadKeydown}>\r\n                {this.labelPosition === 'default' && label}\r\n                <span\r\n                  ref={(el) => (this.headTextEl = el)}\r\n                  class=\"dropdown-head-text\"\r\n                  tabindex=\"-1\"></span>\r\n                <dc-ui-icon\r\n                  class=\"arrow-icon\"\r\n                  name=\"dc_down\"\r\n                  size=\"tiny\"\r\n                  color={arrowIconColor}></dc-ui-icon>\r\n              </button>\r\n\r\n              <div\r\n                id={`${this.uuid}_list`}\r\n                ref={(el) => (this.listEl = el)}\r\n                tabindex=\"-1\"\r\n                class={{\r\n                  'dropdown-list': true,\r\n                  open: this.open,\r\n                }}></div>\r\n            </div>\r\n          )}\r\n\r\n          {this.validationstate !== 'none' && (\r\n            <StateMessage\r\n              state={this.validationstate}\r\n              message={this.message}></StateMessage>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
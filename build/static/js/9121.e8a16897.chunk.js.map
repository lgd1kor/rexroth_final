{"version":3,"file":"static/js/9121.e8a16897.chunk.js","mappings":"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","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/a11y.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-select-button/dc-ui-select-button.scss?tag=dc-ui-select-button&encapsulation=shadow","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-select-button/dc-ui-select-button.tsx","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/font.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/functions/hasShadowDom.ts"],"sourcesContent":["import { AriaAttributes } from '../types';\r\n\r\nexport const removeAttribute = (el: HTMLElement, attributeName: string): void => {\r\n  el.removeAttribute(attributeName);\r\n};\r\n\r\nexport const setAttribute = (el: HTMLElement, attributeName: string, attributeValue = ''): void => {\r\n  el.setAttribute(attributeName, attributeValue);\r\n};\r\n\r\nexport type SetAriaAttributesOptions = {\r\n  label?: string;\r\n  message?: string;\r\n};\r\n\r\nexport const parseJSONAttribute = <T>(attribute: T | string): T => {\r\n  return typeof attribute === 'string'\r\n    ? // input is potentially JSON parsable string, e.g. \"{ aria-label: 'Some label' }\"\r\n      JSON.parse(\r\n        attribute\r\n          .replace(/'/g, '\"') // convert single quotes to double quotes\r\n          .replace(/[\\s\"]?([\\w-]+)[\\s\"]?:/g, '\"$1\":') // wrap keys in double quotes\r\n      )\r\n    : // input is object, e.g. { aria-label: 'Some label' }\r\n      attribute;\r\n};\r\n\r\nexport const setAriaAttributes = (el: HTMLElement, opts: SetAriaAttributesOptions): void => {\r\n  const { label, message } = opts;\r\n  if (label) {\r\n    setAttribute(el, 'aria-label', `${label}${message ? `. ${message}` : ''}`);\r\n  }\r\n};\r\n\r\nexport const parseAndGetAriaAttributes = (\r\n  rawAttributes: AriaAttributes | string\r\n): AriaAttributes => {\r\n  if (rawAttributes) {\r\n    const attributes = parseJSONAttribute(rawAttributes);\r\n    const attributeKeys = Object.keys(attributes);\r\n\r\n    // convert booleans to strings so that values are properly set and not just result in attributes without a value when true in jsx\r\n    for (const key of attributeKeys) {\r\n      if (typeof attributes[key] === 'boolean') {\r\n        attributes[key] = `${attributes[key]}`;\r\n      }\r\n    }\r\n\r\n    return attributes;\r\n  }\r\n};\r\n","// button styles\r\n$dc-ui-select-btn-animation-duration: 0.35s;\r\n$dc-ui-select-btn-focus-color: $color-focus;\r\n$dc-ui-select-btn-focus-color-inset: $color-white;\r\n\r\n$dc-ui-select-btn-bg: transparent;\r\n$dc-ui-select-btn-color: $color-grey-06;\r\n$dc-ui-select-btn-color-hover: $color-black;\r\n$dc-ui-select-btn-color-active: $color-turquoise-05;\r\n$dc-ui-select-btn-selected-color: $color-turquoise-04;\r\n$dc-ui-select-btn-disabled-bg: transparent;\r\n$dc-ui-select-btn-disabled-color: $color-grey-03;\r\n$dc-ui-select-btn-disabled-selected-color: $color-grey-04;\r\n\r\n@media screen and (prefers-reduced-motion: reduce) {\r\n  $dc-ui-select-btn-animation-duration: 0s;\r\n}\r\n\r\n:host {\r\n  display: inline-block;\r\n  width: auto;\r\n  cursor: pointer;\r\n}\r\n\r\n.dc-ui-select-btn {\r\n  align-content: center;\r\n  align-items: center;\r\n  background-color: $dc-ui-select-btn-bg;\r\n  border: none;\r\n  color: $dc-ui-select-btn-color;\r\n  cursor: inherit;\r\n  display: inline-flex;\r\n  gap: 7px;\r\n  justify-content: center;\r\n  outline: 0;\r\n  padding: 0;\r\n  position: relative;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n  vertical-align: middle;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n\r\n  &.disabled,\r\n  &[disabled] {\r\n    background-color: $dc-ui-select-btn-disabled-bg;\r\n    color: $dc-ui-select-btn-disabled-color;\r\n    cursor: not-allowed;\r\n\r\n    &.dc-ui-select-btn--selected {\r\n      color: $dc-ui-select-btn-disabled-selected-color;\r\n    }\r\n  }\r\n\r\n  &:focus-visible:not(.disabled):not([disabled]) {\r\n    &:before {\r\n      content: '';\r\n      position: absolute;\r\n      inset: 0;\r\n      border: 2px solid $dc-ui-select-btn-focus-color;\r\n      z-index: 3;\r\n    }\r\n\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      inset: 2px;\r\n      border: 1px solid $dc-ui-select-btn-focus-color-inset;\r\n      z-index: 3;\r\n    }\r\n  }\r\n\r\n  &:hover:not(.disabled):not([disabled]) {\r\n    color: $dc-ui-select-btn-color-hover;\r\n  }\r\n\r\n  &:active:not(.disabled):not([disabled]) {\r\n    color: $dc-ui-select-btn-color-active;\r\n  }\r\n\r\n  & > span {\r\n    font-family: 'Bosch sans';\r\n  }\r\n\r\n  &--selected {\r\n    color: $dc-ui-select-btn-selected-color;\r\n  }\r\n\r\n  &--align-left {\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  &--align-right {\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  &--hide-label {\r\n    gap: 0;\r\n\r\n    & > span {\r\n      display: block;\r\n      width: 1px;\r\n      text-size-adjust: none;\r\n      height: 1px;\r\n      margin: 0px 0px 0px -1px;\r\n      overflow: hidden;\r\n    }\r\n  }\r\n\r\n  &--small {\r\n    height: 32px;\r\n    padding: 0 15px;\r\n    font-size: 0.75rem;\r\n    line-height: 1rem;\r\n    font-weight: 900;\r\n\r\n    &.dc-ui-select-btn--icon:not(.dc-ui-select-btn--hide-label) {\r\n      padding: 0 15px 0 16px;\r\n    }\r\n\r\n    &.dc-ui-select-btn--hide-label {\r\n      padding: 0 6px;\r\n    }\r\n  }\r\n\r\n  &--normal {\r\n    height: 48px;\r\n    padding: 0 15px;\r\n    font-size: 1rem;\r\n    line-height: 1.25rem;\r\n    font-weight: 900;\r\n\r\n    &.dc-ui-select-btn--icon:not(.dc-ui-select-btn--hide-label) {\r\n      padding: 0 15px 0 16px;\r\n    }\r\n\r\n    &.dc-ui-select-btn--hide-label {\r\n      padding: 0 12px;\r\n    }\r\n  }\r\n\r\n  &--large {\r\n    height: 54px;\r\n    padding: 0 15px;\r\n    font-size: 1.25rem;\r\n    line-height: 1.375rem;\r\n    font-weight: 900;\r\n\r\n    &.dc-ui-select-btn--icon:not(.dc-ui-select-btn--hide-label) {\r\n      padding: 0 15px 0 16px;\r\n    }\r\n\r\n    &.dc-ui-select-btn--hide-label {\r\n      padding: 0 11px;\r\n    }\r\n  }\r\n}\r\n","import { Component, h, Element, Host, Prop, Method } from '@stencil/core';\r\nimport {\r\n  TButtonAlign,\r\n  TButtonAriaAttributes,\r\n  TButtonSize,\r\n  TButtonType,\r\n} from '../dc-ui-button/button-utils';\r\nimport { TIcon } from '../../svg/icons';\r\nimport {\r\n  SelectedAriaAttributes,\r\n  hasShadowDom,\r\n  injectFont,\r\n  parseAndGetAriaAttributes,\r\n} from '../../utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-select-button',\r\n  styleUrl: 'dc-ui-select-button.scss',\r\n  shadow: { delegatesFocus: true },\r\n})\r\nexport class DcUiSelectButton {\r\n  @Element() host: HTMLElement;\r\n  button: HTMLButtonElement;\r\n\r\n  /** Adds an alignment to the button. Default value is 'center'. */\r\n  @Prop() align?: TButtonAlign;\r\n  /** Adds a type to the button. Default value is 'submit'. */\r\n  @Prop() type: TButtonType = 'submit';\r\n  /** Adds a size to the button. Default value is 'normal'.*/\r\n  @Prop() size: TButtonSize = 'normal';\r\n  /** Hides the label on the button. Default value is false. */\r\n  @Prop() hideLabel = false;\r\n  /** Disables the button on the interface. Default value is false. */\r\n  @Prop() disabled = false;\r\n  /** Adds an icon to the button. Default value is an empty string. */\r\n  @Prop() icon?: TIcon;\r\n  /** Selected state of the button */\r\n  @Prop() selected = false;\r\n  /** Adds custom icon to the button. Using URL */\r\n  @Prop() iconSource?: string;\r\n  /** (optional) Adds a name to the button. This is useful for form submissions. */\r\n  @Prop() name?: string;\r\n  @Prop() aria?: SelectedAriaAttributes<TButtonAriaAttributes>;\r\n\r\n  componentWillLoad() {\r\n    injectFont();\r\n  }\r\n\r\n  @Method()\r\n  async toggleSelected() {\r\n    this.selected = !this.selected;\r\n  }\r\n\r\n  /**\r\n   * Hack to make the button behave has expected when inside forms.\r\n   * @see https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/button/button.tsx#L155-L175\r\n   */\r\n  handleClick = (ev: Event) => {\r\n    if (hasShadowDom(this.host)) {\r\n      const parentForm = this.host.closest('form');\r\n      if (parentForm) {\r\n        ev.preventDefault();\r\n\r\n        const fakeButton = document.createElement('button');\r\n        if (this.type) {\r\n          fakeButton.type = this.type;\r\n        }\r\n        fakeButton.style.display = 'none';\r\n        parentForm.appendChild(fakeButton);\r\n        fakeButton.click();\r\n        fakeButton.remove();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        onClick={(e) => {\r\n          if (this.disabled) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            e.stopImmediatePropagation();\r\n            return false;\r\n          }\r\n        }}>\r\n        <button\r\n          class={`\r\n            dc-ui-select-btn\r\n            dc-ui-select-btn--${this.size}\r\n            ${this.selected ? 'dc-ui-select-btn--selected' : ''}\r\n            ${this.hideLabel && this.icon ? 'dc-ui-select-btn--hide-label' : ''}\r\n            ${this.disabled ? 'dc-ui-select-btn--disabled' : ''}\r\n            ${this.align ? `dc-ui-select-btn--align-${this.align}` : ''}\r\n            ${this.icon ? 'dc-ui-select-btn--icon' : ''}\r\n          `}\r\n          type={this.type}\r\n          disabled={this.disabled}\r\n          aria-disabled={this.disabled ? 'true' : null}\r\n          {...parseAndGetAriaAttributes(this.aria)}\r\n          name={this.name}\r\n          ref={(button) => (this.button = button)}\r\n          onClick={this.handleClick}>\r\n          {this.icon || this.iconSource ? (\r\n            <dc-ui-icon\r\n              aria-hidden=\"true\"\r\n              name={this.icon}\r\n              source={this.iconSource}\r\n              size={this.size === 'normal' ? 'medium' : this.size}></dc-ui-icon>\r\n          ) : null}\r\n          <span>\r\n            <slot />\r\n          </span>\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","export const font = {\r\n  url: 'https://dc-webtoolkit.azureedge.net/font/fontStyles.css',\r\n  family: 'Bosch Sans',\r\n  size: {\r\n    small: '1rem',\r\n    medium: '1.5rem',\r\n    large: '2rem',\r\n  },\r\n};\r\n\r\n// inject font into the document\r\nexport function injectFont() {\r\n  // console.log('injectFont -- disabled');\r\n\r\n  // check if the font is already injected\r\n  if (\r\n    document.querySelector(`link[href=\"${font.url}\"]`) ||\r\n    document.querySelector(`link[href*=\"nextgen-web-ui-toolkit.css\"]`)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  const link = document.createElement('link');\r\n  link.rel = 'stylesheet';\r\n  link.href = font.url;\r\n  document.head.appendChild(link);\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const hasShadowDom = (el: HTMLElement) => {\r\n  return !!el.shadowRoot && !!(el as any).attachShadow;\r\n};\r\n"],"names":["setAriaAttributes","el","opts","label","message","attributeName","attributeValue","arguments","length","undefined","setAttribute","parseAndGetAriaAttributes","rawAttributes","attributes","attribute","JSON","parse","replace","attributeKeys","Object","keys","key","DcUiSelectButton","handleClick","ev","hasShadowDom","this","host","parentForm","closest","preventDefault","fakeButton","document","createElement","type","style","display","appendChild","click","remove","componentWillLoad","injectFont","toggleSelected","selected","render","h","Host","onClick","e","disabled","stopPropagation","stopImmediatePropagation","assign","class","size","hideLabel","icon","align","aria","name","ref","button","iconSource","source","font","url","family","small","medium","large","querySelector","link","rel","href","head","shadowRoot","attachShadow"],"sourceRoot":""}
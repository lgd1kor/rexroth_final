{"version":3,"file":"static/js/530.9ebe32a0.chunk.js","mappings":"2JAGO,MAAMA,EAAeA,CAC1BC,EACAC,EACAC,EACAC,KAEeC,EAAAA,EAAAA,GAAO,CACpB,UAAW,CACT,aAAc,CACZC,QAAS,UAGXC,GAAEC,OAAAC,OAAAD,OAAAC,OAAA,CACAC,SAAU,WACVC,aAAcT,GAAUC,EAAS,MAAQ,OACzCS,YAA0B,cAAbX,EAA2B,IAAM,OAE7B,cAAbA,EACA,CACE,WAAY,CACVY,QAAS,KACTP,QAAS,QACTI,SAAU,WACVI,IAAK,UACLC,KAAM,UACNC,MAAO,SACPC,gBAAiB,QACjBC,YAAa,KAEf,YAAa,CACXC,MAAO,gBAGX,CACE,YAAa,CACXC,WAAY,UAIE,SAAlBhB,EACA,CACEQ,YAAa,IACbR,cAAe,OAEf,WAAY,CACVE,QAAS,SAGb,CAAC,MC1CAe,EAAY,M,+BAUvBC,iBAAAA,GACE,MAAMC,EAASC,KAAKC,GAAGC,QAAQ,cAC/BF,KAAKvB,SAAWsB,EAAOtB,SACvBuB,KAAKpB,cAAgBmB,EAAOnB,cAC5BoB,KAAKtB,OAAwD,OAA/CqB,EAAOI,cAAcD,QAAQ,cAG3C,MAAME,EAASJ,KAAKC,GAAGI,mBACe,qBAA5B,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQE,QAAQC,iBAClBP,KAAKrB,QAAS,E,CAIlB6B,kBAAAA,KAC0BR,KAAKC,GAAGQ,cAAc,eAE5CT,KAAKU,OAAOC,SACZC,MAAMC,KAAKb,KAAKC,GAAGa,YAAYC,SAASC,IACtChB,KAAKiB,iBAAiBC,YAAYF,EAAM,KAG1ChB,KAAKiB,iBAAiBN,Q,CAI1BQ,MAAAA,GAGE,OAFAC,EAAAA,EAAAA,GAAUpB,KAAKC,GAAIzB,EAAcwB,KAAKvB,SAAUuB,KAAKtB,OAAQsB,KAAKrB,OAAQqB,KAAKpB,gBAG7EyC,EAAAA,EAAAA,GAAA,MAAAC,IAAA,6CACED,EAAAA,EAAAA,GAAA,QAAAC,IAAA,2CACEC,KAAK,cACLC,IAAMvB,GAAQD,KAAKiB,iBAAmBhB,KACxCoB,EAAAA,EAAAA,GAAA,cAAAC,IAAA,2CAAYE,IAAMvB,GAAQD,KAAKU,OAAST,IACtCoB,EAAAA,EAAAA,GAAA,QAAAC,IAAA,8C","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-list-item/list-item-styles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-list-item/dc-ui-list-item.tsx"],"sourcesContent":["import { getCss } from '../../utils';\r\nimport { TListType, TListStyleType } from '../dc-ui-list/list-utils';\r\n\r\nexport const createStyles = (\r\n  listType: TListType,\r\n  nested: boolean,\r\n  isLast: boolean,\r\n  listStyleType: TListStyleType\r\n): string => {\r\n  const styles = getCss({\r\n    '@global': {\r\n      'dc-ui-text': {\r\n        display: 'inline',\r\n      },\r\n\r\n      li: {\r\n        position: 'relative',\r\n        marginBottom: nested || isLast ? '4px' : '12px',\r\n        paddingLeft: listType === 'unordered' ? '0' : '8px',\r\n\r\n        ...(listType === 'unordered'\r\n          ? {\r\n              '&::after': {\r\n                content: '\"\"',\r\n                display: 'block',\r\n                position: 'absolute',\r\n                top: '0.625em',\r\n                left: '-0.75em',\r\n                width: '0.25em',\r\n                backgroundColor: 'black',\r\n                aspectRatio: '1',\r\n              },\r\n              '&::marker': {\r\n                color: 'transparent',\r\n              },\r\n            }\r\n          : {\r\n              '&::marker': {\r\n                fontWeight: 'bold',\r\n              },\r\n            }),\r\n\r\n        ...(listStyleType === 'none'\r\n          ? {\r\n              paddingLeft: '0',\r\n              listStyleType: 'none',\r\n\r\n              '&::after': {\r\n                display: 'none',\r\n              },\r\n            }\r\n          : {}),\r\n      },\r\n    },\r\n  });\r\n\r\n  return styles;\r\n};\r\n","import { Component, h, Element } from '@stencil/core';\r\nimport { injectCSS } from '../../utils';\r\nimport { createStyles } from './list-item-styles';\r\nimport { TListType, TListStyleType } from '../dc-ui-list/list-utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-list-item',\r\n  shadow: true,\r\n})\r\nexport class DcUiListItem {\r\n  @Element() el: HTMLElement;\r\n  listType: TListType;\r\n  listStyleType: TListStyleType;\r\n  nested: boolean;\r\n\r\n  nestedListSlotEl: Element;\r\n  textEl: Element;\r\n  isLast: boolean;\r\n\r\n  componentWillLoad() {\r\n    const parent = this.el.closest('dc-ui-list');\r\n    this.listType = parent.listType as TListType;\r\n    this.listStyleType = parent.listStyleType as TListStyleType;\r\n    this.nested = parent.parentElement.closest('dc-ui-list') !== null;\r\n\r\n    // check if this is the last item in the list\r\n    const nextEl = this.el.nextElementSibling;\r\n    if (nextEl?.tagName.toLowerCase() !== 'dc-ui-list-item') {\r\n      this.isLast = true;\r\n    }\r\n  }\r\n\r\n  componentDidRender() {\r\n    const hasNestedList = !!this.el.querySelector('dc-ui-list');\r\n    if (hasNestedList) {\r\n      this.textEl.remove();\r\n      Array.from(this.el.childNodes).forEach((child) => {\r\n        this.nestedListSlotEl.appendChild(child);\r\n      });\r\n    } else {\r\n      this.nestedListSlotEl.remove();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    injectCSS(this.el, createStyles, this.listType, this.nested, this.isLast, this.listStyleType);\r\n\r\n    return (\r\n      <li>\r\n        <slot\r\n          name=\"nested-list\"\r\n          ref={(el) => (this.nestedListSlotEl = el)}></slot>\r\n        <dc-ui-text ref={(el) => (this.textEl = el)}>\r\n          <slot></slot>\r\n        </dc-ui-text>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n"],"names":["createStyles","listType","nested","isLast","listStyleType","getCss","display","li","Object","assign","position","marginBottom","paddingLeft","content","top","left","width","backgroundColor","aspectRatio","color","fontWeight","DcUiListItem","componentWillLoad","parent","this","el","closest","parentElement","nextEl","nextElementSibling","tagName","toLowerCase","componentDidRender","querySelector","textEl","remove","Array","from","childNodes","forEach","child","nestedListSlotEl","appendChild","render","injectCSS","h","key","name","ref"],"sourceRoot":""}
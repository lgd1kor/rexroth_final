{"version":3,"file":"static/js/123.f4cbdbf9.chunk.js","mappings":"sHAAaA,EAAQ,CACnBC,WAAY,UAEZC,WAAY,UACZC,WAAY,UACZC,WAAY,UAEZC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UAEbC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UAERC,QAAS,UACTC,QAAS,UACTC,QAAS,UAETC,SAAU,UACVC,SAAU,UACVC,SAAU,UAEVC,MAAO,UACPC,MAAO,UACPC,MAAO,UAEPC,SAAU,UACVC,SAAU,UAEVC,WAAY,UACZC,WAAY,UACZC,WAAY,UAEZC,MAAO,UACPC,MAAO,U,wFC3CF,MAAMC,EAAeA,CAACC,EAAmBC,KAC9C,MAAMC,EAAkBF,EAAWtC,EAAAA,EAAWgC,WAAahC,EAAAA,EAAWiC,WAChEQ,EAAQH,EAAWtC,EAAAA,EAAWa,OAASb,EAAAA,EAAWmC,MAElDO,EAAqBH,EACvB,CACEI,SAAU,QAEZ,CAAC,EAECC,EAAqBL,EACvB,CACEI,SAAU,OACVE,SAAU,SACVC,aAAc,WACdC,WAAY,UAEd,CAAC,EAyDL,OAvDeC,EAAAA,EAAAA,GAAO,CACpB,UAAW,CACT,QAAOC,OAAAC,OAAA,CACLC,SAAU,WACVC,QAAS,cACTC,WAAY,SACZC,aAAc,MACdd,gBAAiBA,EACjBe,QAAS,mBACTC,UAAW,aACXxD,MAAOyC,GACJC,GAGL,aAAYO,OAAAC,OAAAD,OAAAC,OAAA,GACPN,GAAkB,CACrBa,WAAY,SAGdC,OAAQ,CACNP,SAAU,WACVQ,MAAO,aACPC,MAAO,OACPR,QAAS,cACTS,WAAY,SACZC,OAAQ,OACRC,WAAY,OACZR,QAAS,IACTvD,MAAOyC,EAEP,mBAAoB,CAClBuB,OAAQ,UAER,UAAW,CACTxB,gBAAiBxC,EAAAA,EAAWkC,WAC5BoB,aAAc,eAGhB,UAAW,CACTW,QAAS,IAET,YAAa,CACXC,QAAS,KACTd,QAAS,QACTD,SAAU,WACVQ,MAAO,EACPG,OAAQ,aAAa9D,EAAAA,EAAWM,cAChCgD,aAAc,oBAQb,ECpEFa,EAAa,M,4FAShB,KAAAC,qBAAuB,KAC7BC,KAAKC,mBAAmBC,MAAM,E,iCAPb,E,eACA,C,CASnBC,MAAAA,GAGE,OAFAC,EAAAA,EAAAA,GAAUJ,KAAKK,GAAIrC,EAAcgC,KAAK/B,SAAU+B,KAAK9B,WAGnDoC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,2DACYR,KAAK/B,SAAW,OAAS,KACxCwC,MAAOT,KAAK9B,SAAW8B,KAAKU,MAAQ,OACpCJ,EAAAA,EAAAA,GAAA,cAAAE,IAAA,2CAAYG,QAAQ,cAAcX,KAAKU,QACvCJ,EAAAA,EAAAA,GAAA,UAAAE,IAAA,2CACEI,QAASZ,KAAKD,qBACd9B,SAAU+B,KAAK/B,WACfqC,EAAAA,EAAAA,GAAA,cAAAE,IAAA,2CACEK,KAAK,WACLC,KAAK,W","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/utils/variables/color.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-filter-tag/filter-tag-styles.ts","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-filter-tag/dc-ui-filter-tag.tsx"],"sourcesContent":["export const color = {\r\n  focusColor: '#009cc2',\r\n\r\n  redBrand01: '#ed0007',\r\n  redBrand02: '#d50005',\r\n  redBrand03: '#a80003',\r\n\r\n  turquoise01: '#00c8f7',\r\n  turquoise02: '#00b9e5',\r\n  turquoise03: '#009cc2',\r\n  turquoise04: '#00738f',\r\n  turquoise05: '#004d61',\r\n  turquoise06: '#002936',\r\n\r\n  grey01: '#edf1f4',\r\n  grey02: '#cad6dd',\r\n  grey03: '#a3bac8',\r\n  grey04: '#99aebb',\r\n  grey05: '#7995a6',\r\n  grey06: '#506e81',\r\n  grey07: '#476273',\r\n  grey08: '#354956',\r\n  grey09: '#2d3e48',\r\n  grey10: '#1c272e',\r\n\r\n  green01: '#d9e8d0',\r\n  green02: '#528236',\r\n  green03: '#1a2a11',\r\n\r\n  yellow01: '#f9f3bc',\r\n  yellow02: '#ebd417',\r\n  yellow03: '#2a2604',\r\n\r\n  red01: '#f7bfc8',\r\n  red02: '#da1e28',\r\n  red03: '#54000e',\r\n\r\n  orange01: '#FBE8DA',\r\n  orange02: '#DC641E',\r\n\r\n  darkBlue01: '#d1dce3',\r\n  darkBlue02: '#002b49',\r\n  darkBlue03: '#00243e',\r\n\r\n  white: '#ffffff',\r\n  black: '#000000',\r\n};\r\n\r\nexport type TColor = keyof typeof color;\r\nexport type TBGColor = 'grey01' | 'turquoise01' | 'darkBlue02';\r\n","import { getCss, color as colorUtils } from '../../utils';\r\n\r\nexport const createStyles = (disabled: boolean, ellipsis: boolean): string => {\r\n  const backgroundColor = disabled ? colorUtils.darkBlue01 : colorUtils.darkBlue02;\r\n  const color = disabled ? colorUtils.grey03 : colorUtils.white;\r\n\r\n  const ellipsisHostStyles = ellipsis\r\n    ? {\r\n        maxWidth: '100%',\r\n      }\r\n    : {};\r\n\r\n  const ellipsisTextStyles = ellipsis\r\n    ? {\r\n        maxWidth: '100%',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n      }\r\n    : {};\r\n\r\n  const styles = getCss({\r\n    '@global': {\r\n      ':host': {\r\n        position: 'relative',\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        borderRadius: '4px',\r\n        backgroundColor: backgroundColor,\r\n        padding: '6px 36px 6px 8px',\r\n        boxSizing: 'border-box',\r\n        color: color,\r\n        ...ellipsisHostStyles,\r\n      },\r\n\r\n      'dc-ui-text': {\r\n        ...ellipsisTextStyles,\r\n        lineHeight: '16px',\r\n      },\r\n\r\n      button: {\r\n        position: 'absolute',\r\n        inset: '0 0 0 auto',\r\n        width: '32px',\r\n        display: 'inline-grid',\r\n        placeItems: 'center',\r\n        border: 'none',\r\n        background: 'none',\r\n        padding: '0',\r\n        color: color,\r\n\r\n        '&:not(:disabled)': {\r\n          cursor: 'pointer',\r\n\r\n          '&:hover': {\r\n            backgroundColor: colorUtils.darkBlue03,\r\n            borderRadius: '0 4px 4px 0',\r\n          },\r\n\r\n          '&:focus': {\r\n            outline: '0',\r\n\r\n            '&::before': {\r\n              content: '\"\"',\r\n              display: 'block',\r\n              position: 'absolute',\r\n              inset: 0,\r\n              border: `2px solid ${colorUtils.turquoise02}`,\r\n              borderRadius: '0 4px 4px 0',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return styles;\r\n};\r\n","import { Component, Host, h, Prop, Element, Event, EventEmitter } from '@stencil/core';\r\nimport { injectCSS } from '../../utils';\r\nimport { createStyles } from './filter-tag-styles';\r\n\r\n@Component({\r\n  tag: 'dc-ui-filter-tag',\r\n  shadow: true,\r\n})\r\nexport class DcUiFilterTag {\r\n  @Element() el: HTMLElement;\r\n  @Prop() label: string;\r\n  @Prop() disabled = false;\r\n  @Prop() ellipsis = false;\r\n\r\n  /** Emitted when close button is clicked. */\r\n  @Event({ bubbles: false }) public closeButtonClicked: EventEmitter;\r\n\r\n  private onCloseButtonClicked = (): void => {\r\n    this.closeButtonClicked.emit();\r\n  };\r\n\r\n  render() {\r\n    injectCSS(this.el, createStyles, this.disabled, this.ellipsis);\r\n\r\n    return (\r\n      <Host\r\n        aria-disabled={this.disabled ? 'true' : null}\r\n        title={this.ellipsis ? this.label : null}>\r\n        <dc-ui-text variant=\"small-text\">{this.label}</dc-ui-text>\r\n        <button\r\n          onClick={this.onCloseButtonClicked}\r\n          disabled={this.disabled}>\r\n          <dc-ui-icon\r\n            name=\"dc_close\"\r\n            size=\"small\"></dc-ui-icon>\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"names":["color","focusColor","redBrand01","redBrand02","redBrand03","turquoise01","turquoise02","turquoise03","turquoise04","turquoise05","turquoise06","grey01","grey02","grey03","grey04","grey05","grey06","grey07","grey08","grey09","grey10","green01","green02","green03","yellow01","yellow02","yellow03","red01","red02","red03","orange01","orange02","darkBlue01","darkBlue02","darkBlue03","white","black","createStyles","disabled","ellipsis","backgroundColor","color$1","ellipsisHostStyles","maxWidth","ellipsisTextStyles","overflow","textOverflow","whiteSpace","getCss","Object","assign","position","display","alignItems","borderRadius","padding","boxSizing","lineHeight","button","inset","width","placeItems","border","background","cursor","outline","content","DcUiFilterTag","onCloseButtonClicked","this","closeButtonClicked","emit","render","injectCSS","el","h","Host","key","title","label","variant","onClick","name","size"],"sourceRoot":""}
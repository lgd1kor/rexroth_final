{"version":3,"file":"static/js/6019.bd2a36e2.chunk.js","mappings":"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","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-value-indicator/dc-ui-value-indicator.scss?tag=dc-ui-value-indicator&encapsulation=shadow","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-value-indicator/dc-ui-value-indicator.tsx","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/common/state-message/state-message.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n\r\n.dc-ui-value-indicator {\r\n  label {\r\n    color: $color-grey-06;\r\n    @include font-style('state-message');\r\n    line-height: 12px;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    min-width: 140px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    align-self: stretch;\r\n    background: $color-white;\r\n    position: relative;\r\n\r\n    &:before {\r\n      content: '';\r\n      inset: 0;\r\n      position: absolute;\r\n      border: 1px solid $color-grey-05;\r\n      z-index: 1;\r\n      pointer-events: none;\r\n      transition: border-color 0.3s;\r\n    }\r\n\r\n    dc-ui-button {\r\n      &.btn--decrease,\r\n      &.btn--increase {\r\n        position: absolute;\r\n      }\r\n\r\n      &.btn--decrease {\r\n        left: 0;\r\n      }\r\n\r\n      &.btn--increase {\r\n        right: 0;\r\n      }\r\n    }\r\n\r\n    .input {\r\n      text-align: center;\r\n      border: none;\r\n      box-shadow: none;\r\n      outline: none;\r\n      background: transparent;\r\n      width: 100%;\r\n      padding: 12px 0;\r\n      color: $color-dark-blue-02;\r\n      @include font-style('text');\r\n\r\n      &.input-size--small {\r\n        padding: 4px 0;\r\n      }\r\n\r\n      &--disabled {\r\n        color: $color-grey-03;\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n\r\n    &:has(.input:focus-visible) {\r\n      &:before {\r\n        border: 2px solid $color-turquoise-03;\r\n      }\r\n    }\r\n\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n\r\n    /* Firefox: Hide spin buttons */\r\n    input[type='number'] {\r\n      -moz-appearance: textfield;\r\n    }\r\n  }\r\n\r\n  .message {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    margin-top: 5px;\r\n    @include font-style('state-message');\r\n    color: $color-black;\r\n  }\r\n\r\n  &--error {\r\n    .wrapper {\r\n      background: $color-white;\r\n\r\n      &::before {\r\n        border: 2px solid $color-red-02;\r\n      }\r\n    }\r\n\r\n    .message {\r\n      color: $color-red-02;\r\n      @include font-style('small-text');\r\n    }\r\n  }\r\n\r\n  &--disabled {\r\n    label {\r\n      color: $color-grey-03;\r\n    }\r\n    .wrapper {\r\n      &:before {\r\n        border: 1px solid $color-grey-03;\r\n      }\r\n    }\r\n  }\r\n\r\n  &--hidelabel {\r\n    label {\r\n      position: absolute;\r\n      width: 1px;\r\n      height: 1px;\r\n      margin: -1px;\r\n      overflow: hidden;\r\n      clip: rect(1px, 1px, 1px, 1px);\r\n      clip-path: inset(50%);\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Prop,\r\n  h,\r\n  Watch,\r\n  Method,\r\n  Event,\r\n  EventEmitter,\r\n  AttachInternals,\r\n} from '@stencil/core';\r\nimport { TValidationState } from '../../utils';\r\nimport { StateMessage } from '../common/state-message/state-message';\r\n\r\n@Component({\r\n  tag: 'dc-ui-value-indicator',\r\n  styleUrl: 'dc-ui-value-indicator.scss',\r\n  formAssociated: true,\r\n  shadow: true,\r\n})\r\nexport class DcUiValueIndicator {\r\n  @AttachInternals() internals!: ElementInternals;\r\n  @Prop() min: number = 0;\r\n  @Prop() max: number = 100;\r\n  @Prop() value?: number = this.value || this.min;\r\n  @Prop() step: number = 1;\r\n  @Prop() size: 'small' | 'large' = 'large';\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() ariaLabelIncrease: string = 'Increase value';\r\n  @Prop() ariaLabelDecrease: string = 'Decrease value';\r\n  @Prop() name?: string;\r\n  @Prop() label: string = 'Label';\r\n  @Prop() hideLabel: boolean = false;\r\n  @Prop() message: string = '';\r\n  @Prop() validationstate?: TValidationState = 'none';\r\n\r\n  @Event() dcChange: EventEmitter<number>;\r\n\r\n  private subtractDisabled: boolean = false;\r\n  private addDisabled: boolean = false;\r\n  private inputElement!: HTMLInputElement;\r\n\r\n  @Watch('value')\r\n  handleValueChange() {\r\n    this.updateButtonState();\r\n    this.dcChange.emit(this.value);\r\n    this.internals.setFormValue(`${this.value}`);\r\n  }\r\n\r\n  private updateButtonState() {\r\n    this.subtractDisabled = this.value <= this.min;\r\n    this.addDisabled = this.value >= this.max;\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.clampValue();\r\n    this.updateButtonState();\r\n    this.internals.setFormValue(`${this.value}`);\r\n  }\r\n\r\n  private clampValue() {\r\n    if (this.value < this.min) {\r\n      this.value = this.min;\r\n    } else if (this.value > this.max) {\r\n      this.value = this.max;\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async increaseValue() {\r\n    if (this.value + this.step <= this.max) {\r\n      this.value += this.step;\r\n    } else {\r\n      this.value = this.max;\r\n    }\r\n    this.updateButtonState();\r\n  }\r\n\r\n  @Method()\r\n  async decreaseValue() {\r\n    if (this.value - this.step >= this.min) {\r\n      this.value -= this.step;\r\n    } else {\r\n      this.value = this.min;\r\n    }\r\n    this.updateButtonState();\r\n  }\r\n\r\n  @Method()\r\n  async setValue(newValue: number) {\r\n    this.value = Math.min(Math.max(newValue, this.min), this.max);\r\n    this.updateButtonState();\r\n  }\r\n\r\n  @Method()\r\n  async getValue(): Promise<number> {\r\n    return this.value;\r\n  }\r\n\r\n  private roundToNearestStep(value: number): number {\r\n    const stepsFromMin = (value - this.min) / this.step;\r\n    const roundedSteps = Math.round(stepsFromMin);\r\n    return this.min + roundedSteps * this.step;\r\n  }\r\n\r\n  private handleInputChange = () => {\r\n    const newValue = Number(this.inputElement.value) || this.min;\r\n    const roundedValue = this.roundToNearestStep(newValue);\r\n    this.setValue(roundedValue);\r\n    this.inputElement.value = this.value.toString();\r\n  };\r\n\r\n  handleInputBlur = () => {\r\n    // get value from input\r\n    const inputValue = parseInt(this.inputElement.value, 10);\r\n    const roundedValue = this.roundToNearestStep(inputValue);\r\n    this.setValue(roundedValue);\r\n    this.inputElement.value = this.value.toString();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        class={{\r\n          'dc-ui-value-indicator': true,\r\n          [`dc-ui-value-indicator--${this.size}`]: true,\r\n          'dc-ui-value-indicator--disabled': this.disabled,\r\n          'dc-ui-value-indicator--hidelabel': this.hideLabel,\r\n          'dc-ui-value-indicator--error': this.validationstate === 'error',\r\n        }}>\r\n        <label htmlFor=\"input\">{this.label}</label>\r\n        <div class={`wrapper`}>\r\n          <dc-ui-button\r\n            class=\"btn--decrease\"\r\n            onClick={() => this.decreaseValue()}\r\n            size={this.size === 'small' ? 'small' : 'normal'}\r\n            variant=\"link\"\r\n            icon=\"dc_less_minimize\"\r\n            disabled={this.subtractDisabled || this.disabled}\r\n            hide-label=\"true\"\r\n            aria-label={this.ariaLabelDecrease}></dc-ui-button>\r\n          <input\r\n            ref={(el) => (this.inputElement = el)}\r\n            id=\"input\"\r\n            name={this.name}\r\n            class={`input input-size--${this.size} ${this.disabled ? 'input--disabled' : ''}`}\r\n            type=\"number\"\r\n            value={this.value}\r\n            onBlur={this.handleInputBlur}\r\n            onChange={this.handleInputChange}\r\n            disabled={this.disabled}\r\n          />\r\n          <dc-ui-button\r\n            class=\"btn--increase\"\r\n            onClick={() => this.increaseValue()}\r\n            size={this.size === 'small' ? 'small' : 'normal'}\r\n            variant=\"link\"\r\n            icon=\"dc_add\"\r\n            disabled={this.addDisabled || this.disabled}\r\n            hide-label=\"true\"\r\n            aria-label={this.ariaLabelIncrease}></dc-ui-button>\r\n        </div>\r\n\r\n        {this.validationstate === 'error' && (\r\n          <StateMessage\r\n            state={this.validationstate}\r\n            message={this.message}></StateMessage>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { FunctionalComponent, h } from '@stencil/core';\r\nimport { TValidationState } from '../../../utils';\r\n\r\ntype StateMessageProps = {\r\n  message?: string;\r\n  state: TValidationState;\r\n};\r\n\r\nexport const StateMessage: FunctionalComponent<StateMessageProps> = ({ message, state }) => {\r\n  return (\r\n    <span class=\"message\">\r\n      {state === 'error' && (\r\n        <dc-ui-icon\r\n          name=\"dc_status_error\"\r\n          color=\"red02\"\r\n          size=\"tiny\"></dc-ui-icon>\r\n      )}\r\n      {message}\r\n    </span>\r\n  );\r\n};\r\n"],"names":["DcUiValueIndicator","subtractDisabled","addDisabled","handleInputChange","newValue","Number","this","inputElement","value","min","roundedValue","roundToNearestStep","setValue","toString","handleInputBlur","inputValue","parseInt","handleValueChange","updateButtonState","dcChange","emit","internals","setFormValue","max","componentWillLoad","clampValue","increaseValue","step","decreaseValue","Math","getValue","stepsFromMin","roundedSteps","round","render","h","key","class","size","disabled","hideLabel","validationstate","htmlFor","label","onClick","variant","icon","ariaLabelDecrease","ref","el","id","name","type","onBlur","onChange","ariaLabelIncrease","StateMessage","state","message","_ref","color"],"sourceRoot":""}
{"version":3,"file":"static/js/9624.3ee34417.chunk.js","mappings":"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","sources":["../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-pagination/dc-ui-pagination.scss?tag=dc-ui-pagination&encapsulation=shadow","../node_modules/@boschrexroth/nextgen-web-ui-toolkit/dist/esm/src/components/dc-ui-pagination/dc-ui-pagination.tsx"],"sourcesContent":[":host {\r\n  display: inline-block;\r\n}\r\n\r\n.dc-ui-pagination {\r\n  display: flex;\r\n  gap: 8px;\r\n\r\n  button.page-button,\r\n  button.arrow-button {\r\n    @include font-style('mid-size-text');\r\n\r\n    display: grid;\r\n    place-content: center;\r\n    border: none;\r\n    width: 48px;\r\n    height: 48px;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    padding: 0;\r\n\r\n    &:hover {\r\n      background-color: $color-grey-01;\r\n    }\r\n\r\n    &:focus-visible {\r\n      outline: 2px solid $color-turquoise-03;\r\n    }\r\n  }\r\n\r\n  .numbers {\r\n    display: flex;\r\n    gap: inherit;\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    .page {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      &.active {\r\n        button {\r\n          background-color: $color-grey-05;\r\n\r\n          &:hover {\r\n            background-color: $color-grey-05;\r\n          }\r\n          font-weight: bold;\r\n        }\r\n      }\r\n    }\r\n\r\n    .dropdown-wrapper {\r\n      list-style-type: none;\r\n\r\n      .dropdown {\r\n        width: 48px;\r\n        height: 48px;\r\n        border: none;\r\n        text-align: center;\r\n        text-align-last: center; // for safari\r\n        background-color: transparent;\r\n        list-style-type: none;\r\n\r\n        &:hover {\r\n          background-color: $color-grey-01;\r\n        }\r\n\r\n        &:focus-visible {\r\n          outline: 2px solid $color-turquoise-03;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.small {\r\n    button.page-button,\r\n    button.arrow-button {\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n\r\n    .numbers {\r\n      //   .page {\r\n      //     width: 32px;\r\n      //     height: 32px;\r\n      //     min-width: 0;\r\n      //   }\r\n\r\n      .dropdown {\r\n        width: 32px;\r\n        height: 32px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nselect {\r\n  -webkit-appearance: none;\r\n}\r\n","import { Component, Prop, Element, h, Method, Watch, Event, EventEmitter } from '@stencil/core';\r\nimport { TPaginationSize, TPaginationVariant } from './pagination-utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-pagination',\r\n  styleUrl: 'dc-ui-pagination.scss',\r\n  shadow: true,\r\n})\r\nexport class DcUiPagination {\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() totalPages: number = 10;\r\n  @Prop() currentPage: number = 1;\r\n  @Prop() size: TPaginationSize = 'large';\r\n  @Prop() variant: TPaginationVariant = 'default';\r\n  @Prop() ariaLabelPrevious: string = 'Previous page';\r\n  @Prop() ariaLabelNext: string = 'Next page';\r\n\r\n  @Event() dcChange: EventEmitter<number>;\r\n\r\n  componentDidRender() {\r\n    this.activePage(this.currentPage);\r\n  }\r\n\r\n  @Watch('currentPage')\r\n  currentPageChanged(newValue: number) {\r\n    this.dcChange.emit(newValue);\r\n  }\r\n\r\n  @Method()\r\n  async goToPage(page: number) {\r\n    // First remove active class from current active page\r\n    const oldActiveElement = this.el.shadowRoot.querySelector(`.page.active`);\r\n    if (oldActiveElement) {\r\n      oldActiveElement.classList.remove('active');\r\n    }\r\n\r\n    this.currentPage = page;\r\n\r\n    // Reset selects if they exist\r\n    const selects = this.el.shadowRoot?.querySelectorAll('select');\r\n    if (selects?.length) {\r\n      selects.forEach((select) => {\r\n        (select as HTMLSelectElement).selectedIndex = 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async nextPage() {\r\n    if (this.currentPage < this.totalPages) {\r\n      this.currentPage++;\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async previousPage() {\r\n    if (this.currentPage > 1) {\r\n      this.currentPage--;\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async getCurrentPage() {\r\n    return this.currentPage;\r\n  }\r\n\r\n  private activePage = (newValue: number) => {\r\n    const oldActiveElement = this.el.shadowRoot.querySelector(`.page.active`);\r\n    const newActiveElement = this.el.shadowRoot.querySelector(`.page[data-value=\"${newValue}\"]`);\r\n\r\n    if (oldActiveElement) {\r\n      oldActiveElement.classList.remove('active');\r\n    }\r\n\r\n    if (newActiveElement) {\r\n      newActiveElement.classList.add('active');\r\n    }\r\n  };\r\n\r\n  private createDropdown = (position: 'start' | 'end') => {\r\n    const innerPages = this.variant === 'default' ? 7 : 3;\r\n    const firstCenterPage = this.variant === 'default' ? 5 : 3;\r\n\r\n    const options = [\r\n      <option\r\n        value=\"\"\r\n        selected\r\n        hidden>\r\n        ...\r\n      </option>,\r\n    ];\r\n\r\n    const getRange = () => {\r\n      if (position === 'start') {\r\n        return {\r\n          start: 2,\r\n          end: Math.min(this.currentPage - (firstCenterPage - 2), this.totalPages - innerPages),\r\n        };\r\n      }\r\n\r\n      return {\r\n        start:\r\n          this.currentPage <= firstCenterPage\r\n            ? 1 + innerPages\r\n            : this.currentPage + (firstCenterPage - 2),\r\n        end: this.totalPages - 1,\r\n      };\r\n    };\r\n\r\n    const { start, end } = getRange();\r\n    for (let i = start; i <= end; i++) {\r\n      options.push(<option value={i}>{i}</option>);\r\n    }\r\n\r\n    return (\r\n      <li class=\"dropdown-wrapper\">\r\n        <select\r\n          class=\"dropdown\"\r\n          aria-label=\"Page number\"\r\n          onChange={(e) => this.goToPage(parseInt((e.target as HTMLSelectElement).value))}>\r\n          {options}\r\n        </select>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  private returnPageElements = () => {\r\n    const elements = [];\r\n    const maxPages = this.variant === 'default' ? 9 : 5;\r\n    const innerPages = this.variant === 'default' ? 7 : 3;\r\n    const firstCenterPage = this.variant === 'default' ? 5 : 3;\r\n\r\n    const buttonTemplate = (page: number) => (\r\n      <li\r\n        class=\"page\"\r\n        data-value={page}>\r\n        <button\r\n          class=\"page-button\"\r\n          onClick={() => this.goToPage(page)}>\r\n          {page}\r\n        </button>\r\n      </li>\r\n    );\r\n\r\n    // Helper function to add range of pages\r\n    const addPageRange = (start: number, end: number) => {\r\n      for (let i = start; i <= end; i++) {\r\n        elements.push(buttonTemplate(i));\r\n      }\r\n    };\r\n\r\n    // Handle cases based on total pages\r\n    if (this.totalPages <= maxPages) {\r\n      // Case 1: Less than or equal to maxPages - show all pages\r\n      addPageRange(1, this.totalPages);\r\n      return elements;\r\n    }\r\n\r\n    // Case 2: More than maxPages - need dropdowns\r\n    elements.push(buttonTemplate(1)); // First page is always shown\r\n\r\n    if (this.currentPage <= firstCenterPage) {\r\n      // Near start - show dropdown at end\r\n      addPageRange(2, innerPages);\r\n      elements.push(this.createDropdown('end'));\r\n      elements.push(buttonTemplate(this.totalPages));\r\n    } else if (this.currentPage >= this.totalPages - (firstCenterPage - 1)) {\r\n      // Near end - show dropdown at start\r\n      elements.push(this.createDropdown('start'));\r\n      const startPage = this.totalPages - innerPages;\r\n      addPageRange(startPage + 1, this.totalPages);\r\n    } else {\r\n      // In middle - show dropdowns on both sides\r\n      elements.push(this.createDropdown('start'));\r\n      const centerStart = this.currentPage - (firstCenterPage - 3);\r\n      addPageRange(centerStart, centerStart + (innerPages - 3));\r\n      elements.push(this.createDropdown('end'));\r\n      elements.push(buttonTemplate(this.totalPages));\r\n    }\r\n\r\n    return elements;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class={`dc-ui-pagination ${this.size === 'small' ? 'small' : ''}`}>\r\n        <button\r\n          class=\"arrow-button\"\r\n          onClick={() => this.previousPage()}\r\n          aria-label={this.ariaLabelPrevious}>\r\n          <dc-ui-icon\r\n            name=\"dc_backward_left\"\r\n            color=\"darkBlue02\"\r\n            size={`${this.size === 'large' ? 'medium' : 'small'}`}\r\n          />\r\n        </button>\r\n\r\n        <ul class=\"numbers\">{this.returnPageElements()}</ul>\r\n\r\n        <button\r\n          class=\"arrow-button\"\r\n          onClick={() => this.nextPage()}\r\n          aria-label={this.ariaLabelNext}>\r\n          <dc-ui-icon\r\n            name=\"dc_forward_right\"\r\n            color=\"darkBlue02\"\r\n            size={`${this.size === 'large' ? 'medium' : 'small'}`}\r\n          />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"names":["DcUiPagination","activePage","newValue","oldActiveElement","this","el","shadowRoot","querySelector","newActiveElement","classList","remove","add","createDropdown","position","innerPages","variant","firstCenterPage","options","h","value","selected","hidden","start","end","getRange","Math","min","currentPage","totalPages","i","push","class","onChange","e","goToPage","parseInt","target","returnPageElements","elements","maxPages","buttonTemplate","page","onClick","addPageRange","centerStart","componentDidRender","currentPageChanged","dcChange","emit","selects","_a","querySelectorAll","length","forEach","select","selectedIndex","nextPage","previousPage","getCurrentPage","render","key","size","ariaLabelPrevious","name","color","ariaLabelNext"],"sourceRoot":""}
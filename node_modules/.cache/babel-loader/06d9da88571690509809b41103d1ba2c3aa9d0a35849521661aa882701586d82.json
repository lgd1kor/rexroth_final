{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LGD1KOR\\\\Desktop\\\\react\\\\my-app\\\\src\\\\Module.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from 'axios';\n\n// export default function Modal() {\n//   const [names, setNames] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get('https://webapi.partcommunity.com/cadqualifier.asp?apikey=e66120f9d9624823884cac1bf290ea88');\n//         const xmlData = response.data;\n\n//         // Parse the XML data\n//         const parser = new DOMParser();\n//         const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\n//         const formatTags = xmlDoc.getElementsByTagName('format');\n\n//         const extractedNames = Array.from(formatTags).map(format => {\n//           const nameTag = format.getElementsByTagName('name')[0];\n//           const versionTag = format.getElementsByTagName('version')[0];\n//           const cad = format.getAttribute('cad');\n\n//           const name = nameTag ? nameTag.textContent : '';\n//           const version = versionTag && versionTag.textContent ? versionTag.textContent : '';\n\n//           return `${name} ${version} (${cad})`.trim();\n//         });\n\n//         // Update the state with the extracted names\n//         setNames(extractedNames);\n//       } catch (error) {\n//         setError(error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>Error: {error.message}</div>;\n\n//   useEffect(() => {\n//     if (modal) {\n//       document.body.classList.add('active-modal');\n//       document.body.classList.add('disable-pointer-events');\n//     } else {\n//       document.body.classList.remove('active-modal');\n//       document.body.classList.remove('disable-pointer-events');\n//     }\n//   }, [modal]);\n\n//   const toggleModal = () => {\n//     setModal(prevModal => !prevModal);\n//   };\n\n//   const modalStyles = {\n//     modal: {\n//       width: '100vw',\n//       height: '100vh',\n//       position: 'fixed',\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       bottom: 0,\n//       zIndex: 1000,\n//     },\n//     overlay: {\n//       background: 'rgba(49,49,49,0.8)',\n//     },\n//     modalContent: {\n//       position: 'absolute',\n//       top: '40%',\n//       left: '50%',\n//       transform: 'translate(-50%, -50%)',\n//       lineHeight: 1.4,\n//       background: '#f1f1f1',\n//       padding: '14px 28px',\n//       borderRadius: '3px',\n//       maxWidth: '600px',\n//       minWidth: '300px',\n//       zIndex: 1001,\n//     },\n//     closeModal: {\n//       position: 'absolute',\n//       top: '10px',\n//       right: '10px',\n//     },\n//     btnModal: {\n//       width: '250px', \n//       height: '60px' \n//     }\n//   };\n\n//   return (\n//     <div>\n//     <dc-ui-button variant=\"primary\" size=\"normal\" type=\"button\" align=\"center\" icon=\"dc_download\" onClick={toggleModal} style={modalStyles.btnModal}>\n//           <dc-ui-text tag=\"span\" variant=\"small-text\" color=\"inherit\" text-align=\"center\">download</dc-ui-text>\n//       </dc-ui-button>\n//       {modal && (\n//         <div style={{ ...modalStyles.modal, ...modalStyles.overlay }}>\n//           <div onClick={toggleModal} style={{ ...modalStyles.modal, ...modalStyles.overlay }}></div>\n//           <div style={modalStyles.modalContent}>\n//             <h2><ul>\n//         {names.map((name, index) => (\n//           <li key={index}>{name}</li>\n//         ))}\n//       </ul> </h2>\n//             <dc-ui-button variant=\"link\" size=\"small\" type=\"button\" align=\"center\" icon=\"dc_close\" style={modalStyles.closeModal} onClick={toggleModal}>\n//            </dc-ui-button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modal() {\n  _s();\n  const [names, setNames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [modal, setModal] = useState(false); // Modal state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://webapi.partcommunity.com/cadqualifier.asp?apikey=e66120f9d9624823884cac1bf290ea88');\n        const xmlData = response.data;\n\n        // Parse the XML data\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\n        const formatTags = xmlDoc.getElementsByTagName('format');\n        const extractedNames = Array.from(formatTags).map(format => {\n          const nameTag = format.getElementsByTagName('name')[0];\n          const versionTag = format.getElementsByTagName('version')[0];\n          const cad = format.getAttribute('cad');\n          const name = nameTag ? nameTag.textContent : '';\n          const version = versionTag && versionTag.textContent ? versionTag.textContent : '';\n          return `${name} ${version} (${cad})`.trim();\n        });\n\n        // Update the state with the extracted names\n        setNames(extractedNames);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (modal) {\n      document.body.classList.add('active-modal');\n      document.body.classList.add('disable-pointer-events');\n    } else {\n      document.body.classList.remove('active-modal');\n      document.body.classList.remove('disable-pointer-events');\n    }\n  }, [modal]);\n  const toggleModal = () => {\n    setModal(prevModal => !prevModal);\n  };\n  const modalStyles = {\n    modal: {\n      width: '100vw',\n      height: '100vh',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 1000,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    overlay: {\n      background: 'rgba(49,49,49,0.8)'\n    },\n    modalContent: {\n      width: '400px',\n      // Set the width of the modal content\n      height: '200px',\n      // Set the height of the modal content\n      background: '#f1f1f1',\n      padding: '14px 28px',\n      borderRadius: '3px',\n      overflowY: 'auto',\n      // Add vertical scroll if content exceeds height\n      position: 'relative'\n    },\n    closeModal: {\n      position: 'absolute',\n      top: '10px',\n      right: '10px',\n      cursor: 'pointer'\n    },\n    btnModal: {\n      width: '250px',\n      height: '60px'\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"dc-ui-button\", {\n      variant: \"primary\",\n      size: \"normal\",\n      type: \"button\",\n      align: \"center\",\n      icon: \"dc_download\",\n      onClick: toggleModal,\n      style: modalStyles.btnModal,\n      children: /*#__PURE__*/_jsxDEV(\"dc-ui-text\", {\n        tag: \"span\",\n        variant: \"small-text\",\n        color: \"inherit\",\n        \"text-align\": \"center\",\n        children: \"download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...modalStyles.modal,\n        ...modalStyles.overlay\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modalContent,\n        children: [/*#__PURE__*/_jsxDEV(\"dc-ui-button\", {\n          variant: \"link\",\n          size: \"small\",\n          type: \"button\",\n          align: \"center\",\n          icon: \"dc_close\",\n          style: modalStyles.closeModal,\n          onClick: toggleModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extracted Names:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: names.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"dc-ui-checkbox\", {\n          label: \"fffff\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"demo\",\n            id: \"demo\",\n            children: \"helo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"BSIr1rgxajMmuALZx6q9cIMZ3qA=\");\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Modal","_s","names","setNames","loading","setLoading","error","setError","modal","setModal","fetchData","response","get","xmlData","data","parser","DOMParser","xmlDoc","parseFromString","formatTags","getElementsByTagName","extractedNames","Array","from","map","format","nameTag","versionTag","cad","getAttribute","name","textContent","version","trim","document","body","classList","add","remove","toggleModal","prevModal","modalStyles","width","height","position","top","left","right","bottom","zIndex","display","alignItems","justifyContent","overlay","background","modalContent","padding","borderRadius","overflowY","closeModal","cursor","btnModal","children","fileName","_jsxFileName","lineNumber","columnNumber","message","variant","size","type","align","icon","onClick","style","tag","color","index","label","id","_c","$RefreshReg$"],"sources":["C:/Users/LGD1KOR/Desktop/react/my-app/src/Module.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from 'axios';\r\n\r\n\r\n// export default function Modal() {\r\n//   const [names, setNames] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await axios.get('https://webapi.partcommunity.com/cadqualifier.asp?apikey=e66120f9d9624823884cac1bf290ea88');\r\n//         const xmlData = response.data;\r\n\r\n//         // Parse the XML data\r\n//         const parser = new DOMParser();\r\n//         const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\r\n//         const formatTags = xmlDoc.getElementsByTagName('format');\r\n\r\n//         const extractedNames = Array.from(formatTags).map(format => {\r\n//           const nameTag = format.getElementsByTagName('name')[0];\r\n//           const versionTag = format.getElementsByTagName('version')[0];\r\n//           const cad = format.getAttribute('cad');\r\n\r\n//           const name = nameTag ? nameTag.textContent : '';\r\n//           const version = versionTag && versionTag.textContent ? versionTag.textContent : '';\r\n          \r\n//           return `${name} ${version} (${cad})`.trim();\r\n//         });\r\n\r\n//         // Update the state with the extracted names\r\n//         setNames(extractedNames);\r\n//       } catch (error) {\r\n//         setError(error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div>Error: {error.message}</div>;\r\n\r\n//   useEffect(() => {\r\n//     if (modal) {\r\n//       document.body.classList.add('active-modal');\r\n//       document.body.classList.add('disable-pointer-events');\r\n//     } else {\r\n//       document.body.classList.remove('active-modal');\r\n//       document.body.classList.remove('disable-pointer-events');\r\n//     }\r\n//   }, [modal]);\r\n\r\n//   const toggleModal = () => {\r\n//     setModal(prevModal => !prevModal);\r\n//   };\r\n\r\n//   const modalStyles = {\r\n//     modal: {\r\n//       width: '100vw',\r\n//       height: '100vh',\r\n//       position: 'fixed',\r\n//       top: 0,\r\n//       left: 0,\r\n//       right: 0,\r\n//       bottom: 0,\r\n//       zIndex: 1000,\r\n//     },\r\n//     overlay: {\r\n//       background: 'rgba(49,49,49,0.8)',\r\n//     },\r\n//     modalContent: {\r\n//       position: 'absolute',\r\n//       top: '40%',\r\n//       left: '50%',\r\n//       transform: 'translate(-50%, -50%)',\r\n//       lineHeight: 1.4,\r\n//       background: '#f1f1f1',\r\n//       padding: '14px 28px',\r\n//       borderRadius: '3px',\r\n//       maxWidth: '600px',\r\n//       minWidth: '300px',\r\n//       zIndex: 1001,\r\n//     },\r\n//     closeModal: {\r\n//       position: 'absolute',\r\n//       top: '10px',\r\n//       right: '10px',\r\n//     },\r\n//     btnModal: {\r\n//       width: '250px', \r\n//       height: '60px' \r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//     <dc-ui-button variant=\"primary\" size=\"normal\" type=\"button\" align=\"center\" icon=\"dc_download\" onClick={toggleModal} style={modalStyles.btnModal}>\r\n//           <dc-ui-text tag=\"span\" variant=\"small-text\" color=\"inherit\" text-align=\"center\">download</dc-ui-text>\r\n//       </dc-ui-button>\r\n//       {modal && (\r\n//         <div style={{ ...modalStyles.modal, ...modalStyles.overlay }}>\r\n//           <div onClick={toggleModal} style={{ ...modalStyles.modal, ...modalStyles.overlay }}></div>\r\n//           <div style={modalStyles.modalContent}>\r\n//             <h2><ul>\r\n//         {names.map((name, index) => (\r\n//           <li key={index}>{name}</li>\r\n//         ))}\r\n//       </ul> </h2>\r\n//             <dc-ui-button variant=\"link\" size=\"small\" type=\"button\" align=\"center\" icon=\"dc_close\" style={modalStyles.closeModal} onClick={toggleModal}>\r\n//            </dc-ui-button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Modal() {\r\n  const [names, setNames] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [modal, setModal] = useState(false); // Modal state\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://webapi.partcommunity.com/cadqualifier.asp?apikey=e66120f9d9624823884cac1bf290ea88');\r\n        const xmlData = response.data;\r\n\r\n        // Parse the XML data\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\r\n        const formatTags = xmlDoc.getElementsByTagName('format');\r\n\r\n        const extractedNames = Array.from(formatTags).map(format => {\r\n          const nameTag = format.getElementsByTagName('name')[0];\r\n          const versionTag = format.getElementsByTagName('version')[0];\r\n          const cad = format.getAttribute('cad');\r\n\r\n          const name = nameTag ? nameTag.textContent : '';\r\n          const version = versionTag && versionTag.textContent ? versionTag.textContent : '';\r\n          \r\n          return `${name} ${version} (${cad})`.trim();\r\n        });\r\n\r\n        // Update the state with the extracted names\r\n        setNames(extractedNames);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (modal) {\r\n      document.body.classList.add('active-modal');\r\n      document.body.classList.add('disable-pointer-events');\r\n    } else {\r\n      document.body.classList.remove('active-modal');\r\n      document.body.classList.remove('disable-pointer-events');\r\n    }\r\n  }, [modal]);\r\n\r\n  const toggleModal = () => {\r\n    setModal(prevModal => !prevModal);\r\n  };\r\n\r\n  const modalStyles = {\r\n    modal: {\r\n      width: '100vw',\r\n      height: '100vh',\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    overlay: {\r\n      background: 'rgba(49,49,49,0.8)',\r\n    },\r\n    modalContent: {\r\n      width: '400px', // Set the width of the modal content\r\n      height: '200px', // Set the height of the modal content\r\n      background: '#f1f1f1',\r\n      padding: '14px 28px',\r\n      borderRadius: '3px',\r\n      overflowY: 'auto', // Add vertical scroll if content exceeds height\r\n      position: 'relative',\r\n    },\r\n    closeModal: {\r\n      position: 'absolute',\r\n      top: '10px',\r\n      right: '10px',\r\n      cursor: 'pointer',\r\n    },\r\n    btnModal: {\r\n      width: '250px',\r\n      height: '60px',\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <dc-ui-button variant=\"primary\" size=\"normal\" type=\"button\" align=\"center\" icon=\"dc_download\" onClick={toggleModal} style={modalStyles.btnModal}>\r\n          <dc-ui-text tag=\"span\" variant=\"small-text\" color=\"inherit\" text-align=\"center\">download</dc-ui-text>\r\n      </dc-ui-button>\r\n      {modal && (\r\n        <div style={{ ...modalStyles.modal, ...modalStyles.overlay }}>\r\n          <div style={modalStyles.modalContent}>\r\n          <dc-ui-button variant=\"link\" size=\"small\" type=\"button\" align=\"center\" icon=\"dc_close\" style={modalStyles.closeModal} onClick={toggleModal}>\r\n          </dc-ui-button>\r\n            <h2>Extracted Names:</h2>\r\n            <ul>\r\n              {names.map((name, index) => (\r\n                <li key={index}>{name}</li>\r\n              ))}\r\n\r\n            </ul>\r\n            <dc-ui-checkbox label=\"fffff\">\r\n                    <input type=\"checkbox\" name=\"demo\" id=\"demo\">helo</input>\r\n              </dc-ui-checkbox>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
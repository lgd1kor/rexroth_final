{"ast":null,"code":"import { r as registerInstance, h, g as getElement } from './index-80864cdc.js';\nimport { i as injectFont } from './font-80789c7f.js';\nimport { g as getCss, i as injectCSS } from './observeOptions-74693e66.js';\nconst createStyles = (listOrderType, nested) => {\n  const styles = getCss({\n    '@global': {\n      ':host': {\n        fontFamily: 'Bosch Sans'\n      },\n      'ul, ol': {\n        paddingLeft: '1.25em',\n        marginLeft: nested ? '32px' : 0,\n        marginTop: 0,\n        marginBottom: 0\n      },\n      ul: {\n        listStyleType: 'square'\n      },\n      ol: Object.assign({}, listOrderType === 'alphabetically' ? {\n        listStyleType: 'lower-alpha'\n      } : {})\n    }\n  });\n  return styles;\n};\nconst DcUiList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.listType = null;\n    this.listOrderType = null;\n    this.nested = false;\n  }\n  componentWillLoad() {\n    injectFont();\n    const parent = this.el.parentElement.closest('dc-ui-list');\n    if (parent !== null) {\n      this.nested = true;\n      if (this.listType === null) {\n        this.listType = parent.listType;\n      }\n      if (this.listOrderType === null) {\n        this.listOrderType = this.oppositeListOrderType(parent.listOrderType);\n      }\n    } else {\n      if (this.listType === null) {\n        this.listType = 'unordered';\n      }\n      if (this.listOrderType === null) {\n        this.listOrderType = 'numbered';\n      }\n    }\n  }\n  oppositeListOrderType(listOrderType) {\n    return listOrderType === 'numbered' ? 'alphabetically' : 'numbered';\n  }\n  render() {\n    const Tag = this.listType === 'unordered' ? 'ul' : 'ol';\n    injectCSS(this.el, createStyles, this.listOrderType, this.nested);\n    return h(Tag, {\n      key: '5cb952eeb309fd690b8a752928a7f285b422586a'\n    }, h(\"slot\", {\n      key: 'e3459d8a34d1e1b5223a8a7cf249a9bf3ca66057'\n    }));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nexport { DcUiList as dc_ui_list };","map":{"version":3,"names":["createStyles","listOrderType","nested","styles","getCss","fontFamily","paddingLeft","marginLeft","marginTop","marginBottom","ul","listStyleType","ol","Object","assign","DcUiList","componentWillLoad","injectFont","parent","el","parentElement","closest","listType","oppositeListOrderType","render","Tag","injectCSS","h","key"],"sources":["C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_final\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-list\\list-styles.ts","C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_final\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-list\\dc-ui-list.tsx"],"sourcesContent":["import { getCss } from '../../utils';\r\nimport { TListOrderType } from './list-utils';\r\n\r\nexport const createStyles = (listOrderType: TListOrderType, nested: boolean): string => {\r\n  const styles = getCss({\r\n    '@global': {\r\n      ':host': {\r\n        fontFamily: 'Bosch Sans',\r\n      },\r\n\r\n      'ul, ol': {\r\n        paddingLeft: '1.25em',\r\n        marginLeft: nested ? '32px' : 0,\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n      },\r\n\r\n      ul: {\r\n        listStyleType: 'square',\r\n      },\r\n\r\n      ol: {\r\n        ...(listOrderType === 'alphabetically'\r\n          ? {\r\n              listStyleType: 'lower-alpha',\r\n            }\r\n          : {}),\r\n      },\r\n    },\r\n  });\r\n\r\n  return styles;\r\n};\r\n","import {Component, Element, h, Prop} from '@stencil/core';\r\nimport {TListOrderType, TListType} from \"./list-utils\";\r\nimport {injectCSS, injectFont} from \"../../utils\";\r\nimport {createStyles} from \"./list-styles\";\r\n\r\n@Component({\r\n  tag: 'dc-ui-list',\r\n  shadow: true,\r\n})\r\nexport class DcUiList {\r\n\r\n  @Element() el: HTMLElement;\r\n  @Prop() listType: TListType = null;\r\n  @Prop() listOrderType: TListOrderType = null;\r\n  @Prop() nested = false;\r\n\r\n  componentWillLoad() {\r\n    injectFont();\r\n\r\n    const parent = this.el.parentElement.closest('dc-ui-list');\r\n    if (parent !== null) {\r\n\r\n      this.nested = true;\r\n      if (this.listType === null) {\r\n        this.listType = parent.listType;\r\n      }\r\n      if (this.listOrderType === null) {\r\n        this.listOrderType = this.oppositeListOrderType(parent.listOrderType);\r\n      }\r\n\r\n    } else {\r\n\r\n      if (this.listType === null) {\r\n        this.listType = 'unordered';\r\n      }\r\n      if (this.listOrderType === null) {\r\n        this.listOrderType = 'numbered';\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  oppositeListOrderType(listOrderType) {\r\n    return listOrderType === 'numbered' ? 'alphabetically' : 'numbered';\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const Tag = this.listType === 'unordered' ? 'ul' : 'ol'\r\n\r\n    injectCSS(this.el, createStyles, this.listOrderType, this.nested);\r\n\r\n    return (\r\n      <Tag>\r\n        <slot></slot>\r\n      </Tag>\r\n    );\r\n  }\r\n\r\n}\r\n"],"mappings":";;;AAGO,MAAMA,YAAY,GAAGA,CAACC,aAA6B,EAAEC,MAAe;EACzE,MAAMC,MAAM,GAAGC,MAAM,CAAC;IACpB,SAAS,EAAE;MACT,OAAO,EAAE;QACPC,UAAU,EAAE;OACb;MAED,QAAQ,EAAE;QACRC,WAAW,EAAE,QAAQ;QACrBC,UAAU,EAAEL,MAAM,GAAG,MAAM,GAAG,CAAC;QAC/BM,SAAS,EAAE,CAAC;QACZC,YAAY,EAAE;OACf;MAEDC,EAAE,EAAE;QACFC,aAAa,EAAE;OAChB;MAEDC,EAAE,EAAAC,MAAA,CAAAC,MAAA,KACIb,aAAa,KAAK,gBAAgB,GAClC;QACEU,aAAa,EAAE;OAChB,GACD,EAAE;;GAGX,CAAC;EAEF,OAAOR,MAAM;AACf,CAAC;MCvBYY,QAAQ;;;oBAGW,IAAI;yBACM,IAAI;kBAC3B,KAAK;;EAEtBC,iBAAiBA,CAAA;IACfC,UAAU,EAAE;IAEZ,MAAMC,MAAM,GAAG,IAAI,CAACC,EAAE,CAACC,aAAa,CAACC,OAAO,CAAC,YAAY,CAAC;IAC1D,IAAIH,MAAM,KAAK,IAAI,EAAE;MAEnB,IAAI,CAAChB,MAAM,GAAG,IAAI;MAClB,IAAI,IAAI,CAACoB,QAAQ,KAAK,IAAI,EAAE;QAC1B,IAAI,CAACA,QAAQ,GAAGJ,MAAM,CAACI,QAAQ;;MAEjC,IAAI,IAAI,CAACrB,aAAa,KAAK,IAAI,EAAE;QAC/B,IAAI,CAACA,aAAa,GAAG,IAAI,CAACsB,qBAAqB,CAACL,MAAM,CAACjB,aAAa,CAAC;;KAGxE,MAAM;MAEL,IAAI,IAAI,CAACqB,QAAQ,KAAK,IAAI,EAAE;QAC1B,IAAI,CAACA,QAAQ,GAAG,WAAW;;MAE7B,IAAI,IAAI,CAACrB,aAAa,KAAK,IAAI,EAAE;QAC/B,IAAI,CAACA,aAAa,GAAG,UAAU;;;;EAOrCsB,qBAAqBA,CAACtB,aAAa;IACjC,OAAOA,aAAa,KAAK,UAAU,GAAG,gBAAgB,GAAG,UAAU;;EAIrEuB,MAAMA,CAAA;IAEJ,MAAMC,GAAG,GAAG,IAAI,CAACH,QAAQ,KAAK,WAAW,GAAG,IAAI,GAAG,IAAI;IAEvDI,SAAS,CAAC,IAAI,CAACP,EAAE,EAAEnB,YAAY,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAACC,MAAM,CAAC;IAEjE,OACEyB,CAAA,CAACF,GAAG;MAAAG,GAAA;IAAA,GACFD,CAAA;MAAAC,GAAA;IAAA,EAAa,CACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { r as registerInstance, h, g as getElement } from './index-80864cdc.js';\nimport { g as getCss, i as injectCSS } from './observeOptions-74693e66.js';\nconst createStyles = (listType, nested, isLast) => {\n  const styles = getCss({\n    '@global': {\n      'dc-ui-text': {\n        display: 'inline'\n      },\n      li: Object.assign({\n        position: 'relative',\n        marginBottom: nested || isLast ? '0' : '12px',\n        paddingLeft: listType === 'unordered' ? '0' : '0.25em'\n      }, listType === 'unordered' ? {\n        '&::after': {\n          content: '\"\"',\n          display: 'block',\n          position: 'absolute',\n          top: '0.625em',\n          left: '-0.75em',\n          width: '0.25em',\n          backgroundColor: 'black',\n          aspectRatio: '1'\n        },\n        '&::marker': {\n          color: 'transparent'\n        }\n      } : {\n        '&::marker': {\n          fontWeight: 'bold'\n        }\n      })\n    }\n  });\n  return styles;\n};\nconst DcUiListItem = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    const parent = this.el.closest('dc-ui-list');\n    this.listType = parent.listType;\n    this.nested = parent.parentElement.closest('dc-ui-list') !== null;\n    // check if this is the last item in the list\n    const nextEl = this.el.nextElementSibling;\n    if ((nextEl === null || nextEl === void 0 ? void 0 : nextEl.tagName.toLowerCase()) !== 'dc-ui-list-item') {\n      this.isLast = true;\n    }\n  }\n  componentDidRender() {\n    const hasNestedList = !!this.el.querySelector('dc-ui-list');\n    if (hasNestedList) {\n      this.textEl.remove();\n      Array.from(this.el.childNodes).forEach(child => {\n        this.nestedListSlotEl.appendChild(child);\n      });\n    } else {\n      this.nestedListSlotEl.remove();\n    }\n  }\n  render() {\n    injectCSS(this.el, createStyles, this.listType, this.nested, this.isLast);\n    return h(\"li\", {\n      key: '50c53f95737342fd071e9e2b4d6950dce0f6c030'\n    }, h(\"slot\", {\n      key: '8c3f5f2536756373d3fb48fed9bd96452474c0aa',\n      name: \"nested-list\",\n      ref: el => this.nestedListSlotEl = el\n    }), h(\"dc-ui-text\", {\n      key: '408a63d7d237dacffd0bcbd9757441df8e4b729c',\n      ref: el => this.textEl = el\n    }, h(\"slot\", {\n      key: 'd8c88f81331e840e0e77648544ead90f5c564c9e'\n    })));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nexport { DcUiListItem as dc_ui_list_item };","map":{"version":3,"names":["createStyles","listType","nested","isLast","styles","getCss","display","li","Object","assign","position","marginBottom","paddingLeft","content","top","left","width","backgroundColor","aspectRatio","color","fontWeight","DcUiListItem","componentWillLoad","parent","el","closest","parentElement","nextEl","nextElementSibling","tagName","toLowerCase","componentDidRender","hasNestedList","querySelector","textEl","remove","Array","from","childNodes","forEach","child","nestedListSlotEl","appendChild","render","injectCSS","h","key","name","ref"],"sources":["C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_final\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-list-item\\list-item-styles.ts","C:\\Users\\LGD1KOR\\Desktop\\rexroth_products_with_versions\\rexroth_final\\node_modules\\@boschrexroth\\nextgen-web-ui-toolkit\\dist\\esm\\src\\components\\dc-ui-list-item\\dc-ui-list-item.tsx"],"sourcesContent":["import { getCss } from '../../utils';\r\nimport { TListType } from '../dc-ui-list/list-utils';\r\n\r\nexport const createStyles = (listType: TListType, nested: boolean, isLast: boolean): string => {\r\n  const styles = getCss({\r\n    '@global': {\r\n      'dc-ui-text': {\r\n        display: 'inline',\r\n      },\r\n\r\n      li: {\r\n        position: 'relative',\r\n        marginBottom: nested || isLast ? '0' : '12px',\r\n        paddingLeft: listType === 'unordered' ? '0' : '0.25em',\r\n\r\n        ...(listType === 'unordered'\r\n          ? {\r\n              '&::after': {\r\n                content: '\"\"',\r\n                display: 'block',\r\n                position: 'absolute',\r\n                top: '0.625em',\r\n                left: '-0.75em',\r\n                width: '0.25em',\r\n                backgroundColor: 'black',\r\n                aspectRatio: '1',\r\n              },\r\n              '&::marker': {\r\n                color: 'transparent',\r\n              },\r\n            }\r\n          : {\r\n              '&::marker': {\r\n                fontWeight: 'bold',\r\n              },\r\n            }),\r\n      },\r\n    },\r\n  });\r\n\r\n  return styles;\r\n};\r\n","import { Component, h, Element } from '@stencil/core';\r\nimport { injectCSS } from '../../utils';\r\nimport { createStyles } from './list-item-styles';\r\nimport { TListType } from '../dc-ui-list/list-utils';\r\n\r\n@Component({\r\n  tag: 'dc-ui-list-item',\r\n  shadow: true,\r\n})\r\nexport class DcUiListItem {\r\n  @Element() el: HTMLElement;\r\n  listType: TListType;\r\n  nested: boolean;\r\n\r\n  nestedListSlotEl: Element;\r\n  textEl: Element;\r\n  isLast: boolean;\r\n\r\n  componentWillLoad() {\r\n    const parent = this.el.closest('dc-ui-list');\r\n    this.listType = parent.listType as TListType;\r\n    this.nested = parent.parentElement.closest('dc-ui-list') !== null;\r\n\r\n    // check if this is the last item in the list\r\n    const nextEl = this.el.nextElementSibling;\r\n    if (nextEl?.tagName.toLowerCase() !== 'dc-ui-list-item') {\r\n      this.isLast = true;\r\n    }\r\n  }\r\n\r\n  componentDidRender() {\r\n    const hasNestedList = !!this.el.querySelector('dc-ui-list');\r\n    if (hasNestedList) {\r\n      this.textEl.remove();\r\n      Array.from(this.el.childNodes).forEach((child) => {\r\n        this.nestedListSlotEl.appendChild(child);\r\n      });\r\n    } else {\r\n      this.nestedListSlotEl.remove();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    injectCSS(this.el, createStyles, this.listType, this.nested, this.isLast);\r\n\r\n    return (\r\n      <li>\r\n        <slot\r\n          name=\"nested-list\"\r\n          ref={(el) => (this.nestedListSlotEl = el)}></slot>\r\n        <dc-ui-text ref={(el) => (this.textEl = el)}>\r\n          <slot></slot>\r\n        </dc-ui-text>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;AAGO,MAAMA,YAAY,GAAGA,CAACC,QAAmB,EAAEC,MAAe,EAAEC,MAAe;EAChF,MAAMC,MAAM,GAAGC,MAAM,CAAC;IACpB,SAAS,EAAE;MACT,YAAY,EAAE;QACZC,OAAO,EAAE;OACV;MAEDC,EAAE,EAAAC,MAAA,CAAAC,MAAA;QACAC,QAAQ,EAAE,UAAU;QACpBC,YAAY,EAAET,MAAM,IAAIC,MAAM,GAAG,GAAG,GAAG,MAAM;QAC7CS,WAAW,EAAEX,QAAQ,KAAK,WAAW,GAAG,GAAG,GAAG;MAAQ,GAElDA,QAAQ,KAAK,WAAW,GACxB;QACE,UAAU,EAAE;UACVY,OAAO,EAAE,IAAI;UACbP,OAAO,EAAE,OAAO;UAChBI,QAAQ,EAAE,UAAU;UACpBI,GAAG,EAAE,SAAS;UACdC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,QAAQ;UACfC,eAAe,EAAE,OAAO;UACxBC,WAAW,EAAE;SACd;QACD,WAAW,EAAE;UACXC,KAAK,EAAE;;OAEV,GACD;QACE,WAAW,EAAE;UACXC,UAAU,EAAE;;OAEf;;GAGV,CAAC;EAEF,OAAOhB,MAAM;AACf,CAAC;MChCYiB,YAAY;;;;EASvBC,iBAAiBA,CAAA;IACf,MAAMC,MAAM,GAAG,IAAI,CAACC,EAAE,CAACC,OAAO,CAAC,YAAY,CAAC;IAC5C,IAAI,CAACxB,QAAQ,GAAGsB,MAAM,CAACtB,QAAqB;IAC5C,IAAI,CAACC,MAAM,GAAGqB,MAAM,CAACG,aAAa,CAACD,OAAO,CAAC,YAAY,CAAC,KAAK,IAAI;;IAGjE,MAAME,MAAM,GAAG,IAAI,CAACH,EAAE,CAACI,kBAAkB;IACzC,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,OAAO,CAACC,WAAW,EAAE,MAAK,iBAAiB,EAAE;MACvD,IAAI,CAAC3B,MAAM,GAAG,IAAI;;;EAItB4B,kBAAkBA,CAAA;IAChB,MAAMC,aAAa,GAAG,CAAC,CAAC,IAAI,CAACR,EAAE,CAACS,aAAa,CAAC,YAAY,CAAC;IAC3D,IAAID,aAAa,EAAE;MACjB,IAAI,CAACE,MAAM,CAACC,MAAM,EAAE;MACpBC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACb,EAAE,CAACc,UAAU,CAAC,CAACC,OAAO,CAAEC,KAAK;QAC3C,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAACF,KAAK,CAAC;OACzC,CAAC;KACH,MAAM;MACL,IAAI,CAACC,gBAAgB,CAACN,MAAM,EAAE;;;EAIlCQ,MAAMA,CAAA;IACJC,SAAS,CAAC,IAAI,CAACpB,EAAE,EAAExB,YAAY,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,MAAM,EAAE,IAAI,CAACC,MAAM,CAAC;IAEzE,OACE0C,CAAA;MAAAC,GAAA;IAAA,GACED,CAAA;MAAAC,GAAA;MACEC,IAAI,EAAC,aAAa;MAClBC,GAAG,EAAGxB,EAAE,IAAM,IAAI,CAACiB,gBAAgB,GAAGjB;IAAG,EAAS,EACpDqB,CAAA;MAAAC,GAAA;MAAYE,GAAG,EAAGxB,EAAE,IAAM,IAAI,CAACU,MAAM,GAAGV;IAAG,GACzCqB,CAAA;MAAAC,GAAA;IAAA,EAAa,CACF,CACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
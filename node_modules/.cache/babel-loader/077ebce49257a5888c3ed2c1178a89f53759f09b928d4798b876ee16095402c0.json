{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LGD1KOR\\\\Desktop\\\\react\\\\my-app\\\\src\\\\Preview2DApi.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// const Preview2DApi = ({ miDent }) => {\n//     const [data, setData] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [selectedImage, setSelectedImage] = useState(\"\");\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const params = {\n//                     apikey: 'e66120f9d9624823884cac1bf290ea88',\n//                     mident: miDent,\n//                     // mident: '{bosch_rexroth_cytro/power_units/std_power_units/cytropac_asmtab.prj},013 {LINEID=10}  {TYP=CYTROPAC: Hydraulic power unit},{CS=1X: Component series 10 to 19},{TS=20: 20 Litre},{DR=AF},{PC=1},{PM=AS04},{OP=2: Maximum operating pressure},{ST=E},{CT=WA},{FL=1: Return flow filter},{COL=7035: RAL 7035},{FD=UL},{PPATH=cytropac_asmtpl.prj},{BAH005=380},{AAF726=8.3},{AAB456=4000},{BAD915=AC},{AAC830=20},{BAC676=G1},{AAN523=Plug-in connection},{AAG402=1},{AAQ326=https://www.boschrexroth.com/ics/cat/?cat=Industrial-Hydraulics-Catalog&p=p943945},{AAJ413=G1},{BAI539=},{BAB706=}',\n//                 };\n//                 const queryString = new URLSearchParams(params).toString();\n//                 const url = `https://webapi.partcommunity.com/service/derivationviews?${queryString}`;\n//                 const response = await fetch(url);\n//                 if (!response.ok) {\n//                     throw new Error(`HTTP error! status: ${response.status}`);\n//                 }\n//                 const result = await response.json();\n//                 setData(result);\n//             } catch (error) {\n//                 console.error('Error fetching the data', error);\n//                 setError(error.message);\n//             }\n//         };\n\n//         fetchData();\n//     }, [miDent]); // Add an empty dependency array to call fetchData only once\n\n//     if (error) {\n//         return <div>Error: {error}</div>;\n//     }\n\n//     if (!data) {\n//         return <div>Loading...</div>;\n//     }\n\n//     const handleSelectionChange = (event) => {\n//         setSelectedImage(event.target.value);\n//     };\n\n//     return (\n//         <div>\n//             <select onChange={handleSelectionChange}>\n//                 <option value=\"\" disabled>Select an item</option>\n//                 {data.views.map((item, index) => (\n//                     <option key={index} value={item.imageUrl}>\n//                         {item.name}\n//                     </option>\n//                 ))}\n//             </select><br></br>\n//             {selectedImage && <img src={`https://webapi.partcommunity.com${selectedImage}`} style={{ width: '400px', height: '400px' }} />}\n//         </div>\n//     );\n// };\n\n// export default Preview2DApi;\nimport React, { useState, useEffect } from \"react\";\n// import './Preview2DApi.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview2DApi = ({\n  miDent\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const params = {\n          apikey: 'e66120f9d9624823884cac1bf290ea88',\n          mident: miDent\n        };\n        const queryString = new URLSearchParams(params).toString();\n        const url = `https://webapi.partcommunity.com/service/derivationviews?${queryString}`;\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        console.error('Error fetching the data', error);\n        setError(error.message);\n      }\n    };\n    fetchData();\n  }, [miDent]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 16\n    }, this);\n  }\n  const handleSelectionChange = event => {\n    setSelectedImage(\"\");\n    setIsLoading(true);\n    setSelectedImage(event.target.value);\n  };\n  const handleImageLoad = () => {\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleSelectionChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select an item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), data.views.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.imageUrl,\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fetching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 27\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://webapi.partcommunity.com${selectedImage}`,\n      alt: \"Selected item\",\n      onLoad: handleImageLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(Preview2DApi, \"CIsn+X4aX3T30iGZwRB4+hp9Yks=\");\n_c = Preview2DApi;\nexport default Preview2DApi;\nvar _c;\n$RefreshReg$(_c, \"Preview2DApi\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Preview2DApi","miDent","_s","data","setData","error","setError","selectedImage","setSelectedImage","isLoading","setIsLoading","fetchData","params","apikey","mident","queryString","URLSearchParams","toString","url","response","fetch","ok","Error","status","result","json","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSelectionChange","event","target","value","handleImageLoad","onChange","disabled","views","map","item","index","imageUrl","name","src","alt","onLoad","_c","$RefreshReg$"],"sources":["C:/Users/LGD1KOR/Desktop/react/my-app/src/Preview2DApi.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// const Preview2DApi = ({ miDent }) => {\r\n//     const [data, setData] = useState(null);\r\n//     const [error, setError] = useState(null);\r\n//     const [selectedImage, setSelectedImage] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             try {\r\n//                 const params = {\r\n//                     apikey: 'e66120f9d9624823884cac1bf290ea88',\r\n//                     mident: miDent,\r\n//                     // mident: '{bosch_rexroth_cytro/power_units/std_power_units/cytropac_asmtab.prj},013 {LINEID=10}  {TYP=CYTROPAC: Hydraulic power unit},{CS=1X: Component series 10 to 19},{TS=20: 20 Litre},{DR=AF},{PC=1},{PM=AS04},{OP=2: Maximum operating pressure},{ST=E},{CT=WA},{FL=1: Return flow filter},{COL=7035: RAL 7035},{FD=UL},{PPATH=cytropac_asmtpl.prj},{BAH005=380},{AAF726=8.3},{AAB456=4000},{BAD915=AC},{AAC830=20},{BAC676=G1},{AAN523=Plug-in connection},{AAG402=1},{AAQ326=https://www.boschrexroth.com/ics/cat/?cat=Industrial-Hydraulics-Catalog&p=p943945},{AAJ413=G1},{BAI539=},{BAB706=}',\r\n//                 };\r\n//                 const queryString = new URLSearchParams(params).toString();\r\n//                 const url = `https://webapi.partcommunity.com/service/derivationviews?${queryString}`;\r\n//                 const response = await fetch(url);\r\n//                 if (!response.ok) {\r\n//                     throw new Error(`HTTP error! status: ${response.status}`);\r\n//                 }\r\n//                 const result = await response.json();\r\n//                 setData(result);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching the data', error);\r\n//                 setError(error.message);\r\n//             }\r\n//         };\r\n\r\n//         fetchData();\r\n//     }, [miDent]); // Add an empty dependency array to call fetchData only once\r\n\r\n//     if (error) {\r\n//         return <div>Error: {error}</div>;\r\n//     }\r\n\r\n//     if (!data) {\r\n//         return <div>Loading...</div>;\r\n//     }\r\n\r\n//     const handleSelectionChange = (event) => {\r\n//         setSelectedImage(event.target.value);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <select onChange={handleSelectionChange}>\r\n//                 <option value=\"\" disabled>Select an item</option>\r\n//                 {data.views.map((item, index) => (\r\n//                     <option key={index} value={item.imageUrl}>\r\n//                         {item.name}\r\n//                     </option>\r\n//                 ))}\r\n//             </select><br></br>\r\n//             {selectedImage && <img src={`https://webapi.partcommunity.com${selectedImage}`} style={{ width: '400px', height: '400px' }} />}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Preview2DApi;\r\nimport React, { useState, useEffect } from \"react\";\r\n// import './Preview2DApi.css'; // Import the CSS file\r\n\r\nconst Preview2DApi = ({ miDent }) => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [selectedImage, setSelectedImage] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const params = {\r\n                    apikey: 'e66120f9d9624823884cac1bf290ea88',\r\n                    mident: miDent,\r\n                };\r\n                const queryString = new URLSearchParams(params).toString();\r\n                const url = `https://webapi.partcommunity.com/service/derivationviews?${queryString}`;\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const result = await response.json();\r\n                setData(result);\r\n            } catch (error) {\r\n                console.error('Error fetching the data', error);\r\n                setError(error.message);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [miDent]);\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    if (!data) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const handleSelectionChange = (event) => {\r\n        setSelectedImage(\"\");\r\n        setIsLoading(true);\r\n        setSelectedImage(event.target.value);\r\n    };\r\n\r\n    const handleImageLoad = () => {\r\n        setIsLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <select onChange={handleSelectionChange}>\r\n                <option value=\"\" disabled>Select an item</option>\r\n                {data.views.map((item, index) => (\r\n                    <option key={index} value={item.imageUrl}>\r\n                        {item.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <br></br>\r\n            {isLoading && <p>Fetching...</p>}\r\n            {selectedImage && (\r\n                <img \r\n                    src={`https://webapi.partcommunity.com${selectedImage}`} \r\n                    alt=\"Selected item\" \r\n                    onLoad={handleImageLoad}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview2DApi;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACZ,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,MAAM,GAAG;UACXC,MAAM,EAAE,kCAAkC;UAC1CC,MAAM,EAAEb;QACZ,CAAC;QACD,MAAMc,WAAW,GAAG,IAAIC,eAAe,CAACJ,MAAM,CAAC,CAACK,QAAQ,CAAC,CAAC;QAC1D,MAAMC,GAAG,GAAG,4DAA4DH,WAAW,EAAE;QACrF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC7D;QACA,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACpCrB,OAAO,CAACoB,MAAM,CAAC;MACnB,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACZqB,OAAO,CAACrB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CC,QAAQ,CAACD,KAAK,CAACsB,OAAO,CAAC;MAC3B;IACJ,CAAC;IAEDhB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,IAAII,KAAK,EAAE;IACP,oBAAON,OAAA;MAAA6B,QAAA,GAAK,SAAO,EAACvB,KAAK;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpC;EAEA,IAAI,CAAC7B,IAAI,EAAE;IACP,oBAAOJ,OAAA;MAAA6B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACrC1B,gBAAgB,CAAC,EAAE,CAAC;IACpBE,YAAY,CAAC,IAAI,CAAC;IAClBF,gBAAgB,CAAC0B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACxC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B3B,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIX,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAQuC,QAAQ,EAAEL,qBAAsB;MAAAL,QAAA,gBACpC7B,OAAA;QAAQqC,KAAK,EAAC,EAAE;QAACG,QAAQ;QAAAX,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAChD7B,IAAI,CAACqC,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxB5C,OAAA;QAAoBqC,KAAK,EAAEM,IAAI,CAACE,QAAS;QAAAhB,QAAA,EACpCc,IAAI,CAACG;MAAI,GADDF,KAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACTjC,OAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRvB,SAAS,iBAAIV,OAAA;MAAA6B,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC/BzB,aAAa,iBACVR,OAAA;MACI+C,GAAG,EAAE,mCAAmCvC,aAAa,EAAG;MACxDwC,GAAG,EAAC,eAAe;MACnBC,MAAM,EAAEX;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC9B,EAAA,CArEIF,YAAY;AAAAiD,EAAA,GAAZjD,YAAY;AAuElB,eAAeA,YAAY;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}